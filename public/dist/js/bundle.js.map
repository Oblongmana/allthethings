{"version":3,"sources":["app.js","directives/bcScannerDir.js","directives/modalContainerDir.js","directives/modalItemsDir.js","directives/modalLocationCreateDir.js","directives/modalStorageDir.js","directives/modalTrackDir.js","directives/modalUserCreateDir.js","directives/starRatingDir.js","directives/trackByDir.js","controllers/itemCreate.js","controllers/itemManage.js","controllers/locClass.js","controllers/locContainer.js","controllers/locCreate.js","controllers/locManage.js","controllers/mainCtrl.js","controllers/notificationPrimary.js","controllers/notificationSecondary.js","controllers/settings.js","controllers/trackBy.js","controllers/userCreate.js","controllers/userManage.js","services/authService.js","services/bcService.js","services/checkUserSrv.js","services/containerSrv.js","services/countryListSrv.js","services/deleteAllUsersSrv.js","services/getUserColumnsSrv.js","services/itemDeleteSrv.js","services/itemGetSrv.js","services/itemMainSrv.js","services/itemPostSrv.js","services/itemPutSrv.js","services/locationDeleteSrv.js","services/locationsListSrv.js","services/locationUpdateSrv.js","services/locClassSrv.js","services/locCreateSrv.js","services/modalService.js","services/postUserInfoSrv.js","services/settingsSrv.js","services/stateListSrv.js","services/trackByDeleteSrv.js","services/trackByGetSrv.js","services/trackByPostSrv.js","services/trackByPutSrv.js","services/updateUserSrv.js","services/userListSrv.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","otherwise","state","templateUrl","url","controller","directive","restrict","scope","$scope","bcService","barcode","storeBarcode","Quagga","window","resultsArr","counter","length","App","_lastResult","init","attachListeners","activateScanner","scanner","configureScanner","onDetected","result","push","codeResult","code","mc","mostCommon","console","log","$apply","stoppy","showBarcodeWindow","snd","play","bind","stop","removeEventListener","hideOverlay","showOverlay","addEventListener","start","cancelCb","document","querySelector","classList","add","button","self","clickListener","e","preventDefault","remove","selector","decoder","readers","locator","patchSize","fromSource","target","constraints","width","height","facingMode","arr","sort","a","b","filter","v","pop","Audio","modalService","template","ratingValue","max","onRatingSelected","link","elem","attrs","updateStars","stars","i","filled","toggle","index","rating","$watch","oldVal","newVal","trackByGetSrv","attr","$interval","itemMainSrv","itemGetSrv","itemPostSrv","itemPutSrv","itemDeleteSrv","locationsListSrv","userListSrv","settingsSrv","itemCreateTest","itemGetSrvTest","itemPostSrvTest","itemPutSrvTest","itemDeleteSrvTest","itemMainSrvTest","hideItemsModal","clearForm","$parent","modalShownItems","getElementById","reset","getBC","upc","itemCreateObj","has_package","has_multiPiece","is_consumable","repOther","replink","af_period","trackbyValues","itemsObj","repItem","userId","commonLocObj","loc_id","currentUser","getCurrentUser","then","thisUser","response","data","first_name","owner_id","id","originalPackaging","packageStatus","multiplePieces","multiPiece","isConsumable","consumable","rateFunction","sentimental_rating","today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","setAttribute","getLocations","getLocationsList","locations","getLocationsCustomList","locGrid","gridOptions","getDefaultLoc","getDefaultLocation","loc","description","locid","location_id","defaultLocation","gettrackbys","getTrackByList","trackbys","getUsers","getCustomUserList","users","enableRowSelection","enableRowHeaderSelection","multiSelect","enableSelectAll","enableFiltering","columnDefs","name","displayName","onRegisterApi","gridApi","selection","on","rowSelectionChanged","row","selected","isSelected","rowId","uid","rowObj","entity","splice","indexOf","common","locationId","locationOption","swapper","linked","createItem","loggedInUser","itemManageTest","ddList","ddLocList","rtnUsers","rtnLocs","nuid","nlid","useFrequency","value","betterBool","getGridData","getItemCustomList","getUserList","droplist","tempArr","rIndex","map","getLocaitonList","minW","maxW","wid","enableGridMenu","infiniteScrollRowsFromEnd","infiniteScrollUp","infiniteScrollDown","enableCellEdit","minWidth","maxWidth","pinnedLeft","editableCellTemplate","editDropdownValueLabel","editDropdownOptionsArray","type","cellFilter","cellTemplate","core","addToGridMenu","grid","columnVisibilityChanged","changedColumn","columnChanged","colDef","visible","enableDelete","edit","afterCellEdit","rowEntity","updateCont","rei","reo","Owner","rel","locationDescription","newUsersId","el","ind","newLocationsId","newQuantity","qty","nqty","nIQty","nFQty","frequency_qty","nWQty","warrenty_period_in_days","nSRQty","gridObj","date_added","frequency_period","img","is_part","last_accessed","locationID","original_package","other_common_loc_json","parent_item_id","purchase_date","purchase_price","purchase_reason","purchase_retailer","replace_radio_default","replacement_comment","replacement_link","resale_value","short_name","trackby_json","userID","update","updateObj","updateItem","locClassSrv","uiGridConstants","locClassTest","locClassServiceTest","modalView","hideStorageModal","locClassObj","modalShownStorage","getLocClasses","getLocClassesList","locClasses","createLocClassObj","upObj","cId","updateLocClass","delete","gridData","deleteLocClass","containerSrv","locContainerTest","containerServiceTest","hideContainerModal","container","modalShownContainer","getContainers","getContainerList","containers","createContainer","updateContainer","deleteContainer","locCreateSrv","locCtrlTest","locCreateServiceTest","locListServiceTest","hideLocationModal","locObj","modalShownLocation","containerObj","locationParentObj","setDefaults","cl","c","p","loc_class_id","undefined","container_id","parent_location_id","createLocation","exists","alert","submitLocationInfo","locationUpdateSrv","locationDeleteSrv","locManageTest","loc_desc","x_coordinate","y_coordinate","z_coordinate","deleteLocation","authService","checkUserSrv","controllerTest","loggedIn","login","logout","getUser","showStorageModal","refreshWindow","showTrackbyModal","modalShownTrackby","showItemsModal","showContainerModal","showLocationModal","showUserModal","modalShownUser","pageTitle","watchLocation","area","location","hash","settingsTest","sendArr","updateDefault","dl","d_location_id","updateDefaultLocation","trackByPostSrv","trackByPutSrv","trackByDeleteSrv","trackByTest","trackByGetSrvTest","trackByPostSrvTest","trackByPutSrvTest","trackByDeleteSrvTest","hideTrackbyModal","trackByObj","trackby_name","trackby_value","trackby_category","createTrackBy","updateTrackBy","deleteTrackBy","stateListSrv","countryListSrv","updateUserSrv","postUserInfoSrv","deleteAllUsersSrv","userCreateTest","stateListSrvTest","serviceTest","postUserInfoSrvTest","userServiceTest","deleteAllUsersServiceTest","countryListServiceTest","hideUserModal","userInfo","states","getStatesList","stateName","country","getcountryList","countryName","renter_rating","deactivateUserChecked","inactive","userStatus","submit","sName","stateObj","email","firstName","state_id","submitUserInfo","deleteUsers","deleteAllUsers","getUserColumnsSrv","userManageControllerTest","getUserColumnsSrvServiceTest","updateUserServiceTest","StateServiceTest","grid1Api","updatedUser","uId","expectedObj","last_name","phone","address1","address2","city","zip","auth_id","getId","country_id","updateUser","service","$http","authServiceTest","logMeIn","get","res","send","bc","method","httpResponse","JSON","stringify","getColumnList","deleteItem","getItemList","locationDeleteServiceTest","locationUpdateServiceTest","fireRefreshEventOnWindow","evt","createEvent","initEvent","dispatchEvent"],"mappings":"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","file":"bundle.js","sourcesContent":["angular.module('app', ['ui.router', 'ui.grid', 'ui.grid.selection', 'ui.grid.edit', 'ui.grid.resizeColumns', 'ui.grid.moveColumns', 'ui.grid.pinning', 'ui.grid.infiniteScroll'])\r\n    .config(function ($stateProvider, $urlRouterProvider) {\r\n        $urlRouterProvider.otherwise('/', \"\")\r\n        // .......................  authorization\r\n        // var authentication = {\r\n        //     authenticate: ($state, checkUserSrv) => {\r\n        //         checkUserSrv.getUser().then((response) => {\r\n        //             if (!response.data.isFirstTime) {\r\n        //                 event.preventDefault()\r\n        //                 $state.go('dashboard')\r\n        //             }\r\n        //         }).catch(error => {\r\n        //             event.preventDefault()\r\n        //             $state.go('home')\r\n        //         })\r\n        //     }\r\n        // }\r\n        $stateProvider\r\n            .state('home', {\r\n                templateUrl: '../views/home.html',\r\n                url: '/'\r\n            })\r\n            .state('dashboard', {\r\n                templateUrl: '../views/dashboard.html',\r\n                url: '/dashboard',\r\n                // resolve: authentication\r\n            })\r\n            .state('user_create_new', {\r\n                templateUrl: '../views/user_create.html',\r\n                url: '/user_create_new',\r\n                controller: 'userCreate',\r\n                // resolve: authentication\r\n            })\r\n            // .state('user_create', {\r\n            //     templateUrl: '../views/user_create.html',\r\n            //     url: '/user_create',\r\n            //     controller: 'userCreate',\r\n            //     // resolve: authentication\r\n            // })\r\n            .state('user_manage', {\r\n                templateUrl: '../views/user_manage.html',\r\n                url: '/user_manage',\r\n                controller: 'userManage',\r\n                // resolve: authentication\r\n            })\r\n            // .state('location_create', {\r\n            //     templateUrl: '../views/location_create.html',\r\n            //     url: '/location_create',\r\n            //     controller: 'locCreate',\r\n            //     // resolve: authentication\r\n            // })\r\n            // .state('loc_container', { // MOVE INTO MODAL\r\n            //     templateUrl: '../views/loc_container.html',\r\n            //     url: '/loc_container',\r\n            //     controller: 'locContainer',\r\n            //     // resolve: authentication\r\n            // })\r\n            // .state('loc_class', { // MOVE INTO MODAL\r\n            //     templateUrl: '../views/loc_class.html',\r\n            //     url: '/loc_class',\r\n            //     controller: 'locClass',\r\n            //     // resolve: authentication\r\n            // })\r\n            .state('location_manage', {\r\n                templateUrl: '../views/location_manage.html',\r\n                url: '/location_manage',\r\n                controller: 'locManage',\r\n                // resolve: authentication\r\n            })\r\n            .state('trackbys', { // MOVE INTO MODAL\r\n                templateUrl: '../views/trackbys.html',\r\n                url: '/trackbys',\r\n                controller: 'trackBy',\r\n                // resolve: authentication\r\n            })\r\n            .state('settings', { // MOVE INTO MODAL\r\n                templateUrl: '../views/settings.html',\r\n                url: '/settings',\r\n                controller: 'settings',\r\n                // resolve: authentication\r\n            })\r\n            // .state('item_create', { // MOVE INTO MODAL\r\n            //     templateUrl: '../views/item_create.html',\r\n            //     url: '/item_create',\r\n            //     controller: 'itemCreate',\r\n            //     // resolve: authentication\r\n            // })\r\n            .state('item_manage', { // MOVE INTO MODAL\r\n                templateUrl: '../views/item_manage.html',\r\n                url: '/item_manage',\r\n                controller: 'itemManage',\r\n                // resolve: authentication\r\n            })\r\n    })","angular.module('app').directive('bcScanner',\r\n    function () {\r\n        return {\r\n            restrict: 'E',\r\n            templateUrl: '../views/barcodeScanner.html',\r\n            scope: '@',\r\n            controller: ($scope, bcService) => {\r\n                // .................... variables\r\n                $scope.barcode\r\n                $scope.storeBarcode = () => bcService.storeBarcode($scope.barcode)\r\n\r\n                // .................... quagga barcode scanner\r\n                var Quagga = window.Quagga;\r\n                var resultsArr = []\r\n                var counter = resultsArr.length\r\n                var App = {\r\n                    _lastResult: null,\r\n                    init: function () {\r\n                        this.attachListeners();\r\n                    },\r\n                    activateScanner: function () {\r\n                        var scanner = this.configureScanner('.overlay__content'),\r\n                            onDetected = function (result) {\r\n                                resultsArr.push(result.codeResult.code)\r\n                                counter = resultsArr.length\r\n                                // console.log(\"On Detected :\", resultsArr)\r\n                                // console.log(\"counter = \", counter)\r\n                                if (counter === 10) {\r\n                                    var mc = mostCommon(resultsArr)\r\n                                    console.log(\"most common\", mc)\r\n                                    $scope.barcode = mc\r\n                                    $scope.storeBarcode()\r\n                                    $scope.$apply()\r\n                                    $scope.stoppy()\r\n                                    $scope.showBarcodeWindow = false\r\n                                    $scope.$apply()\r\n                                    snd.play()\r\n                                }\r\n                            }.bind(this),\r\n                            stop = function () {\r\n                                scanner.stop();  // should also clear all event-listeners?\r\n                                scanner.removeEventListener('detected', onDetected);\r\n                                this.hideOverlay();\r\n                                this.attachListeners();\r\n                            }.bind(this);\r\n\r\n                        this.showOverlay(stop);\r\n                        console.log(\"activateScanner\");\r\n                        scanner.addEventListener('detected', onDetected).start();\r\n                    },\r\n                    showOverlay: function (cancelCb) {\r\n                        $scope.showBarcodeWindow = true\r\n                        $scope.$apply()\r\n                        document.querySelector('.container ')\r\n                            .classList.add('hide');\r\n                        document.querySelector('.overlay--inline')\r\n                            .classList.add('show');\r\n                        $scope.stoppy = () => {\r\n                            cancelCb();\r\n                        };\r\n                    },\r\n                    attachListeners: function () {\r\n                        var button = document.querySelector('button.scan'),\r\n                            self = this;\r\n\r\n                        button.addEventListener(\"click\", function clickListener(e) {\r\n                            e.preventDefault();\r\n                            button.removeEventListener(\"click\", clickListener);\r\n                            self.activateScanner();\r\n                        });\r\n                    },\r\n                    hideOverlay: function () {\r\n                        document.querySelector('.container ')\r\n                            .classList.remove('hide');\r\n                        document.querySelector('.overlay--inline')\r\n                            .classList.remove('show');\r\n                        $scope.showBarcodeWindow = false\r\n                    },\r\n                    configureScanner: function (selector) {\r\n                        var scanner = Quagga\r\n                            .decoder({ readers: ['ean_reader'] })\r\n                            .locator({ patchSize: 'medium' })\r\n                            .fromSource({\r\n                                target: selector,\r\n                                constraints: {\r\n                                    width: 600,\r\n                                    height: 600,\r\n                                    facingMode: \"environment\"\r\n                                }\r\n                            });\r\n                        return scanner;\r\n                    }\r\n                };\r\n                App.init();\r\n\r\n                // .................... take results array and get the average\r\n                const mostCommon = (arr) => {\r\n                    return arr.sort((a, b) =>\r\n                        arr.filter(v => v === a).length\r\n                        - arr.filter(v => v === b).length\r\n                    ).pop()\r\n                }\r\n                // .................... play a sound\r\n                var snd = new Audio(\"../audio/cameraOne.wav\")\r\n\r\n                // .................... hide / show playback window\r\n                $scope.showBarcodeWindow = false\r\n            }\r\n\r\n        };\r\n    }\r\n);","angular.module('app').directive('modalContainerDir', function(){\r\n    return {\r\n        templateUrl: '../views/loc_container.html'\r\n        , scope: {}\r\n        , controller: 'locContainer'\r\n    }\r\n})","angular.module('app').directive('modalItemsDir', function(){\r\n    return {\r\n        templateUrl: '../views/item_create.html'\r\n        , scope: {}\r\n        , controller: 'itemCreate'\r\n    }\r\n})\r\n\r\n","angular.module('app').directive('modalLocationCreateDir', function(){\r\n    return {\r\n        templateUrl: '../views/location_create.html'\r\n        , scope: {}\r\n        , controller: 'locCreate'\r\n    }\r\n})","angular.module('app').directive('modalStorageDir', function(){\r\n    return {\r\n        templateUrl: '../views/loc_class.html'\r\n        , scope: {}\r\n        , controller: 'locClass'\r\n    }\r\n})","angular.module('app').directive('modalTrackDir', function(modalService){\r\n    return {\r\n        templateUrl: '../views/trackbys.html'\r\n        , scope: {}\r\n        , controller: 'trackBy'\r\n    }\r\n})\r\n\r\n","angular.module('app').directive('modalUserCreateDir', function(){\r\n    return {\r\n        templateUrl: '../views/user_create.html'\r\n        , scope: {}\r\n        , controller: 'userCreate'\r\n    }\r\n})","angular.module('app').directive('starRating', \r\n    function () {\r\n        return {\r\n            restrict: 'A',\r\n            template: '<ul class=\"rating\">'\r\n            + '\t<li ng-repeat=\"star in stars\" ng-class=\"star\" ng-click=\"toggle($index)\">'\r\n            + '\\u2605'\r\n            + '</li>'\r\n            + '</ul>',\r\n            scope: {\r\n                ratingValue: '=',\r\n                max: '=',\r\n                onRatingSelected: '&'\r\n            },\r\n            link: function (scope, elem, attrs) {\r\n                var updateStars = function () {\r\n                    scope.stars = [];\r\n                    for (var i = 0; i < scope.max; i++) {\r\n                        scope.stars.push({\r\n                            filled: i < scope.ratingValue\r\n                        });\r\n                    }\r\n                };\r\n\r\n                scope.toggle = function (index) {\r\n                    scope.ratingValue = index + 1;\r\n                    scope.onRatingSelected({\r\n                        rating: index + 1\r\n                    });\r\n                };\r\n\r\n                scope.$watch('ratingValue',\r\n                    function (oldVal, newVal) {\r\n                        if (newVal) {\r\n                            updateStars();\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        };\r\n    }\r\n);","angular.module('app').directive('trackByDir', function (trackByGetSrv) {\r\n  return {\r\n    restrict: 'E'\r\n    , link: (scope, elem, attr) => {\r\n      // // .................... get list of trackby types and grid information\r\n      // $scope.gettrackbys = () => trackByGetSrv.getTrackByList().then((response) => {\r\n      //   $scope.trackbys = response.data\r\n      // })\r\n      // $scope.gettrackbys()\r\n      // < div ng-repeat=\"trackby in trackbys\" >\r\n      //     <input type=\"text\" placeholder=\"trackby.[name]\" ng-model=\"trackby.value\">\r\n      // </div>\r\n    }\r\n  };\r\n});","angular.module('app').controller('itemCreate', function ($scope, $interval, bcService, itemMainSrv, itemGetSrv, itemPostSrv, itemPutSrv, itemDeleteSrv, locationsListSrv, trackByGetSrv, userListSrv, settingsSrv) {\r\n    // // »»»»»»»»»»»»»»»»»»»║  TESTS \r\n    $scope.itemCreateTest = 'itemCreate controller is connected and operational'\r\n    $scope.itemGetSrvTest = itemGetSrv.itemGetSrvTest\r\n    $scope.itemPostSrvTest = itemPostSrv.itemPostSrvTest\r\n    $scope.itemPutSrvTest = itemPutSrv.itemPutSrvTest\r\n    $scope.itemDeleteSrvTest = itemDeleteSrv.itemDeleteSrvTest\r\n    $scope.itemMainSrvTest = itemMainSrv.itemMainSrvTest\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  MODAL CONTROLS\r\n    $scope.hideItemsModal = () => {\r\n        $scope.clearForm()\r\n        $scope.$parent.modalShownItems = false\r\n    }\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ CLEAR FORM\r\n    $scope.clearForm = () => document.getElementById(\"itemCreateForm\").reset()\r\n\r\n    // test barcode from service\r\n    $scope.getBC = () => {\r\n        $scope.barcode = bcService.upc\r\n        console.log($scope.barcode)\r\n    }\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  VARIABLES\r\n    $scope.itemCreateObj = {\r\n        has_package: false\r\n        , has_multiPiece: false\r\n        , is_consumable: false\r\n        , repOther: null\r\n        , replink: null\r\n        , af_period: \"Day\"\r\n    }\r\n\r\n\r\n    $scope.trackbyValues = {}\r\n    const itemsObj = $scope.itemCreateObj\r\n    $scope.replink = 'replink'\r\n    $scope.repItem = $scope.replink\r\n    $scope.userId = {}\r\n    const commonLocObj = { loc_id: [] }\r\n\r\n    // .................... get current user\r\n    $scope.currentUser = () => itemMainSrv.getCurrentUser().then(response => {\r\n        // console.log(response.data)\r\n        $scope.thisUser = response.data.first_name\r\n        $scope.itemCreateObj.owner_id = response.data.id\r\n        $scope.userId.id = response.data.id\r\n    })\r\n    $scope.currentUser()\r\n    // .................... original package checkbox\r\n    $scope.originalPackaging = () => $scope.itemCreateObj.has_package = $scope.packageStatus\r\n\r\n    // .................... multiple piece checkbox\r\n    $scope.multiplePieces = () => $scope.itemCreateObj.has_multiPiece = $scope.multiPiece\r\n\r\n    // .................... consumable checkbox\r\n    $scope.isConsumable = () => $scope.itemCreateObj.is_consumable = $scope.consumable\r\n\r\n    // .................... sets sentimental value\r\n    $scope.rating = 1;\r\n    $scope.rateFunction = (rating) => $scope.itemCreateObj.sentimental_rating = rating\r\n\r\n    // .................... sets max date allowed\r\n    // <input id=\"datefield\" type='date' max='2000-13-13'></input>\r\n    var today = new Date();\r\n    var dd = today.getDate();\r\n    var mm = today.getMonth() + 1; //January is 0!\r\n    var yyyy = today.getFullYear();\r\n    if (dd < 10) {\r\n        dd = '0' + dd\r\n    }\r\n    if (mm < 10) {\r\n        mm = '0' + mm\r\n    }\r\n    today = yyyy + '-' + mm + '-' + dd;\r\n    document.getElementById(\"datefield\").setAttribute(\"max\", today);\r\n\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  GET LOCATION LIST\r\n    $scope.getLocations = () => locationsListSrv.getLocationsList().then(response => $scope.locations = response.data)\r\n    $scope.getLocations()\r\n\r\n    // .................... get custom list of locations \r\n    $scope.getLocations = () => locationsListSrv.getLocationsCustomList().then(response => {\r\n        var locGrid = response.data\r\n        $scope.gridOptions.data = locGrid\r\n    })\r\n    $scope.getLocations()\r\n\r\n    // .................... get default location\r\n    $scope.getDefaultLoc = () => settingsSrv.getDefaultLocation().then(response => {\r\n        $scope.loc = response.data[0].description;\r\n        $scope.locid = response.data[0].location_id;\r\n        $scope.defaultLocation = $scope.loc\r\n        $scope.itemCreateObj.location_id = $scope.locid\r\n    })\r\n    $scope.getDefaultLoc()\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ GET A LIST OF ALL TRACKBYS\r\n    $scope.gettrackbys = () => trackByGetSrv.getTrackByList().then(response => {\r\n        // console.log(response.data)\r\n        $scope.trackbys = response.data\r\n    })\r\n    $scope.gettrackbys()\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ GET USERS LIST\r\n    $scope.getUsers = () => userListSrv.getCustomUserList().then(response => $scope.users = response.data)\r\n    $scope.getUsers()\r\n\r\n    // .................... columns and data\r\n    $scope.gridOptions = {\r\n        enableRowSelection: true\r\n        , enableRowHeaderSelection: true\r\n        , multiSelect: true\r\n        , enableSelectAll: false\r\n        , enableFiltering: true\r\n        , columnDefs: [\r\n            // { name: 'id', enableCellEdit: false, width: 50 }, \r\n            { name: 'loc_desc', displayName: 'Description' }, { name: 'loc_container', displayName: 'Container' }\r\n        ]\r\n        , onRegisterApi: (gridApi) => {\r\n            gridApi.selection.on.rowSelectionChanged($scope, function (row) {\r\n                $scope.selected = row.isSelected\r\n                $scope.rowId = row.uid\r\n                $scope.rowObj = row.entity\r\n                $scope.selected === true ? commonLocObj.loc_id.push($scope.rowObj.id) : commonLocObj.loc_id.splice(commonLocObj.loc_id.indexOf($scope.rowObj.id), 1)\r\n                $scope.itemCreateObj.common = commonLocObj\r\n            })\r\n        }\r\n    }\r\n\r\n    $scope.locationId = () => $scope.itemCreateObj.location_id = $scope.locationOption.id\r\n\r\n    // .................... radio control\r\n    $scope.swapper = () => $scope.linked = !$scope.linked\r\n\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  CREATE ITEMS\r\n    $scope.createItem = () => {\r\n\r\n        $scope.itemCreateObj.repItem = $scope.repItem\r\n        let loggedInUser = $scope.itemCreateObj.owner_id\r\n        if (loggedInUser !== $scope.userId.id) { $scope.itemCreateObj.owner_id = $scope.userId.id }\r\n        $scope.itemCreateObj.trackbys = $scope.trackbyValues\r\n        $scope.itemCreateObj.upc = $scope.barcode\r\n        $scope.clearForm()\r\n        // console.log(itemsObj)//this is the object that will be sent to the server\r\n        itemPostSrv.createItem(itemsObj)\r\n    }\r\n})","angular.module('app').controller('itemManage', function ($scope, bcService, $interval, itemGetSrv, itemPostSrv, itemPutSrv, itemDeleteSrv, userListSrv, locationsListSrv) {\r\n    // »»»»»»»»»»»»»»»»»»»║  TESTS \r\n    $scope.itemManageTest = 'itemManage controller is connected and operational'\r\n    $scope.itemGetSrvTest = itemGetSrv.itemGetSrvTest\r\n    $scope.itemPostSrvTest = itemPostSrv.itemPostSrvTest\r\n    $scope.itemPutSrvTest = itemPutSrv.itemPutSrvTest\r\n    $scope.itemDeleteSrvTest = itemDeleteSrv.itemDeleteSrvTest\r\n    // VARIABLES\r\n    var ddList = []\r\n    var ddLocList = []\r\n    var rtnUsers = []\r\n    var rtnLocs = []\r\n    var nuid = 0\r\n    var nlid = 0\r\n    var useFrequency = [{ id: 'Day', value: 'Day' }, { id: 'Week', value: 'Week' }, { id: 'Month', value: 'Month' }, { id: 'Year', value: 'Year' }]\r\n    var betterBool = [{ id: true, value: true }, { id: false, value: false }]\r\n\r\n    // .................... get item grid list\r\n    $scope.getGridData = () => itemGetSrv.getItemCustomList().then((response) => $scope.gridOptions.data = response.data)\r\n    $scope.getGridData()\r\n\r\n    // .................... get list of users\r\n\r\n    $scope.getUserList = () => userListSrv.getUserList().then((response) => {\r\n        rtnUsers = response.data\r\n        let droplist = rIndex => {\r\n            let tempArr = {}\r\n            tempArr.id = rIndex.first_name\r\n            tempArr.value = rIndex.first_name\r\n            ddList.push(tempArr)\r\n        }\r\n        rtnUsers.map(droplist)\r\n    })\r\n    $scope.getUserList()\r\n\r\n    // .................... get list of Locaitons\r\n\r\n    $scope.getLocaitonList = () => locationsListSrv.getLocationsList().then((response) => {\r\n        rtnLocs = response.data\r\n        let droplist = rIndex => {\r\n            let tempArr = {}\r\n            tempArr.id = rIndex.description\r\n            tempArr.value = rIndex.description\r\n            ddLocList.push(tempArr)\r\n        }\r\n        rtnLocs.map(droplist)\r\n    })\r\n    $scope.getLocaitonList()\r\n\r\n\r\n    // .................... columns and data\r\n    const minW = 75\r\n    const maxW = 500\r\n    const wid = 150\r\n\r\n    $scope.gridOptions = {\r\n        enableRowSelection: true\r\n        , enableRowHeaderSelection: false\r\n        , multiSelect: false\r\n        , enableSelectAll: false\r\n        , enableGridMenu: true\r\n        , enableFiltering: true\r\n        , infiniteScrollRowsFromEnd: 25\r\n        , infiniteScrollUp: true\r\n        , infiniteScrollDown: true\r\n        , columnDefs: [\r\n            { name: 'id', displayName: 'Id', enableCellEdit: false, minWidth: minW, width: 75, maxWidth: maxW, pinnedLeft: true }\r\n            , { name: 'Owner', displayName: 'Owner', editableCellTemplate: 'ui-grid/dropdownEditor', minWidth: minW, width: 75, maxWidth: maxW, editDropdownValueLabel: 'value', editDropdownOptionsArray: ddList, pinnedLeft: true }\r\n            , { name: 'short_name', minWidth: minW, width: 200, maxWidth: maxW, pinnedLeft: true }\r\n            , { name: 'qty', type: 'number', minWidth: minW, width: 75, maxWidth: maxW, pinnedLeft: true }\r\n            , { name: 'description', minWidth: minW, width: wid, maxWidth: maxW }\r\n            , { name: 'date_added', type: 'date', cellFilter: 'date', minWidth: minW, width: 250, maxWidth: maxW }\r\n            , { name: 'upc', minWidth: minW, width: wid, maxWidth: maxW }\r\n            , { name: 'frequency_period', displayName: 'Frequency of Use Period', editableCellTemplate: 'ui-grid/dropdownEditor', minWidth: minW, width: wid, maxWidth: maxW, editDropdownOptionsArray: useFrequency }\r\n            , { name: 'frequency_qty', type: 'number', displayName: 'Times Per Period', minWidth: minW, width: wid, maxWidth: maxW }\r\n            , { name: 'img', displayName: 'Image', enableCellEdit: false, minWidth: minW, width: wid, maxWidth: maxW }\r\n            , { name: 'is_consumable', displayName: 'Consumable', editableCellTemplate: 'ui-grid/dropdownEditor', minWidth: minW, width: wid, maxWidth: maxW, editDropdownOptionsArray: betterBool }\r\n            , { name: 'is_part', displayName: 'Part', editableCellTemplate: 'ui-grid/dropdownEditor', minWidth: minW, width: wid, maxWidth: maxW, editDropdownOptionsArray: betterBool }\r\n            , { name: 'last_accessed', type: 'date', cellFilter: 'date', minWidth: minW, width: wid, maxWidth: maxW }\r\n            , { name: 'locationDescription', editableCellTemplate: 'ui-grid/dropdownEditor', minWidth: minW, width: 250, maxWidth: maxW, editDropdownValueLabel: 'value', editDropdownOptionsArray: ddLocList }\r\n            // , { name: 'locationID', minWidth: minW, width: wid, maxWidth: maxW }\r\n            , { name: 'original_package', displayName: 'Have Package', editableCellTemplate: 'ui-grid/dropdownEditor', minWidth: minW, width: wid, maxWidth: maxW, editDropdownOptionsArray: betterBool }\r\n            , { name: 'other_common_loc_json', minWidth: minW, width: '100%', maxWidth: maxW }\r\n            // , { name: 'parent_item_id', minWidth: minW, width: wid, maxWidth: maxW }\r\n            , { name: 'purchase_date', type: 'date', cellFilter: 'date', minWidth: minW, width: wid, maxWidth: maxW }\r\n            , { name: 'purchase_price', minWidth: minW, width: wid, maxWidth: maxW }\r\n            , { name: 'purchase_reason', minWidth: minW, width: wid, maxWidth: maxW }\r\n            , { name: 'purchase_retailer', minWidth: minW, width: wid, maxWidth: maxW }\r\n            // , { name: 'replace_radio_default', minWidth: minW, width: wid, maxWidth: maxW }\r\n            , { name: 'replacement_comment', minWidth: minW, width: 250, maxWidth: maxW }\r\n            , { name: 'replacement_link', cellTemplate: '<div class=\"ui-grid-cell-contents\"><a href=\"{{ COL_FIELD }}\" target=\"_blank\">View Item</a></div>', minWidth: minW, width: 250, maxWidth: maxW }\r\n            , { name: 'resale_value', minWidth: minW, width: wid, maxWidth: maxW }\r\n            , { name: 'sentimental_rating', type: 'number', minWidth: minW, width: 200, maxWidth: maxW }\r\n            , { name: 'trackby_json', displayName: 'Track-By', minWidth: minW, width: '100%', maxWidth: maxW }\r\n            // , { name: 'userID', minWidth: minW, width: wid, maxWidth: maxW }\r\n            , { name: 'warrenty_period_in_days', displayName: 'Warrenty (days)', type: 'number', minWidth: minW, width: wid, maxWidth: maxW }\r\n        ]\r\n\r\n        , onRegisterApi: (gridApi) => {\r\n            $scope.gridApi = gridApi;\r\n\r\n            // interval of zero just to allow the directive to have initialized\r\n            $interval(function () {\r\n                gridApi.core.addToGridMenu(gridApi.grid, []);\r\n            }, 0, 1);\r\n\r\n            gridApi.core.on.columnVisibilityChanged($scope, function (changedColumn) {\r\n                $scope.columnChanged = { name: changedColumn.colDef.name, visible: changedColumn.colDef.visible };\r\n            });\r\n\r\n            gridApi.selection.on.rowSelectionChanged($scope, function (row) {\r\n                $scope.selected = row.isSelected\r\n                $scope.rowId = row.uid\r\n                $scope.rowObj = row.entity\r\n                $scope.enableDelete = false\r\n                $scope.selected === true ? $scope.enableDelete = false : $scope.enableDelete = true\r\n            })\r\n\r\n            // ...........   update the location on lost focus, tab, or enter\r\n            gridApi.edit.on.afterCellEdit($scope, function (rowEntity) {\r\n                $scope.updateCont = rowEntity\r\n                let rei = rowEntity.id\r\n                // ............. validation for owner, location, qty\r\n                let reo = rowEntity.Owner\r\n                let rel = rowEntity.locationDescription\r\n                let newUsersId = rtnUsers.filter((el, ind, arr) => { if (el.first_name === reo) { nuid = el.id } })\r\n                let newLocationsId = rtnLocs.filter((el, ind, arr) => { if (el.description === rel) { nlid = el.id } })\r\n                let newQuantity = (qty) => {\r\n                    let nqty = 0\r\n                    qty < 0 ? nqty = qty / 0 : nqty = qty\r\n                    return nqty;\r\n                }\r\n                var nIQty = newQuantity(rowEntity.qty)\r\n                var nFQty = newQuantity(rowEntity.frequency_qty)\r\n                var nWQty = newQuantity(rowEntity.warrenty_period_in_days)\r\n                var nSRQty = newQuantity(rowEntity.sentimental_rating)\r\n                var gridObj = { Owner: rowEntity.Owner, date_added: rowEntity.date_added, description: rowEntity.description, frequency_period: rowEntity.frequency_period, frequency_qty: nFQty, id: rowEntity.id, img: rowEntity.img, is_consumable: rowEntity.is_consumable, is_part: rowEntity.is_part, last_accessed: rowEntity.last_accessed, locationDescription: rowEntity.locationDescription, locationID: nlid, original_package: rowEntity.original_package, other_common_loc_json: rowEntity.other_common_loc_json, parent_item_id: rowEntity.parent_item_id, purchase_date: rowEntity.purchase_date, purchase_price: rowEntity.purchase_price, purchase_reason: rowEntity.purchase_reason, purchase_retailer: rowEntity.purchase_retailer, qty: nIQty, replace_radio_default: rowEntity.replace_radio_default, replacement_comment: rowEntity.replacement_comment, replacement_link: rowEntity.replacement_link, resale_value: rowEntity.resale_value, sentimental_rating: nSRQty, short_name: rowEntity.short_name, trackby_json: rowEntity.trackby_json, upc: rowEntity.upc, userID: nuid, warrenty_period_in_days: nWQty }\r\n                // ............. call update\r\n                $scope.update(rei, gridObj)\r\n            })\r\n        }\r\n    }\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  UPDATE ITEMS\r\n    $scope.update = (id, updateObj) => itemPutSrv.updateItem(id, updateObj)\r\n\r\n\r\n// // .................... variables\r\n// $scope.barcode\r\n// $scope.storeBarcode = () => bcService.storeBarcode($scope.barcode)\r\n\r\n// // .................... quagga barcode scanner\r\n// var Quagga = window.Quagga;\r\n// var resultsArr = []\r\n// var counter = resultsArr.length\r\n// var App = {\r\n//     _lastResult: null,\r\n//     init: function () {\r\n//         this.attachListeners();\r\n//     },\r\n//     activateScanner: function () {\r\n//         var scanner = this.configureScanner('.overlay__content'),\r\n//             onDetected = function (result) {\r\n//                 resultsArr.push(result.codeResult.code)\r\n//                 counter = resultsArr.length\r\n//                 // console.log(\"On Detected :\", resultsArr)\r\n//                 // console.log(\"counter = \", counter)\r\n//                 if (counter === 10) {\r\n//                     var mc = mostCommon(resultsArr)\r\n//                     console.log(\"most common\", mc)\r\n//                     $scope.barcode = mc\r\n//                     $scope.storeBarcode()\r\n//                     $scope.$apply()\r\n//                     $scope.stoppy()\r\n//                     $scope.showBarcodeWindow = false\r\n//                     $scope.$apply()\r\n//                     snd.play()\r\n//                 }\r\n//             }.bind(this),\r\n//             stop = function () {\r\n//                 scanner.stop();  // should also clear all event-listeners?\r\n//                 scanner.removeEventListener('detected', onDetected);\r\n//                 this.hideOverlay();\r\n//                 this.attachListeners();\r\n//             }.bind(this);\r\n\r\n//         this.showOverlay(stop);\r\n//         console.log(\"activateScanner\");\r\n//         scanner.addEventListener('detected', onDetected).start();\r\n//     },\r\n//     showOverlay: function (cancelCb) {\r\n//         $scope.showBarcodeWindow = true\r\n//         $scope.$apply()\r\n//         document.querySelector('.container ')\r\n//             .classList.add('hide');\r\n//         document.querySelector('.overlay--inline')\r\n//             .classList.add('show');\r\n//         $scope.stoppy = () => {\r\n//             cancelCb();\r\n//         };\r\n//     },\r\n//     attachListeners: function () {\r\n//         var button = document.querySelector('button.scan'),\r\n//             self = this;\r\n\r\n//         button.addEventListener(\"click\", function clickListener(e) {\r\n//             e.preventDefault();\r\n//             button.removeEventListener(\"click\", clickListener);\r\n//             self.activateScanner();\r\n//         });\r\n//     },\r\n//     hideOverlay: function () {\r\n//         document.querySelector('.container ')\r\n//             .classList.remove('hide');\r\n//         document.querySelector('.overlay--inline')\r\n//             .classList.remove('show');\r\n//         $scope.showBarcodeWindow = false\r\n//     },\r\n//     configureScanner: function (selector) {\r\n//         var scanner = Quagga\r\n//             .decoder({ readers: ['ean_reader'] })\r\n//             .locator({ patchSize: 'medium' })\r\n//             .fromSource({\r\n//                 target: selector,\r\n//                 constraints: {\r\n//                     width: 600,\r\n//                     height: 600,\r\n//                     facingMode: \"environment\"\r\n//                 }\r\n//             });\r\n//         return scanner;\r\n//     }\r\n// };\r\n// App.init();\r\n\r\n// // .................... take results array and get the average\r\n// const mostCommon = (arr) => {\r\n//     return arr.sort((a, b) =>\r\n//         arr.filter(v => v === a).length\r\n//         - arr.filter(v => v === b).length\r\n//     ).pop()\r\n// }\r\n// // .................... play a sound\r\n// var snd = new Audio(\"../audio/cameraOne.wav\")\r\n\r\n// // .................... hide / show playback window\r\n// $scope.showBarcodeWindow = false\r\n\r\n})","angular.module('app').controller('locClass', function ($scope, locClassSrv, uiGridConstants) {\r\n    // »»»»»»»»»»»»»»»»»»»║  TESTS \r\n    $scope.locClassTest = 'locClass controller is connected and operational'\r\n    $scope.locClassServiceTest = locClassSrv.locClassServiceTest\r\n    $scope.modalView = true\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  MODAL CONTROLS\r\n\r\n    $scope.hideStorageModal = () => {\r\n        $scope.clearForm()\r\n        $scope.locClassObj.name = \"\"\r\n        $scope.locClassObj.description = \"\"\r\n        $scope.$parent.modalShownStorage = false\r\n    }\r\n\r\n    // // »»»»»»»»»»»»»»»»»»»║ CLEAR FORM\r\n    $scope.clearForm = () => document.getElementById(\"classCreateForm\").reset()\r\n\r\n    // // »»»»»»»»»»»»»»»»»»»║ LOCATION CLASSIFICATION MANIPULATION\r\n    // .................... get list of location classes and grid information\r\n    $scope.getLocClasses = () => locClassSrv.getLocClassesList().then((response) => {\r\n        $scope.locClasses = response.data\r\n        $scope.gridOptions.data = response.data\r\n    })\r\n    $scope.getLocClasses()\r\n\r\n    // // .................... location classes types\r\n    $scope.locClassObj = {}\r\n    $scope.createLocClassObj = () => {\r\n        $scope.gridOptions.data.push({\r\n            \"name\": $scope.locClassObj.name\r\n            , \"description\": $scope.locClassObj.description\r\n        });\r\n        // console.log(`this will be created ... ${JSON.stringify($scope.locClassObj)}`)\r\n        locClassSrv.createLocClassObj($scope.locClassObj)\r\n        $scope.clearForm()\r\n    }\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  COLUMNS AND DATA\r\n    $scope.gridOptions = {\r\n        enableRowSelection: true\r\n        , enableRowHeaderSelection: true\r\n        , multiSelect: false\r\n        , enableSelectAll: false\r\n        , enableFiltering: true\r\n        , columnDefs: [\r\n            { name: 'name', displayName: 'Name' }\r\n            , { name: 'description', displayName: 'Description' }\r\n        ]\r\n        , onRegisterApi: (gridApi) => {\r\n\r\n            gridApi.selection.on.rowSelectionChanged($scope, function (row) {\r\n                $scope.selected = row.isSelected\r\n                $scope.rowId = row.uid\r\n                $scope.rowObj = row.entity\r\n                $scope.enableDelete = false\r\n                $scope.selected === true ? $scope.enableDelete = false : $scope.enableDelete = true\r\n            })\r\n\r\n            // ...........   update the loc class on lost focus, tab, or enter\r\n            gridApi.edit.on.afterCellEdit($scope, function (rowEntity) {\r\n                $scope.updateCont = rowEntity\r\n                $scope.update($scope.updateCont)\r\n            })\r\n        }\r\n    }\r\n\r\n    // .................... update a location class\r\n    $scope.update = (upObj) => {\r\n        let cId = upObj.id\r\n        locClassSrv.updateLocClass(cId, upObj)\r\n    }\r\n\r\n    // .................... delete a container\r\n    $scope.delete = () => {\r\n        let gridData = $scope.gridOptions.data\r\n        let cId = $scope.rowObj.id\r\n        if ($scope.selected === true) {\r\n            for (let i = 0; i < gridData.length; i++) {\r\n                if (gridData[i].id === cId) {\r\n                    gridData.splice(i, 1)\r\n                }\r\n            }\r\n            locClassSrv.deleteLocClass(cId)\r\n            $scope.enableDelete = true\r\n        }\r\n    }\r\n\r\n})","angular.module('app').controller('locContainer', function ($scope, $interval, containerSrv, uiGridConstants, ) {\r\n    // »»»»»»»»»»»»»»»»»»»║  TESTS \r\n    $scope.locContainerTest = 'locContainerTest controller is connected and operational'\r\n    $scope.containerServiceTest = containerSrv.containerServiceTest\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  MODAL CONTROLS\r\n    $scope.hideContainerModal = () => {\r\n        $scope.clearForm()\r\n        $scope.container.name = \"\"\r\n        $scope.$parent.modalShownContainer = false\r\n    }\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ CLEAR FORM\r\n    $scope.clearForm = () => document.getElementById(\"containerCreateForm\").reset()\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ CONTAINER MANIPULATION\r\n    // .................... get list of container types and grid information\r\n    $scope.getContainers = () => containerSrv.getContainerList().then((response) => {\r\n        $scope.containers = response.data\r\n        $scope.gridOptions.data = response.data\r\n    })\r\n    $scope.getContainers()\r\n\r\n    // .................... create container types\r\n    $scope.container = {}\r\n    $scope.createContainer = () => {\r\n        $scope.gridOptions.data.push({\r\n            \"name\": $scope.container.name\r\n        });\r\n        // console.log(`this will be created ... ${JSON.stringify($scope.container)}`)\r\n        containerSrv.createContainer($scope.container)\r\n        $scope.clearForm()\r\n    }\r\n\r\n\r\n    // .................... update container types\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  COLUMNS AND DATA\r\n    $scope.gridOptions = {\r\n        enableRowSelection: true\r\n        , enableRowHeaderSelection: true\r\n        , multiSelect: false\r\n        , enableSelectAll: false\r\n        , enableFiltering: true\r\n        , columnDefs: [\r\n            { name: 'name', displayName: 'Description', width: 464 }\r\n        ]\r\n        , onRegisterApi: (gridApi) => {\r\n\r\n            gridApi.selection.on.rowSelectionChanged($scope, function (row) {\r\n                $scope.selected = row.isSelected\r\n                $scope.rowId = row.uid\r\n                $scope.rowObj = row.entity\r\n                $scope.enableDelete = false\r\n                $scope.selected === true ? $scope.enableDelete = false : $scope.enableDelete = true\r\n            })\r\n\r\n            // ...........   update the user on lost focus, tab, or enter\r\n            gridApi.edit.on.afterCellEdit($scope, function (rowEntity) {\r\n                $scope.updateCont = rowEntity\r\n                $scope.update($scope.updateCont)\r\n            })\r\n        }\r\n    }\r\n\r\n    // .................... update a container\r\n    $scope.update = (upObj) => {\r\n        let cId = upObj.id\r\n        containerSrv.updateContainer(cId, upObj)\r\n    }\r\n\r\n    // .................... delete a container\r\n    $scope.delete = () => {\r\n        let gridData = $scope.gridOptions.data\r\n        let cId = $scope.rowObj.id\r\n        if ($scope.selected === true) {\r\n            for (let i = 0; i < gridData.length; i++) {\r\n                if (gridData[i].id === cId) {\r\n                    gridData.splice(i, 1)\r\n                }\r\n            }\r\n            containerSrv.deleteContainer(cId)\r\n            $scope.enableDelete = true\r\n        }\r\n    }\r\n\r\n})","angular.module('app').controller('locCreate', function ($scope, locCreateSrv, containerSrv, locClassSrv, locationsListSrv) {\r\n    // »»»»»»»»»»»»»»»»»»»║  TESTS \r\n    $scope.locCtrlTest = 'locCreate controller is connected and operational'\r\n    $scope.locCreateServiceTest = locCreateSrv.locCreateServiceTest\r\n    $scope.containerServiceTest = containerSrv.containerServiceTest\r\n    $scope.locClassServiceTest = locClassSrv.locClassServiceTest\r\n    $scope.locListServiceTest = locationsListSrv.locListServiceTest\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  MODAL CONTROLS\r\n    $scope.hideLocationModal = () => {\r\n        $scope.clearForm()\r\n        $scope.locObj = {}\r\n        $scope.$parent.modalShownLocation = false\r\n    }\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ CLEAR FORM\r\n    $scope.clearForm = () => document.getElementById(\"createLocationForm\").reset()\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  GET CONTAINER LIST \r\n    $scope.getContainers = () => containerSrv.getContainerList().then((response) => $scope.containers = response.data)\r\n    $scope.getContainers()\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  GET LOCATION CLASSIFICATION LIST\r\n    $scope.getLocClasses = () => locClassSrv.getLocClassesList().then((response) => $scope.locClasses = response.data)\r\n    $scope.getLocClasses()\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  GET LOCATION LIST\r\n    $scope.getLocations = () => locationsListSrv.getLocationsList().then((response) => $scope.locations = response.data)\r\n    $scope.getLocations()\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  CREATE A NEW LOCATION\r\n    //  .................... objects used to post\r\n    $scope.locClassObj = []\r\n    $scope.containerObj = []\r\n    $scope.locationParentObj = []\r\n    $scope.locObj = {}\r\n    //  .................... function to cover defaults are sent if not user didn't make selection\r\n    $scope.setDefaults = () => {\r\n        let cl = $scope.locClassObj.length\r\n        let c = $scope.containerObj.length\r\n        let p = $scope.locationParentObj.length\r\n        cl === 0 ? $scope.locObj.loc_class_id = 1 : undefined\r\n        c === 0 ? $scope.locObj.container_id = 1 : undefined\r\n        p === 0 ? $scope.locObj.parent_location_id = 1 : undefined\r\n    }\r\n    // ....................  create location\r\n    $scope.createLocation = () => {\r\n        $scope.getLocations()\r\n        $scope.locObj.loc_class_id = $scope.locClassObj.id\r\n        $scope.locObj.container_id = $scope.containerObj.id\r\n        $scope.locObj.parent_location_id = $scope.locationParentObj.id\r\n        $scope.setDefaults()\r\n        var exists = 0\r\n        for (let i = 0; i < $scope.locations.length; i++) {\r\n            if ($scope.locations[i].description === $scope.locObj.description && $scope.locations[i].parent_location_id === $scope.locObj.parent_location_id) {\r\n                exists = 1\r\n                break;\r\n            }\r\n            else {\r\n                exists = 0\r\n            }\r\n        }\r\n        if(exists === 1) {\r\n            alert(`this is a duplicate`)\r\n        }\r\n        else {\r\n            locCreateSrv.submitLocationInfo($scope.locObj)\r\n            $scope.getLocations() \r\n            $scope.clearForm()\r\n        }\r\n    }\r\n\r\n})","angular.module('app').controller('locManage', function ($scope, bcService, locationsListSrv, locationUpdateSrv, locationDeleteSrv) {\r\n    // »»»»»»»»»»»»»»»»»»»║  TESTS \r\n    $scope.locManageTest = 'locManage controller is connected and operational'\r\n    $scope.locListServiceTest = locationsListSrv.locListServiceTest\r\n\r\n    // // »»»»»»»»»»»»»»»»»»»║ LOCATION CLASSIFICATION MANIPULATION\r\n    // .................... get list of location classes and grid information\r\n    $scope.getLocations = () => locationsListSrv.getLocationsCustomList().then((response) => {\r\n        $scope.gridOptions.data = response.data\r\n    })\r\n    $scope.getLocations()\r\n\r\n    // .................... columns and data\r\n    $scope.gridOptions = {\r\n        enableRowSelection: true\r\n        , enableRowHeaderSelection: true\r\n        , multiSelect: false\r\n        , enableSelectAll: false\r\n        , enableFiltering: true\r\n        , columnDefs: [\r\n            { name: 'id', enableCellEdit: false, width: 75 }\r\n            , { name: 'loc_desc', displayName: 'Description' }\r\n            , { name: 'loc_class_name', displayName: 'Classification', enableCellEdit: false }\r\n            , { name: 'loc_class_desc', displayName: 'Class Desc.', enableCellEdit: false }\r\n            , { name: 'loc_container', displayName: 'Container', enableCellEdit: false }\r\n            , { name: 'x_coordinate', displayName: 'X', width: 75 }\r\n            , { name: 'y_coordinate', displayName: 'Y', width: 75 }\r\n            , { name: 'z_coordinate', displayName: 'Z', width: 75 }\r\n            , { name: 'parent_location_id', displayName: 'Parent', width: 110 }\r\n        ]\r\n        , onRegisterApi: (gridApi) => {\r\n\r\n            gridApi.selection.on.rowSelectionChanged($scope, function (row) {\r\n                $scope.selected = row.isSelected\r\n                $scope.rowId = row.uid\r\n                $scope.rowObj = row.entity\r\n                $scope.enableDelete = false\r\n                $scope.selected === true ? $scope.enableDelete = false : $scope.enableDelete = true\r\n            })\r\n\r\n            // ...........   update the location on lost focus, tab, or enter\r\n            gridApi.edit.on.afterCellEdit($scope, function (rowEntity) {\r\n                $scope.updateCont = rowEntity\r\n                // ............. drop containers and classes text from entity obj\r\n                var gridObj = { container_id: rowEntity.container_id, id: rowEntity.id, loc_class_id: rowEntity.loc_class_id, loc_desc: rowEntity.loc_desc, parent_location_id: rowEntity.parent_location_id, x_coordinate: rowEntity.x_coordinate, y_coordinate: rowEntity.y_coordinate, z_coordinate: rowEntity.z_coordinate }\r\n                // ............. call update\r\n                $scope.update(gridObj)\r\n            })\r\n        }\r\n    }\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  UPDATE LOCATIONS\r\n    $scope.update = (updateObj) => locationUpdateSrv.submitLocationInfo(updateObj)\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  DELETE LOCATIONS\r\n    $scope.delete = () => {\r\n        let gridData = $scope.gridOptions.data\r\n        let cId = $scope.rowObj.id\r\n        if ($scope.selected === true) {\r\n            for (let i = 0; i < gridData.length; i++) {\r\n                if (gridData[i].id === cId) {\r\n                    gridData.splice(i, 1)\r\n                }\r\n            }\r\n            locationDeleteSrv.deleteLocation(cId)\r\n            $scope.enableDelete = true\r\n        }\r\n    }\r\n\r\n\r\n\r\n})","angular.module('app').controller('mainCtrl', function ($scope, $interval, authService, checkUserSrv, modalService) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    $scope.controllerTest = 'Controller Engaged!!!'\r\n\r\n\r\n    $scope.loggedIn = false;\r\n\r\n    $scope.login = () => {\r\n        $scope.loggedIn = true\r\n        // authService.logMeIn()\r\n    }\r\n    $scope.logout = () => {\r\n        $scope.loggedIn = false\r\n        authService.logout()\r\n    }\r\n    // .......................  checks to see if the user is logged in\r\n    checkUserSrv.getUser().then((response) => $scope.loggedIn = true)\r\n\r\n    //modal hide/show controls\r\n    //________FUNCTION\r\n    $scope.showStorageModal = () => {\r\n        modalService.refreshWindow()\r\n        $scope.modalShownStorage = true\r\n    }\r\n    $scope.showTrackbyModal = () => {\r\n        modalService.refreshWindow()\r\n        $scope.modalShownTrackby = true\r\n        modalService.refreshWindow()\r\n    }\r\n    $scope.showItemsModal = () => {\r\n        modalService.refreshWindow()\r\n        $scope.modalShownItems = true\r\n        modalService.refreshWindow()\r\n    }\r\n    $scope.showContainerModal = () => {\r\n        modalService.refreshWindow()\r\n        $scope.modalShownContainer = true\r\n    }\r\n    $scope.showLocationModal = () => $scope.modalShownLocation = true\r\n    $scope.showUserModal = () => $scope.modalShownUser = true\r\n    \r\n\r\n\r\n\r\n    //_________DASHBOARD TITLE\r\n    $scope.pageTitle = \"Dashboard\"\r\n    $scope.watchLocation = (area) => {\r\n        var url = area\r\n        // var url = window.location.hash\r\n        // console.log(url)\r\n        switch (url) {\r\n            case '#!/user_manage':\r\n                $scope.pageTitle = 'Users'\r\n                break;\r\n            case '#!/location_manage':\r\n                $scope.pageTitle = 'Locations'\r\n                break;\r\n            case '#!/item_manage':\r\n                $scope.pageTitle = 'Items'\r\n                break;\r\n            case '#!/dashboard':\r\n                $scope.pageTitle = 'Dashboard'\r\n                break;\r\n        }\r\n    }\r\n    $scope.watchLocation(window.location.hash)\r\n})","","","angular.module('app').controller('settings', function ($scope, uiGridConstants, locationsListSrv, settingsSrv) {\r\n    // »»»»»»»»»»»»»»»»»»»║  TESTS \r\n    $scope.settingsTest = 'settings controller is connected and operational'\r\n    $scope.locListServiceTest = locationsListSrv.locListServiceTest\r\n    // »»»»»»»»»»»»»»»»»»»║  VARIABLES \r\n    $scope.defaultLocation\r\n    $scope.loc\r\n    var sendArr = {}\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  DATABASE CALLS\r\n    // .................... get list of locations\r\n    $scope.getLocations = () => locationsListSrv.getLocationsList().then(response => $scope.locations = response.data)\r\n    $scope.getLocations()\r\n\r\n    // .................... get default location\r\n    $scope.getDefaultLoc = () => settingsSrv.getDefaultLocation().then(response => { \r\n        $scope.loc = response.data[0].description;\r\n        $scope.locid = response.data[0].id\r\n         $scope.defaultLocation = $scope.loc })\r\n    $scope.getDefaultLoc()\r\n\r\n    // .................... will convert to update default location\r\n    $scope.updateDefault = () => {\r\n        var dl = $scope.defaultLocation\r\n        if (typeof dl === 'string') {\r\n            // console.log(dl)\r\n            sendArr.d_location_id = $scope.locid\r\n        }\r\n        else {\r\n            // console.log(dl.description)\r\n            sendArr.d_location_id = dl.id\r\n        }        \r\n        console.log(sendArr) //this is what we will send to the db PUT\r\n        settingsSrv.updateDefaultLocation(sendArr)\r\n    }\r\n})","angular.module('app').controller('trackBy', function ($scope, $interval, modalService, uiGridConstants, trackByGetSrv, trackByPostSrv, trackByPutSrv, trackByDeleteSrv) {\r\n    // »»»»»»»»»»»»»»»»»»»║  TESTS \r\n    $scope.trackByTest = 'trackBy controller is connected and operational'\r\n    $scope.trackByGetSrvTest = trackByGetSrv.trackByGetSrvTest\r\n    $scope.trackByPostSrvTest = trackByPostSrv.trackByPostSrvTest\r\n    $scope.trackByPutSrvTest = trackByPutSrv.trackByPutSrvTest\r\n    $scope.trackByDeleteSrvTest = trackByDeleteSrv.trackByDeleteSrvTest\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  MODAL CONTROLS\r\n \r\n    $scope.hideTrackbyModal = () => {\r\n        $scope.clearForm()\r\n        $scope.trackByObj.trackby_name = \"\"\r\n        $scope.trackByObj.trackby_value = \"\"\r\n        $scope.trackByObj.trackby_category = \"\"\r\n        $scope.$parent.modalShownTrackby = false\r\n    }\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ CLEAR FORM\r\n    $scope.clearForm = () => document.getElementById(\"trackbyForm\").reset()\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ TRACKBY MANIPULATION\r\n    // .................... get list of trackby types and grid information\r\n    $scope.gettrackbys = () => trackByGetSrv.getTrackByList().then((response) => {\r\n        $scope.trackbys = response.data\r\n        $scope.gridOptions.data = response.data\r\n        // console.log(`gridOptions.data = ${JSON.stringify(response.data)}`)\r\n    })\r\n    $scope.gettrackbys()\r\n\r\n    // .................... create trackby types\r\n    $scope.trackByObj = {}\r\n    $scope.createTrackBy = () => {\r\n        $scope.gridOptions.data.push({\r\n            \"trackby_name\": $scope.trackByObj.trackby_name\r\n            , \"trackby_value\": $scope.trackByObj.trackby_value\r\n            , \"trackby_category\": $scope.trackByObj.trackby_category\r\n        });\r\n        $scope.clearForm()\r\n        trackByPostSrv.createTrackBy($scope.trackByObj)\r\n    }\r\n\r\n\r\n    // .................... update trackby types\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  COLUMNS AND DATA\r\n    $scope.gridOptions = {\r\n        enableRowSelection: true\r\n        , enableRowHeaderSelection: true\r\n        , multiSelect: false\r\n        , enableSelectAll: false\r\n        , enableFiltering: true\r\n        , columnDefs: [\r\n            { name: 'id', enableCellEdit: false }\r\n            , { name: 'trackby_name', displayName: 'Name' }\r\n            , { name: 'trackby_value', displayName: 'Value' }\r\n            , { name: 'trackby_category', displayName: 'Category' }\r\n        ]\r\n\r\n        , onRegisterApi: (gridApi) => {\r\n\r\n            gridApi.selection.on.rowSelectionChanged($scope, function (row) {\r\n                $scope.selected = row.isSelected\r\n                $scope.rowId = row.uid\r\n                $scope.rowObj = row.entity\r\n                $scope.enableDelete = false\r\n                $scope.selected === true ? $scope.enableDelete = false : $scope.enableDelete = true\r\n            })\r\n\r\n            // ...........   update the user on lost focus, tab, or enter\r\n            gridApi.edit.on.afterCellEdit($scope, function (rowEntity) {\r\n                $scope.updateCont = rowEntity\r\n                $scope.update($scope.updateCont)\r\n            })\r\n        }\r\n    }\r\n\r\n    // .................... update a trackby\r\n    $scope.update = (upObj) => {\r\n        let cId = upObj.id\r\n        trackByPutSrv.updateTrackBy(cId, upObj)\r\n    }\r\n\r\n    // .................... delete a trackby\r\n    $scope.delete = () => {\r\n        let gridData = $scope.gridOptions.data\r\n        let cId = $scope.rowObj.id\r\n        if ($scope.selected === true) {\r\n            for (let i = 0; i < gridData.length; i++) {\r\n                if (gridData[i].id === cId) {\r\n                    gridData.splice(i, 1)\r\n                }\r\n            }\r\n            trackByDeleteSrv.deleteTrackBy(cId)\r\n            $scope.enableDelete = true\r\n        }\r\n    }\r\n\r\n})","angular.module('app').controller('userCreate', function ($scope, stateListSrv, countryListSrv, updateUserSrv, postUserInfoSrv, userListSrv, deleteAllUsersSrv) {\r\n    // »»»»»»»»»»»»»»»»»»»║  TESTS \r\n    $scope.userCreateTest = 'userCreate controller is working correctly'\r\n    $scope.stateListSrvTest = stateListSrv.serviceTest\r\n    $scope.postUserInfoSrvTest = postUserInfoSrv.serviceTest\r\n    $scope.userServiceTest = userListSrv.userServiceTest\r\n    $scope.deleteAllUsersServiceTest = deleteAllUsersSrv.deleteAllUsersServiceTest\r\n    $scope.countryListServiceTest = countryListSrv.countryListServiceTest\r\n\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  VARIABLES\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  MODAL CONTROLS\r\n    $scope.hideUserModal = () => {\r\n        $scope.clearForm()\r\n        $scope.userInfo = { \"country_id\": 1, \"inactive\": false }\r\n        $scope.$parent.modalShownUser = false\r\n        console.log('got here')\r\n    }\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  GET STATES LIST\r\n    $scope.states = () => stateListSrv.getStatesList().then((response) => $scope.stateName = response.data)\r\n    $scope.states()\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  GET COUNTRY LIST\r\n    $scope.country = () => countryListSrv.getcountryList().then((response) => $scope.countryName = response.data)\r\n    $scope.country()\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ CLEAR FORM\r\n    $scope.clearForm = () => document.getElementById(\"userCreateForm\").reset()\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ SUBMIT USER FORM DATA\r\n    // .................... user object to submit   \r\n    $scope.userInfo = { \"country_id\": 1, \"inactive\": false }\r\n\r\n    // .................... sets rent rating\r\n    $scope.rating = 5;\r\n    $scope.rateFunction = (rating) => $scope.userInfo.renter_rating = rating\r\n\r\n    // .................... sets checkbox\r\n    $scope.deactivateUserChecked = () => $scope.userInfo.inactive = $scope.userStatus\r\n\r\n\r\n    $scope.submit = () => {\r\n        var sName = $scope.stateObj.name\r\n        var exists = 0\r\n\r\n        // .................... checks to verify that the user doesn't already exist in the database.\r\n        var getUsers = () => {\r\n            userListSrv.getUserList().then((response) => {\r\n                $scope.users = response.data\r\n                // console.log(JSON.stringify($scope.users))\r\n                for (let i = 0; i < $scope.users.length; i++) {\r\n                    // console.log(`db email ${$scope.users[i].email}`)\r\n                    if ($scope.users[i].email === $scope.userInfo.email && $scope.users[i].first_name === $scope.userInfo.firstName) {\r\n                        exists = 1\r\n                        break;\r\n                    }\r\n                }\r\n                // console.log(`exists inside after function ${exists}`)\r\n                for (let i = 0; i < $scope.stateName.length; i++) {\r\n                    if ($scope.stateName[i].name === sName) {\r\n                        $scope.userInfo.state_id = $scope.stateName[i].id\r\n                    }\r\n                }\r\n                if (exists === 0) {\r\n                    // console.log(`userInfo object that will be sent is ${JSON.stringify($scope.userInfo)}`)\r\n                    postUserInfoSrv.submitUserInfo($scope.userInfo)\r\n                    alert(`User has been created.`)\r\n                    $scope.clearForm()\r\n                }\r\n                else {\r\n                    alert(`User already exists!`)\r\n                }\r\n            })\r\n        }\r\n        getUsers()\r\n    }\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ DELETE ALL USERS\r\n    $scope.deleteUsers = () => { return deleteAllUsersSrv.deleteAllUsers() }\r\n\r\n\r\n\r\n    // no code below this line\r\n})","angular.module('app').controller('userManage', function ($scope, uiGridConstants, userListSrv, stateListSrv, countryListSrv, updateUserSrv, getUserColumnsSrv) {\r\n    // »»»»»»»»»»»»»»»»»»»║  TESTS\r\n    $scope.userManageControllerTest = 'userManage Controller is ready to role!'\r\n    $scope.getUserColumnsSrvServiceTest = getUserColumnsSrv.getUserColumnsSrvServiceTest\r\n    $scope.updateUserServiceTest = updateUserSrv.updateUserServiceTest\r\n    $scope.StateServiceTest = stateListSrv.serviceTest\r\n    $scope.countryListServiceTest = countryListSrv.countryListServiceTest\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  GET STATES LIST\r\n    $scope.states = () => stateListSrv.getStatesList().then((response) => $scope.stateName = response.data)\r\n    $scope.states()\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  GET COUNTRY LIST\r\n    $scope.country = () => countryListSrv.getcountryList().then((response) => $scope.countryName = response.data)\r\n    $scope.country()\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  COLUMNS AND DATA\r\n    const minW = 75\r\n    const maxW = 500\r\n    const wid = 150\r\n\r\n    $scope.gridOptions = {\r\n       enableRowSelection: true\r\n        , enableRowHeaderSelection: false\r\n        , multiSelect: false\r\n        , enableSelectAll: false\r\n        , enableGridMenu: true\r\n        , enableFiltering: true\r\n        , columnDefs: [ //this shows which columns show in grid. the value needs to match the data key.\r\n            // { name: 'id' },\r\n            { name: 'first_name', minWidth: minW, width: 75, maxWidth: maxW, pinnedLeft: true }\r\n            , { name: 'last_name' }\r\n            , { name: 'phone' }\r\n            , { name: 'email' }\r\n            , { name: 'address1', displayName: 'Address' }\r\n            , { name: 'address2', displayName: 'Bldg/Apt #' }\r\n            , { name: 'city' }\r\n            , { name: 'state', displayName: 'State'}\r\n            , { name: 'zip', displayName: 'Zip Code'}\r\n            , { name: 'renter_rating'}\r\n            , { name: 'inactive', displayName: 'Status'}\r\n        ]\r\n        , onRegisterApi: (gridApi) => {\r\n            $scope.grid1Api = gridApi\r\n\r\n            // ...........   update the user on lost focus, tab, or enter\r\n            gridApi.edit.on.afterCellEdit($scope, function (rowEntity) {\r\n                $scope.updatedUser = rowEntity\r\n                $scope.update($scope.updatedUser)\r\n            })\r\n        }\r\n    };\r\n\r\n    // ....................  get column data\r\n    $scope.getUsers = () => userListSrv.getCustomUserList().then((response) => $scope.gridOptions.data = response.data)\r\n    $scope.getUsers()\r\n\r\n\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ UPDATE USER\r\n    $scope.update = (updateObj) => {\r\n        var uId = updateObj.id\r\n        var expectedObj = {\r\n            \"firstName\": updateObj.first_name\r\n            , \"lastName\": updateObj.last_name\r\n            , \"phone\": updateObj.phone\r\n            , \"email\": updateObj.email\r\n            , \"address1\": updateObj.address1\r\n            , \"address2\": updateObj.address2\r\n            , \"city\": updateObj.city\r\n            , \"state_id\": updateObj.state\r\n            , \"country_id\": updateObj.country\r\n            , \"zip\": updateObj.zip\r\n            , \"renter_rating\": updateObj.renter_rating\r\n            , \"inactive\": updateObj.inactive\r\n            , \"auth_id\": updateObj.auth_id\r\n        }\r\n        let getId = () => {\r\n            // ..... convert state name\r\n            for (let i = 0; i < $scope.stateName.length; i++) {\r\n                if ($scope.stateName[i].name === expectedObj.state_id) {\r\n                    expectedObj.state_id = $scope.stateName[i].id\r\n                }\r\n            }\r\n            // ..... convert country name\r\n            for (let i = 0; i < $scope.countryName.length; i++) {\r\n                if ($scope.countryName[i].name === expectedObj.country_id) {\r\n                    expectedObj.country_id = $scope.countryName[i].id\r\n                }\r\n            }\r\n            // console.log(`this is what will be sent! ${uId}`)\r\n            // console.log(`this is what will be sent! ${JSON.stringify(expectedObj)}`)\r\n            updateUserSrv.updateUser(uId, expectedObj)\r\n        }\r\n        getId()\r\n    }\r\n})","angular.module('app').service('authService', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.authServiceTest = 'the authService is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    this.logMeIn = () => $http.get('/auth', 'Access-Control-Allow-Origin').then(response => res.send('ok'))\r\n    this.logout = () => $http.get('/auth/logout').then(response => window.location = response.data)\r\n})","angular.module('app').service('bcService', function($http){\r\n    // VARIABLES\r\n    this.upc\r\n\r\n    //FUNCTIONS\r\n    this.storeBarcode = (bc) => {\r\n        console.log(\"barcode was stored and is\", bc)\r\n        this.upc = bc}\r\n    \r\n})","angular.module('app').service('checkUserSrv', function($http){\r\n\r\nthis.getUser = () => $http.get('/auth/me')\r\n\r\n})","angular.module('app').service('containerSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.containerServiceTest = 'the containerSrv is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    this.name \r\n    // ...................  get containers\r\n    this.getContainerList = () => ($http.get('/api/containers'))\r\n    // ...................  create containers\r\n    this.createContainer = (data) => {\r\n        $http({\r\n            url: '/api/containers',\r\n            method: 'POST',\r\n            data: data\r\n        })\r\n    }\r\n    // ...................  update containers\r\n    this.updateContainer = (id, data) => {\r\n        $http({\r\n            url: '/api/containers/' + id,\r\n            method: 'PUT',\r\n            data: data\r\n        })\r\n    }\r\n    // ...................  delete containers\r\n    this.deleteContainer = (id) => {\r\n        $http({\r\n            url: '/api/containers/' + id,\r\n            method: 'DELETE'\r\n        })\r\n    }\r\n})","angular.module('app').service('countryListSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.countryListServiceTest = 'the countryListSrv is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    this.getcountryList = () => ($http.get('/api/country'))\r\n})","angular.module('app').service('deleteAllUsersSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.deleteAllUsersServiceTest = 'the deleteAllUsersSrv is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    this.deleteAllUsers = function () {\r\n        $http({\r\n            url: '/api/user',\r\n            method: 'DELETE'\r\n        }).then((httpResponse) => console.log('response:', JSON.stringify(httpResponse)))\r\n    }\r\n\r\n})","angular.module('app').service('getUserColumnsSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.getUserColumnsSrvServiceTest = 'the getUserColumnsSrv is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    this.getColumnList = () => ($http.get('/api/user/columns'))\r\n})\r\n","angular.module('app').service('itemDeleteSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.itemDeleteSrvTest = 'the itemDeleteSrv is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    // ...................  delete items\r\n    this.deleteItem = (id) => {\r\n        $http({\r\n            url: '/api/trackbys/' + id,\r\n            method: 'DELETE'\r\n        })\r\n    }\r\n})","angular.module('app').service('itemGetSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.itemGetSrvTest = 'the itemGetSrv is connected'\r\n\r\n    // // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    // ...................  get items\r\n    this.getItemList = () => $http.get('/api/items')\r\n    this.getItemCustomList = () => $http.get('/api/items/custom')\r\n})","angular.module('app').service('itemMainSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.itemMainSrvTest = 'the itemMainSrv is connected'\r\n\r\n    // // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    // ...................  get logged in user\r\n    this.getCurrentUser = () => $http.get('/auth/me/')\r\n})","angular.module('app').service('itemPostSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.itemPostSrvTest = 'the itemPostSrv is connected'\r\n\r\n    // // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    // ...................  create item\r\n    this.createItem = (data) => {\r\n        // console.log('the data in itemPostSrv is: ', data)\r\n        $http({\r\n            url: '/api/items',\r\n            method: 'POST',\r\n            data: data\r\n        }).then(response => alert('Item has been created.'))\r\n    }\r\n})","angular.module('app').service('itemPutSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.itemPutSrvTest = 'the itemPutSrv is connected'\r\n\r\n    // // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    // ...................  update items\r\n    this.updateItem = (id, data) => {\r\n        // console.log(\"the id in the srv is :\", data)\r\n        $http({\r\n            url: '/api/items/' + id,\r\n            method: 'PUT',\r\n            data: data\r\n        })\r\n    }\r\n})","angular.module('app').service('locationDeleteSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.locationDeleteServiceTest = 'the locationDeleteSrv is connected'\r\n\r\n    // // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    // ...................  delete loc_classes\r\n    this.deleteLocation = (id) => {\r\n        $http({\r\n            url: '/api/locations/' + id,\r\n            method: 'DELETE'\r\n        })\r\n    }\r\n})","angular.module('app').service('locationsListSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.locListServiceTest = 'the locationsListSrv is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    this.getLocationsList = () => ($http.get('/api/locations')) \r\n    this.getLocationsCustomList = () => ($http.get('/api/locations/custom')) \r\n})","angular.module('app').service('locationUpdateSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.locationUpdateServiceTest = 'the locationUpdateSrv is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    this.submitLocationInfo = (data) => {\r\n        // console.log(`data to be sent ${JSON.stringify(data)}`)\r\n        $http({\r\n            url: '/api/locations/' + data.id,\r\n            method: 'PUT',\r\n            data: data\r\n        })\r\n    }\r\n})","angular.module('app').service('locClassSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.locClassServiceTest = 'the locClassSrv is connected'\r\n\r\n    // // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    // ...................  get loc_classes\r\n    this.getLocClassesList = () => ($http.get('/api/loc_classes'))\r\n    // ...................  create loc_classes\r\n    this.createLocClassObj = (data) => {\r\n        $http({\r\n            url: '/api/loc_classes',\r\n            method: 'POST',\r\n            data: data\r\n        })\r\n    }\r\n    // ...................  update loc_classes\r\n    this.updateLocClass = (id, data) => {\r\n        $http({\r\n            url: '/api/loc_classes/' + id,\r\n            method: 'PUT',\r\n            data: data\r\n        })\r\n    }\r\n    // ...................  delete loc_classes\r\n    this.deleteLocClass = (id) => {\r\n        $http({\r\n            url: '/api/loc_classes/' + id,\r\n            method: 'DELETE'\r\n        })\r\n    }\r\n})","angular.module('app').service('locCreateSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.locCreateServiceTest = 'the locCreateSrv is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    this.submitLocationInfo = (data) => {\r\n        $http({\r\n            url: '/api/locations',\r\n            method: 'POST',\r\n            data: data\r\n        }).then(response => alert('Location has been created.'))\r\n    }\r\n})","angular.module('app').service('modalService', function ($interval) {\r\n\r\n// ...........  refreshes window so the grids fix themselves in the modals\r\n    this.refreshWindow = () => {\r\n        $interval(function () {\r\n            var fireRefreshEventOnWindow = function () {\r\n                var evt = document.createEvent(\"HTMLEvents\");\r\n                evt.initEvent('resize', true, false);\r\n                window.dispatchEvent(evt);\r\n            };\r\n            fireRefreshEventOnWindow();\r\n            // console.log('refreshed')\r\n        }, 100, 1);\r\n    }\r\n})","angular.module('app').service('postUserInfoSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.serviceTest = 'the postUserInfoSrv is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    this.submitUserInfo = (data) => {\r\n        // console.log(`clicked submit and got ${JSON.stringify(data)}`)\r\n        $http({\r\n            url: '/api/users',\r\n            method: 'POST',\r\n            data: data\r\n        })\r\n    }\r\n})","angular.module('app').service('settingsSrv', function ($http) {\r\n    // ...................  get default location\r\n    this.getDefaultLocation = () => $http.get('http://localhost:3000/api/settings/default_location')\r\n\r\n    // ...................  update default location\r\n    this.updateDefaultLocation = (data) => {\r\n        console.log('sending data')\r\n        console.log(data)\r\n        $http({\r\n            url: '/api/settings/default_location',\r\n            method: 'PUT',\r\n            data: data\r\n        })\r\n    }\r\n\r\n})","angular.module('app').service('stateListSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.serviceTest = 'the stateListSrv is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    this.getStatesList = () => ($http.get('/api/states'))\r\n})","angular.module('app').service('trackByDeleteSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.trackByDeleteSrvTest = 'the trackByDeleteSrv is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    // ...................  delete trackbys\r\n    this.deleteTrackBy = (id) => {\r\n        $http({\r\n            url: '/api/trackbys/' + id,\r\n            method: 'DELETE'\r\n        })\r\n    }\r\n})","angular.module('app').service('trackByGetSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.trackByGetSrvTest = 'the trackByGetSrv is connected'\r\n\r\n    // // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    // ...................  get trackbys\r\n    this.getTrackByList = () => ($http.get('/api/trackbys/'))\r\n})","angular.module('app').service('trackByPostSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.trackByPostSrvTest = 'the trackByPostSrv is connected'\r\n\r\n    // // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    // ...................  create trackbys\r\n    this.createTrackBy = (data) => {\r\n        if (data.trackby_name == undefined) {\r\n            alert('Fill out all fields')\r\n        }\r\n        else {\r\n            $http({\r\n                url: '/api/trackbys/',\r\n                method: 'POST',\r\n                data: data\r\n            })\r\n        }\r\n    }\r\n})","angular.module('app').service('trackByPutSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.trackByPutSrvTest = 'the trackByPutSrv is connected'\r\n\r\n    // // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    // ...................  update trackbys\r\n    this.updateTrackBy = (id, data) => {\r\n        $http({\r\n            url: '/api/trackbys/' + id,\r\n            method: 'PUT',\r\n            data: data\r\n        })\r\n    }\r\n})","angular.module('app').service('updateUserSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.updateUserServiceTest = 'the updateUserSrv is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    this.updateUser = (id, data) => {\r\n        $http({\r\n            url: '/api/users/' + id,\r\n            method: 'PUT',\r\n            data: data\r\n        })\r\n    }\r\n})\r\n\r\n","angular.module('app').service('userListSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.userServiceTest = 'the userListSrv is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    this.getUserList = () => ($http.get('/api/users'))\r\n    this.getCustomUserList = () => ($http.get('/api/users/custom'))\r\n})"]}