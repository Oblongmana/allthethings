{"version":3,"sources":["app.js","controllers/itemCreate.js","controllers/itemManage.js","controllers/locClass.js","controllers/locContainer.js","controllers/locCreate.js","controllers/locManage.js","controllers/mainCtrl.js","controllers/notificationPrimary.js","controllers/notificationSecondary.js","controllers/settings.js","controllers/trackBy.js","controllers/userCreate.js","controllers/userManage.js","directives/bcScannerDir.js","directives/modalLocationCreateDir.js","directives/modalUserCreateDir.js","directives/starRatingDir.js","directives/trackByDir.js","services/authService.js","services/bcService.js","services/checkUserSrv.js","services/containerSrv.js","services/countryListSrv.js","services/deleteAllUsersSrv.js","services/getUserColumnsSrv.js","services/itemDeleteSrv.js","services/itemGetSrv.js","services/itemMainSrv.js","services/itemPostSrv.js","services/itemPutSrv.js","services/locationDeleteSrv.js","services/locationsListSrv.js","services/locationUpdateSrv.js","services/locClassSrv.js","services/locCreateSrv.js","services/postUserInfoSrv.js","services/settingsSrv.js","services/stateListSrv.js","services/trackByDeleteSrv.js","services/trackByGetSrv.js","services/trackByPostSrv.js","services/trackByPutSrv.js","services/updateUserSrv.js","services/userListSrv.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","otherwise","state","templateUrl","url","controller","$scope","bcService","itemMainSrv","itemGetSrv","itemPostSrv","itemPutSrv","itemDeleteSrv","locationsListSrv","trackByGetSrv","userListSrv","settingsSrv","itemCreateTest","itemGetSrvTest","itemPostSrvTest","itemPutSrvTest","itemDeleteSrvTest","itemMainSrvTest","getBC","barcode","upc","console","log","itemCreateObj","has_package","has_multiPiece","is_consumable","repOther","replink","af_period","trackbyValues","itemsObj","repItem","userId","commonLocObj","loc_id","currentUser","getCurrentUser","then","thisUser","response","data","first_name","owner_id","id","originalPackaging","packageStatus","multiplePieces","multiPiece","isConsumable","consumable","rating","rateFunction","sentimental_rating","today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","document","getElementById","setAttribute","getLocations","getLocationsList","locations","getLocationsCustomList","locGrid","gridOptions","getDefaultLoc","getDefaultLocation","loc","description","locid","location_id","defaultLocation","gettrackbys","getTrackByList","trackbys","getUsers","getCustomUserList","users","enableRowSelection","enableRowHeaderSelection","multiSelect","enableSelectAll","enableFiltering","columnDefs","name","enableCellEdit","width","displayName","onRegisterApi","gridApi","selection","on","rowSelectionChanged","row","selected","isSelected","rowId","uid","rowObj","entity","push","splice","indexOf","common","locationId","locationOption","swapper","linked","createItem","loggedInUser","$interval","itemManageTest","ddList","ddLocList","rtnUsers","rtnLocs","nuid","nlid","useFrequency","value","betterBool","getGridData","getItemCustomList","getUserList","droplist","tempArr","rIndex","map","getLocaitonList","minW","maxW","wid","enableGridMenu","minWidth","maxWidth","pinnedLeft","editableCellTemplate","editDropdownValueLabel","editDropdownOptionsArray","type","cellFilter","cellTemplate","core","addToGridMenu","grid","columnVisibilityChanged","changedColumn","columnChanged","colDef","visible","enableDelete","edit","afterCellEdit","rowEntity","updateCont","rei","reo","Owner","rel","locationDescription","newUsersId","filter","el","ind","arr","newLocationsId","newQuantity","qty","nqty","nIQty","nFQty","frequency_qty","nWQty","warrenty_period_in_days","nSRQty","gridObj","date_added","frequency_period","img","is_part","last_accessed","locationID","original_package","other_common_loc_json","parent_item_id","purchase_date","purchase_price","purchase_reason","purchase_retailer","replace_radio_default","replacement_comment","replacement_link","resale_value","short_name","trackby_json","userID","update","updateObj","updateItem","locClassSrv","uiGridConstants","locClassTest","locClassServiceTest","clearForm","reset","getLocClasses","getLocClassesList","locClasses","locClassObj","createLocClassObj","upObj","cId","updateLocClass","delete","gridData","i","length","deleteLocClass","containerSrv","locContainerTest","containerServiceTest","getContainers","getContainerList","containers","container","createContainer","updateContainer","deleteContainer","locCreateSrv","locCtrlTest","locCreateServiceTest","locListServiceTest","modalShownLocation","showLocationModal","hideLocationModal","containerObj","locationParentObj","locObj","setDefaults","cl","c","p","loc_class_id","undefined","container_id","parent_location_id","createLocation","exists","alert","submitLocationInfo","locationUpdateSrv","locationDeleteSrv","locManageTest","loc_desc","x_coordinate","y_coordinate","z_coordinate","deleteLocation","authService","checkUserSrv","controllerTest","loggedIn","login","logout","modalShown","toggleModal","createUserModalContent","createLocModalContent","setModalContent","contentId","setAllModalFalse","settingsTest","sendArr","updateDefault","dl","d_location_id","updateDefaultLocation","trackByPostSrv","trackByPutSrv","trackByDeleteSrv","trackByTest","trackByGetSrvTest","trackByPostSrvTest","trackByPutSrvTest","trackByDeleteSrvTest","trackByObj","createTrackBy","trackby_name","trackby_value","trackby_category","updateTrackBy","deleteTrackBy","stateListSrv","countryListSrv","updateUserSrv","postUserInfoSrv","deleteAllUsersSrv","userCreateTest","stateListSrvTest","serviceTest","postUserInfoSrvTest","userServiceTest","deleteAllUsersServiceTest","countryListServiceTest","modalShownUser","showUserModal","hideUserModal","states","getStatesList","stateName","country","getcountryList","countryName","userInfo","renter_rating","deactivateUserChecked","inactive","userStatus","submit","sName","stateObj","email","firstName","state_id","submitUserInfo","deleteUsers","deleteAllUsers","getUserColumnsSrv","userManageControllerTest","getUserColumnsSrvServiceTest","updateUserServiceTest","StateServiceTest","grid1Api","updatedUser","uId","expectedObj","last_name","phone","address1","address2","city","zip","auth_id","getId","country_id","updateUser","directive","restrict","scope","storeBarcode","Quagga","window","resultsArr","counter","App","_lastResult","init","attachListeners","activateScanner","scanner","configureScanner","onDetected","result","codeResult","code","mc","mostCommon","$apply","stoppy","showBarcodeWindow","snd","play","bind","stop","removeEventListener","hideOverlay","showOverlay","addEventListener","start","cancelCb","querySelector","classList","add","button","self","clickListener","e","preventDefault","remove","selector","decoder","readers","locator","patchSize","fromSource","target","constraints","height","facingMode","sort","a","b","v","pop","Audio","template","ratingValue","max","onRatingSelected","link","elem","attrs","updateStars","stars","filled","toggle","index","$watch","oldVal","newVal","attr","service","$http","authServiceTest","logMeIn","get","res","send","location","bc","getUser","method","httpResponse","JSON","stringify","getColumnList","deleteItem","getItemList","locationDeleteServiceTest","locationUpdateServiceTest"],"mappings":"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","file":"bundle.js","sourcesContent":["angular.module('app', ['ui.router', 'ui.grid', 'ui.grid.selection', 'ui.grid.edit', 'ui.grid.resizeColumns', 'ui.grid.moveColumns', 'ui.grid.pinning'])\r\n    .config(function ($stateProvider, $urlRouterProvider) {\r\n        $urlRouterProvider.otherwise('/', \"\")\r\n        // .......................  authorization\r\n        // var authentication = {\r\n        //     authenticate: ($state, checkUserSrv) => {\r\n        //         checkUserSrv.getUser().then((response) => {\r\n        //             if (!response.data.isFirstTime) {\r\n        //                 event.preventDefault()\r\n        //                 $state.go('dashboard')\r\n        //             }\r\n        //         }).catch(error => {\r\n        //             event.preventDefault()\r\n        //             $state.go('home')\r\n        //         })\r\n        //     }\r\n        // }\r\n        $stateProvider\r\n            .state('home', {\r\n                templateUrl: '../views/home.html',\r\n                url: '/'\r\n            })\r\n            .state('dashboard', {\r\n                templateUrl: '../views/dashboard.html',\r\n                url: '/dashboard',\r\n                // resolve: authentication\r\n            })\r\n            .state('user_create_new', {\r\n                templateUrl: '../views/user_create.html',\r\n                url: '/user_create_new',\r\n                controller: 'userCreate',\r\n                // resolve: authentication\r\n            })\r\n            .state('user_create', {\r\n                templateUrl: '../views/user_create.html',\r\n                url: '/user_create',\r\n                controller: 'userCreate',\r\n                // resolve: authentication\r\n            })\r\n            .state('user_manage', {\r\n                templateUrl: '../views/user_manage.html',\r\n                url: '/user_manage',\r\n                controller: 'userManage',\r\n                // resolve: authentication\r\n            })\r\n            .state('location_create', {\r\n                templateUrl: '../views/location_create.html',\r\n                url: '/location_create',\r\n                controller: 'locCreate',\r\n                // resolve: authentication\r\n            })\r\n            .state('loc_container', { // MOVE INTO MODAL\r\n                templateUrl: '../views/loc_container.html',\r\n                url: '/loc_container',\r\n                controller: 'locContainer',\r\n                // resolve: authentication\r\n            })\r\n            .state('loc_class', { // MOVE INTO MODAL\r\n                templateUrl: '../views/loc_class.html',\r\n                url: '/loc_class',\r\n                controller: 'locClass',\r\n                // resolve: authentication\r\n            })\r\n            .state('location_manage', {\r\n                templateUrl: '../views/location_manage.html',\r\n                url: '/location_manage',\r\n                controller: 'locManage',\r\n                // resolve: authentication\r\n            })\r\n            .state('trackbys', { // MOVE INTO MODAL\r\n                templateUrl: '../views/trackbys.html',\r\n                url: '/trackbys',\r\n                controller: 'trackBy',\r\n                // resolve: authentication\r\n            })\r\n            .state('settings', { // MOVE INTO MODAL\r\n                templateUrl: '../views/settings.html',\r\n                url: '/settings',\r\n                controller: 'settings',\r\n                // resolve: authentication\r\n            })\r\n            .state('item_create', { // MOVE INTO MODAL\r\n                templateUrl: '../views/item_create.html',\r\n                url: '/item_create',\r\n                controller: 'itemCreate',\r\n                // resolve: authentication\r\n            })\r\n            .state('item_manage', { // MOVE INTO MODAL\r\n                templateUrl: '../views/item_manage.html',\r\n                url: '/item_manage',\r\n                controller: 'itemManage',\r\n                // resolve: authentication\r\n            })\r\n    })","angular.module('app').controller('itemCreate', function ($scope, bcService, itemMainSrv, itemGetSrv, itemPostSrv, itemPutSrv, itemDeleteSrv, locationsListSrv, trackByGetSrv, userListSrv, settingsSrv) {\r\n    // // »»»»»»»»»»»»»»»»»»»║  TESTS \r\n    $scope.itemCreateTest = 'itemCreate controller is connected and operational'\r\n    $scope.itemGetSrvTest = itemGetSrv.itemGetSrvTest\r\n    $scope.itemPostSrvTest = itemPostSrv.itemPostSrvTest\r\n    $scope.itemPutSrvTest = itemPutSrv.itemPutSrvTest\r\n    $scope.itemDeleteSrvTest = itemDeleteSrv.itemDeleteSrvTest\r\n    $scope.itemMainSrvTest = itemMainSrv.itemMainSrvTest\r\n    // test barcode from service\r\n    $scope.getBC = () => {\r\n        $scope.barcode = bcService.upc\r\n        console.log($scope.barcode)\r\n    }\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  VARIABLES\r\n    $scope.itemCreateObj = {\r\n        has_package: false\r\n        , has_multiPiece: false\r\n        , is_consumable: false\r\n        , repOther: null\r\n        , replink: null\r\n        ,af_period: \"Day\"\r\n    }\r\n  \r\n\r\n    $scope.trackbyValues = {}\r\n    const itemsObj = $scope.itemCreateObj\r\n    $scope.replink = 'replink'\r\n    $scope.repItem = $scope.replink\r\n    $scope.userId = {}\r\n    const commonLocObj = { loc_id: [] }\r\n\r\n    // .................... get current user\r\n    $scope.currentUser = () => itemMainSrv.getCurrentUser().then(response => {\r\n        // console.log(response.data)\r\n        $scope.thisUser = response.data.first_name\r\n        $scope.itemCreateObj.owner_id = response.data.id\r\n        $scope.userId.id = response.data.id\r\n    })\r\n    $scope.currentUser()\r\n    // .................... original package checkbox\r\n    $scope.originalPackaging = () => $scope.itemCreateObj.has_package = $scope.packageStatus\r\n\r\n    // .................... multiple piece checkbox\r\n    $scope.multiplePieces = () => $scope.itemCreateObj.has_multiPiece = $scope.multiPiece\r\n\r\n    // .................... consumable checkbox\r\n    $scope.isConsumable = () => $scope.itemCreateObj.is_consumable = $scope.consumable\r\n\r\n    // .................... sets sentimental value\r\n    $scope.rating = 1;\r\n    $scope.rateFunction = (rating) => $scope.itemCreateObj.sentimental_rating = rating\r\n\r\n    // .................... sets max date allowed\r\n    // <input id=\"datefield\" type='date' max='2000-13-13'></input>\r\n    var today = new Date();\r\n    var dd = today.getDate();\r\n    var mm = today.getMonth() + 1; //January is 0!\r\n    var yyyy = today.getFullYear();\r\n    if (dd < 10) {\r\n        dd = '0' + dd\r\n    }\r\n    if (mm < 10) {\r\n        mm = '0' + mm\r\n    }\r\n    today = yyyy + '-' + mm + '-' + dd;\r\n    document.getElementById(\"datefield\").setAttribute(\"max\", today);\r\n\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  GET LOCATION LIST\r\n    $scope.getLocations = () => locationsListSrv.getLocationsList().then(response => $scope.locations = response.data)\r\n    $scope.getLocations()\r\n\r\n    // .................... get custom list of locations \r\n    $scope.getLocations = () => locationsListSrv.getLocationsCustomList().then(response => {\r\n        var locGrid = response.data\r\n        $scope.gridOptions.data = locGrid\r\n    })\r\n    $scope.getLocations()\r\n\r\n    // .................... get default location\r\n    $scope.getDefaultLoc = () => settingsSrv.getDefaultLocation().then(response => {\r\n        $scope.loc = response.data[0].description;\r\n        $scope.locid = response.data[0].location_id;\r\n        $scope.defaultLocation = $scope.loc\r\n        $scope.itemCreateObj.location_id = $scope.locid\r\n    })\r\n    $scope.getDefaultLoc()\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ GET A LIST OF ALL TRACKBYS\r\n    $scope.gettrackbys = () => trackByGetSrv.getTrackByList().then(response => {\r\n        // console.log(response.data)\r\n        $scope.trackbys = response.data\r\n    })\r\n    $scope.gettrackbys()\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ GET USERS LIST\r\n    $scope.getUsers = () => userListSrv.getCustomUserList().then(response => $scope.users = response.data)\r\n    $scope.getUsers()\r\n\r\n    // .................... columns and data\r\n    $scope.gridOptions = {\r\n        enableRowSelection: true\r\n        , enableRowHeaderSelection: true\r\n        , multiSelect: true\r\n        , enableSelectAll: false\r\n        , enableFiltering: true\r\n        , columnDefs: [\r\n            { name: 'id', enableCellEdit: false, width: 75 }, { name: 'loc_desc', displayName: 'Description' }, { name: 'loc_class_name', displayName: 'Classification' }, { name: 'loc_class_desc', displayName: 'Class Desc.' }, { name: 'loc_container', displayName: 'Container' }\r\n        ]\r\n        , onRegisterApi: (gridApi) => {\r\n            gridApi.selection.on.rowSelectionChanged($scope, function (row) {\r\n                $scope.selected = row.isSelected\r\n                $scope.rowId = row.uid\r\n                $scope.rowObj = row.entity\r\n                $scope.selected === true ? commonLocObj.loc_id.push($scope.rowObj.id) : commonLocObj.loc_id.splice(commonLocObj.loc_id.indexOf($scope.rowObj.id), 1)\r\n                $scope.itemCreateObj.common = commonLocObj\r\n            })\r\n        }\r\n    }\r\n\r\n    $scope.locationId = () => $scope.itemCreateObj.location_id = $scope.locationOption.id\r\n\r\n    // .................... radio control\r\n    $scope.swapper = () => $scope.linked = !$scope.linked\r\n\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  CREATE ITEMS\r\n    $scope.createItem = () => {\r\n\r\n        $scope.itemCreateObj.repItem = $scope.repItem\r\n        let loggedInUser = $scope.itemCreateObj.owner_id\r\n        if (loggedInUser !== $scope.userId.id) { $scope.itemCreateObj.owner_id = $scope.userId.id }\r\n        $scope.itemCreateObj.trackbys = $scope.trackbyValues\r\n        $scope.itemCreateObj.upc = $scope.barcode\r\n\r\n        // console.log(itemsObj)//this is the object that will be sent to the server\r\n        itemPostSrv.createItem(itemsObj)\r\n    }\r\n})","angular.module('app').controller('itemManage', function ($scope, $interval, itemGetSrv, itemPostSrv, itemPutSrv, itemDeleteSrv, userListSrv, locationsListSrv) {\r\n    // »»»»»»»»»»»»»»»»»»»║  TESTS \r\n    $scope.itemManageTest = 'itemManage controller is connected and operational'\r\n    $scope.itemGetSrvTest = itemGetSrv.itemGetSrvTest\r\n    $scope.itemPostSrvTest = itemPostSrv.itemPostSrvTest\r\n    $scope.itemPutSrvTest = itemPutSrv.itemPutSrvTest\r\n    $scope.itemDeleteSrvTest = itemDeleteSrv.itemDeleteSrvTest\r\n    // VARIABLES\r\n    var ddList = []\r\n    var ddLocList = []\r\n    var rtnUsers = []\r\n    var rtnLocs = []\r\n    var nuid = 0\r\n    var nlid = 0\r\n    var useFrequency = [{ id: 'Day', value: 'Day' }, { id: 'Week', value: 'Week' }, { id: 'Month', value: 'Month' }, { id: 'Year', value: 'Year' }]\r\n    var betterBool = [{ id: true, value: true }, { id: false, value: false }]\r\n\r\n    // .................... get item grid list\r\n    $scope.getGridData = () => itemGetSrv.getItemCustomList().then((response) => $scope.gridOptions.data = response.data)\r\n    $scope.getGridData()\r\n\r\n    // .................... get list of users\r\n\r\n    $scope.getUserList = () => userListSrv.getUserList().then((response) => {\r\n        rtnUsers = response.data\r\n        let droplist = rIndex => {\r\n            let tempArr = {}\r\n            tempArr.id = rIndex.first_name\r\n            tempArr.value = rIndex.first_name\r\n            ddList.push(tempArr)\r\n        }\r\n        rtnUsers.map(droplist)\r\n    })\r\n    $scope.getUserList()\r\n\r\n    // .................... get list of Locaitons\r\n\r\n    $scope.getLocaitonList = () => locationsListSrv.getLocationsList().then((response) => {\r\n        rtnLocs = response.data\r\n        let droplist = rIndex => {\r\n            let tempArr = {}\r\n            tempArr.id = rIndex.description\r\n            tempArr.value = rIndex.description\r\n            ddLocList.push(tempArr)\r\n        }\r\n        rtnLocs.map(droplist)\r\n    })\r\n    $scope.getLocaitonList()\r\n\r\n\r\n    // .................... columns and data\r\n    const minW = 75\r\n    const maxW = 500\r\n    const wid = 150\r\n\r\n    $scope.gridOptions = {\r\n        enableRowSelection: true\r\n        , enableRowHeaderSelection: false\r\n        , multiSelect: false\r\n        , enableSelectAll: false\r\n        , enableGridMenu: true\r\n        , enableFiltering: true\r\n        , columnDefs: [\r\n            { name: 'id', displayName: 'Id', enableCellEdit: false, minWidth: minW, width: 75, maxWidth: maxW, pinnedLeft: true }\r\n            , { name: 'Owner', displayName: 'Owner', editableCellTemplate: 'ui-grid/dropdownEditor', minWidth: minW, width: 75, maxWidth: maxW, editDropdownValueLabel: 'value', editDropdownOptionsArray: ddList, pinnedLeft: true }\r\n            , { name: 'short_name', minWidth: minW, width: 200, maxWidth: maxW, pinnedLeft: true }\r\n            , { name: 'qty', type: 'number', minWidth: minW, width: 75, maxWidth: maxW, pinnedLeft: true }\r\n            , { name: 'description', minWidth: minW, width: wid, maxWidth: maxW }\r\n            , { name: 'date_added', type: 'date', cellFilter: 'date', minWidth: minW, width: 250, maxWidth: maxW }\r\n            , { name: 'upc', minWidth: minW, width: wid, maxWidth: maxW }\r\n            , { name: 'frequency_period', displayName: 'Frequency of Use Period', editableCellTemplate: 'ui-grid/dropdownEditor', minWidth: minW, width: wid, maxWidth: maxW, editDropdownOptionsArray: useFrequency }\r\n            , { name: 'frequency_qty', type: 'number', displayName: 'Times Per Period', minWidth: minW, width: wid, maxWidth: maxW }\r\n            , { name: 'img', displayName: 'Image', enableCellEdit: false, minWidth: minW, width: wid, maxWidth: maxW }\r\n            , { name: 'is_consumable', displayName: 'Consumable', editableCellTemplate: 'ui-grid/dropdownEditor', minWidth: minW, width: wid, maxWidth: maxW, editDropdownOptionsArray: betterBool }\r\n            , { name: 'is_part', displayName: 'Part', editableCellTemplate: 'ui-grid/dropdownEditor', minWidth: minW, width: wid, maxWidth: maxW, editDropdownOptionsArray: betterBool }\r\n            , { name: 'last_accessed', type: 'date', cellFilter: 'date', minWidth: minW, width: wid, maxWidth: maxW }\r\n            , { name: 'locationDescription', editableCellTemplate: 'ui-grid/dropdownEditor', minWidth: minW, width: 250, maxWidth: maxW, editDropdownValueLabel: 'value', editDropdownOptionsArray: ddLocList }\r\n            // , { name: 'locationID', minWidth: minW, width: wid, maxWidth: maxW }\r\n            , { name: 'original_package', displayName: 'Have Package', editableCellTemplate: 'ui-grid/dropdownEditor', minWidth: minW, width: wid, maxWidth: maxW, editDropdownOptionsArray: betterBool }\r\n            , { name: 'other_common_loc_json', minWidth: minW, width: '100%', maxWidth: maxW }\r\n            // , { name: 'parent_item_id', minWidth: minW, width: wid, maxWidth: maxW }\r\n            , { name: 'purchase_date', type: 'date', cellFilter: 'date', minWidth: minW, width: wid, maxWidth: maxW }\r\n            , { name: 'purchase_price', minWidth: minW, width: wid, maxWidth: maxW }\r\n            , { name: 'purchase_reason', minWidth: minW, width: wid, maxWidth: maxW }\r\n            , { name: 'purchase_retailer', minWidth: minW, width: wid, maxWidth: maxW }\r\n            // , { name: 'replace_radio_default', minWidth: minW, width: wid, maxWidth: maxW }\r\n            , { name: 'replacement_comment', minWidth: minW, width: 250, maxWidth: maxW }\r\n            , { name: 'replacement_link', cellTemplate: '<div class=\"ui-grid-cell-contents\"><a href=\"{{ COL_FIELD }}\" target=\"_blank\">View Item</a></div>', minWidth: minW, width: 250, maxWidth: maxW }\r\n            , { name: 'resale_value', minWidth: minW, width: wid, maxWidth: maxW }\r\n            , { name: 'sentimental_rating', type: 'number', minWidth: minW, width: 200, maxWidth: maxW }\r\n            , { name: 'trackby_json', displayName: 'Track-By', minWidth: minW, width: '100%', maxWidth: maxW }\r\n            // , { name: 'userID', minWidth: minW, width: wid, maxWidth: maxW }\r\n            , { name: 'warrenty_period_in_days', displayName: 'Warrenty (days)', type: 'number', minWidth: minW, width: wid, maxWidth: maxW }\r\n        ]\r\n\r\n        , onRegisterApi: (gridApi) => {\r\n            $scope.gridApi = gridApi;\r\n\r\n            // interval of zero just to allow the directive to have initialized\r\n            $interval(function () {\r\n                gridApi.core.addToGridMenu(gridApi.grid, []);\r\n            }, 0, 1);\r\n\r\n            gridApi.core.on.columnVisibilityChanged($scope, function (changedColumn) {\r\n                $scope.columnChanged = { name: changedColumn.colDef.name, visible: changedColumn.colDef.visible };\r\n            });\r\n\r\n            gridApi.selection.on.rowSelectionChanged($scope, function (row) {\r\n                $scope.selected = row.isSelected\r\n                $scope.rowId = row.uid\r\n                $scope.rowObj = row.entity\r\n                $scope.enableDelete = false\r\n                $scope.selected === true ? $scope.enableDelete = false : $scope.enableDelete = true\r\n            })\r\n\r\n            // ...........   update the location on lost focus, tab, or enter\r\n            gridApi.edit.on.afterCellEdit($scope, function (rowEntity) {\r\n                $scope.updateCont = rowEntity\r\n                let rei = rowEntity.id\r\n                // ............. validation for owner, location, qty\r\n                let reo = rowEntity.Owner\r\n                let rel = rowEntity.locationDescription\r\n                let newUsersId = rtnUsers.filter((el, ind, arr) => { if (el.first_name === reo) { nuid = el.id } })\r\n                let newLocationsId = rtnLocs.filter((el, ind, arr) => { if (el.description === rel) { nlid = el.id } })\r\n                let newQuantity = (qty) => {\r\n                    let nqty = 0\r\n                    qty < 0 ? nqty = qty / 0 : nqty = qty\r\n                    return nqty;\r\n                }\r\n                var nIQty = newQuantity(rowEntity.qty)\r\n                var nFQty = newQuantity(rowEntity.frequency_qty)\r\n                var nWQty = newQuantity(rowEntity.warrenty_period_in_days)\r\n                var nSRQty = newQuantity(rowEntity.sentimental_rating)\r\n                var gridObj = { Owner: rowEntity.Owner, date_added: rowEntity.date_added, description: rowEntity.description, frequency_period: rowEntity.frequency_period, frequency_qty: nFQty, id: rowEntity.id, img: rowEntity.img, is_consumable: rowEntity.is_consumable, is_part: rowEntity.is_part, last_accessed: rowEntity.last_accessed, locationDescription: rowEntity.locationDescription, locationID: nlid, original_package: rowEntity.original_package, other_common_loc_json: rowEntity.other_common_loc_json, parent_item_id: rowEntity.parent_item_id, purchase_date: rowEntity.purchase_date, purchase_price: rowEntity.purchase_price, purchase_reason: rowEntity.purchase_reason, purchase_retailer: rowEntity.purchase_retailer, qty: nIQty, replace_radio_default: rowEntity.replace_radio_default, replacement_comment: rowEntity.replacement_comment, replacement_link: rowEntity.replacement_link, resale_value: rowEntity.resale_value, sentimental_rating: nSRQty, short_name: rowEntity.short_name, trackby_json: rowEntity.trackby_json, upc: rowEntity.upc, userID: nuid, warrenty_period_in_days: nWQty }\r\n                // ............. call update\r\n                $scope.update(rei, gridObj)\r\n            })\r\n        }\r\n    }\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  UPDATE ITEMS\r\n    $scope.update = (id, updateObj) => itemPutSrv.updateItem(id, updateObj)\r\n})\r\n\r\n","angular.module('app').controller('locClass', function ($scope, locClassSrv, uiGridConstants, ) {\r\n    // »»»»»»»»»»»»»»»»»»»║  TESTS \r\n    $scope.locClassTest = 'locClass controller is connected and operational'\r\n    $scope.locClassServiceTest = locClassSrv.locClassServiceTest\r\n\r\n    // // »»»»»»»»»»»»»»»»»»»║ CLEAR FORM\r\n    $scope.clearForm = () => document.getElementById(\"classCreateForm\").reset()\r\n\r\n    // // »»»»»»»»»»»»»»»»»»»║ LOCATION CLASSIFICATION MANIPULATION\r\n    // .................... get list of location classes and grid information\r\n    $scope.getLocClasses = () => locClassSrv.getLocClassesList().then((response) => {\r\n        $scope.locClasses = response.data\r\n        $scope.gridOptions.data = response.data\r\n    })\r\n    $scope.getLocClasses()\r\n\r\n    // // .................... location classes types\r\n    $scope.locClassObj = {}\r\n    $scope.createLocClassObj = () => {\r\n        $scope.gridOptions.data.push({\r\n            \"name\": $scope.locClassObj.name\r\n            , \"description\": $scope.locClassObj.description\r\n        });\r\n        // console.log(`this will be created ... ${JSON.stringify($scope.locClassObj)}`)\r\n        locClassSrv.createLocClassObj($scope.locClassObj)\r\n        $scope.clearForm()\r\n    }\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  COLUMNS AND DATA\r\n    $scope.gridOptions = {\r\n        enableRowSelection: true\r\n        , enableRowHeaderSelection: true\r\n        , multiSelect: false\r\n        , enableSelectAll: false\r\n        , enableFiltering: true\r\n        , columnDefs: [\r\n            { name: 'name', displayName: 'Name' }\r\n            , { name: 'description', displayName: 'Description' }\r\n        ]\r\n        , onRegisterApi: (gridApi) => {\r\n\r\n            gridApi.selection.on.rowSelectionChanged($scope, function (row) {\r\n                $scope.selected = row.isSelected\r\n                $scope.rowId = row.uid\r\n                $scope.rowObj = row.entity\r\n                $scope.enableDelete = false\r\n                $scope.selected === true ? $scope.enableDelete = false : $scope.enableDelete = true\r\n            })\r\n\r\n            // ...........   update the loc class on lost focus, tab, or enter\r\n            gridApi.edit.on.afterCellEdit($scope, function (rowEntity) {\r\n                $scope.updateCont = rowEntity\r\n                $scope.update($scope.updateCont)\r\n            })\r\n        }\r\n    }\r\n\r\n    // .................... update a location class\r\n    $scope.update = (upObj) => {\r\n        let cId = upObj.id\r\n        locClassSrv.updateLocClass(cId, upObj)\r\n    }\r\n\r\n    // .................... delete a container\r\n    $scope.delete = () => {\r\n        let gridData = $scope.gridOptions.data\r\n        let cId = $scope.rowObj.id\r\n        if ($scope.selected === true) {\r\n            for (let i = 0; i < gridData.length; i++) {\r\n                if (gridData[i].id === cId) {\r\n                    gridData.splice(i, 1)\r\n                }\r\n            }\r\n            locClassSrv.deleteLocClass(cId)\r\n            $scope.enableDelete = true\r\n        }\r\n    }\r\n\r\n})","angular.module('app').controller('locContainer', function ($scope, containerSrv, uiGridConstants, ) {\r\n    // »»»»»»»»»»»»»»»»»»»║  TESTS \r\n    $scope.locContainerTest = 'locContainerTest controller is connected and operational'\r\n    $scope.containerServiceTest = containerSrv.containerServiceTest\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ CLEAR FORM\r\n    $scope.clearForm = () => document.getElementById(\"containerCreateForm\").reset()\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ CONTAINER MANIPULATION\r\n    // .................... get list of container types and grid information\r\n    $scope.getContainers = () => containerSrv.getContainerList().then((response) => {\r\n        $scope.containers = response.data\r\n        $scope.gridOptions.data = response.data\r\n    })\r\n    $scope.getContainers()\r\n\r\n    // .................... create container types\r\n    $scope.container = {}\r\n    $scope.createContainer = () => {\r\n        $scope.gridOptions.data.push({\r\n            \"name\": $scope.container.name\r\n        });\r\n        // console.log(`this will be created ... ${JSON.stringify($scope.container)}`)\r\n        containerSrv.createContainer($scope.container)\r\n        $scope.clearForm()\r\n    }\r\n\r\n\r\n    // .................... update container types\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  COLUMNS AND DATA\r\n    $scope.gridOptions = {\r\n        enableRowSelection: true\r\n        , enableRowHeaderSelection: true\r\n        , multiSelect: false\r\n        , enableSelectAll: false\r\n        , enableFiltering: true\r\n        , columnDefs: [\r\n            { name: 'name', displayName: 'Description' }\r\n        ]\r\n        , onRegisterApi: (gridApi) => {\r\n\r\n            gridApi.selection.on.rowSelectionChanged($scope, function (row) {\r\n                $scope.selected = row.isSelected\r\n                $scope.rowId = row.uid\r\n                $scope.rowObj = row.entity\r\n                $scope.enableDelete = false\r\n                $scope.selected === true ? $scope.enableDelete = false : $scope.enableDelete = true\r\n            })\r\n\r\n            // ...........   update the user on lost focus, tab, or enter\r\n            gridApi.edit.on.afterCellEdit($scope, function (rowEntity) {\r\n                $scope.updateCont = rowEntity\r\n                $scope.update($scope.updateCont)\r\n            })\r\n        }\r\n    }\r\n\r\n    // .................... update a container\r\n    $scope.update = (upObj) => {\r\n        let cId = upObj.id\r\n        containerSrv.updateContainer(cId, upObj)\r\n    }\r\n\r\n    // .................... delete a container\r\n    $scope.delete = () => {\r\n        let gridData = $scope.gridOptions.data\r\n        let cId = $scope.rowObj.id\r\n        if ($scope.selected === true) {\r\n            for (let i = 0; i < gridData.length; i++) {\r\n                if (gridData[i].id === cId) {\r\n                    gridData.splice(i, 1)\r\n                }\r\n            }\r\n            containerSrv.deleteContainer(cId)\r\n            $scope.enableDelete = true\r\n        }\r\n    }\r\n\r\n})","angular.module('app').controller('locCreate', function ($scope, locCreateSrv, containerSrv, locClassSrv, locationsListSrv) {\r\n    // »»»»»»»»»»»»»»»»»»»║  TESTS \r\n    $scope.locCtrlTest = 'locCreate controller is connected and operational'\r\n    $scope.locCreateServiceTest = locCreateSrv.locCreateServiceTest\r\n    $scope.containerServiceTest = containerSrv.containerServiceTest\r\n    $scope.locClassServiceTest = locClassSrv.locClassServiceTest\r\n    $scope.locListServiceTest = locationsListSrv.locListServiceTest\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  MODAL CONTROLS\r\n    $scope.modalShownLocation = false\r\n    $scope.showLocationModal = () => $scope.modalShownLocation = true\r\n    $scope.hideLocationModal = () => $scope.modalShownLocation = false\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ CLEAR FORM\r\n    $scope.clearForm = () => document.getElementById(\"createLocationForm\").reset()\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  GET CONTAINER LIST \r\n    $scope.getContainers = () => containerSrv.getContainerList().then((response) => $scope.containers = response.data)\r\n    $scope.getContainers()\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  GET LOCATION CLASSIFICATION LIST\r\n    $scope.getLocClasses = () => locClassSrv.getLocClassesList().then((response) => $scope.locClasses = response.data)\r\n    $scope.getLocClasses()\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  GET LOCATION LIST\r\n    $scope.getLocations = () => locationsListSrv.getLocationsList().then((response) => $scope.locations = response.data)\r\n    $scope.getLocations()\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  CREATE A NEW LOCATION\r\n    //  .................... objects used to post\r\n    $scope.locClassObj = []\r\n    $scope.containerObj = []\r\n    $scope.locationParentObj = []\r\n    $scope.locObj = {}\r\n    //  .................... function to cover defaults are sent if not user didn't make selection\r\n    $scope.setDefaults = () => {\r\n        let cl = $scope.locClassObj.length\r\n        let c = $scope.containerObj.length\r\n        let p = $scope.locationParentObj.length\r\n        cl === 0 ? $scope.locObj.loc_class_id = 1 : undefined\r\n        c === 0 ? $scope.locObj.container_id = 1 : undefined\r\n        p === 0 ? $scope.locObj.parent_location_id = 1 : undefined\r\n    }\r\n    // ....................  create location\r\n    $scope.createLocation = () => {\r\n        $scope.getLocations()\r\n        $scope.locObj.loc_class_id = $scope.locClassObj.id\r\n        $scope.locObj.container_id = $scope.containerObj.id\r\n        $scope.locObj.parent_location_id = $scope.locationParentObj.id\r\n        $scope.setDefaults()\r\n        var exists = 0\r\n        for (let i = 0; i < $scope.locations.length; i++) {\r\n            if ($scope.locations[i].description === $scope.locObj.description && $scope.locations[i].parent_location_id === $scope.locObj.parent_location_id) {\r\n                exists = 1\r\n                break;\r\n            }\r\n            else {\r\n                exists = 0\r\n            }\r\n        }\r\n        if(exists === 1) {\r\n            alert(`this is a duplicate`)\r\n        }\r\n        else {\r\n            locCreateSrv.submitLocationInfo($scope.locObj)\r\n            $scope.getLocations() \r\n            $scope.clearForm()\r\n        }\r\n    }\r\n\r\n})","angular.module('app').controller('locManage', function ($scope, locationsListSrv, locationUpdateSrv, locationDeleteSrv) {\r\n    // »»»»»»»»»»»»»»»»»»»║  TESTS \r\n    $scope.locManageTest = 'locManage controller is connected and operational'\r\n    $scope.locListServiceTest = locationsListSrv.locListServiceTest\r\n\r\n    // // »»»»»»»»»»»»»»»»»»»║ LOCATION CLASSIFICATION MANIPULATION\r\n    // .................... get list of location classes and grid information\r\n    $scope.getLocations = () => locationsListSrv.getLocationsCustomList().then((response) => {\r\n        $scope.gridOptions.data = response.data\r\n    })\r\n    $scope.getLocations()\r\n\r\n    // .................... columns and data\r\n    $scope.gridOptions = {\r\n        enableRowSelection: true\r\n        , enableRowHeaderSelection: true\r\n        , multiSelect: false\r\n        , enableSelectAll: false\r\n        , enableFiltering: true\r\n        , columnDefs: [\r\n            { name: 'id', enableCellEdit: false, width: 75 }\r\n            , { name: 'loc_desc', displayName: 'Description' }\r\n            , { name: 'loc_class_name', displayName: 'Classification', enableCellEdit: false }\r\n            , { name: 'loc_class_desc', displayName: 'Class Desc.', enableCellEdit: false }\r\n            , { name: 'loc_container', displayName: 'Container', enableCellEdit: false }\r\n            , { name: 'x_coordinate', displayName: 'X', width: 75 }\r\n            , { name: 'y_coordinate', displayName: 'Y', width: 75 }\r\n            , { name: 'z_coordinate', displayName: 'Z', width: 75 }\r\n            , { name: 'parent_location_id', displayName: 'Parent', width: 110 }\r\n        ]\r\n        , onRegisterApi: (gridApi) => {\r\n\r\n            gridApi.selection.on.rowSelectionChanged($scope, function (row) {\r\n                $scope.selected = row.isSelected\r\n                $scope.rowId = row.uid\r\n                $scope.rowObj = row.entity\r\n                $scope.enableDelete = false\r\n                $scope.selected === true ? $scope.enableDelete = false : $scope.enableDelete = true\r\n            })\r\n\r\n            // ...........   update the location on lost focus, tab, or enter\r\n            gridApi.edit.on.afterCellEdit($scope, function (rowEntity) {\r\n                $scope.updateCont = rowEntity\r\n                // ............. drop containers and classes text from entity obj\r\n                var gridObj = {container_id: rowEntity.container_id, id: rowEntity.id, loc_class_id: rowEntity.loc_class_id, loc_desc: rowEntity.loc_desc, parent_location_id: rowEntity.parent_location_id, x_coordinate: rowEntity.x_coordinate, y_coordinate: rowEntity.y_coordinate, z_coordinate: rowEntity.z_coordinate}\r\n                // ............. call update\r\n                $scope.update(gridObj)\r\n            })\r\n        }\r\n    }\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  UPDATE LOCATIONS\r\n    $scope.update = (updateObj) => locationUpdateSrv.submitLocationInfo(updateObj)\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  DELETE LOCATIONS\r\n    $scope.delete = () => {\r\n        let gridData = $scope.gridOptions.data\r\n        let cId = $scope.rowObj.id\r\n        if ($scope.selected === true) {\r\n            for (let i = 0; i < gridData.length; i++) {\r\n                if (gridData[i].id === cId) {\r\n                    gridData.splice(i, 1)\r\n                }\r\n            }\r\n            locationDeleteSrv.deleteLocation(cId)\r\n            $scope.enableDelete = true\r\n        }\r\n    }\r\n\r\n})","angular.module('app').controller('mainCtrl', function ($scope, authService, checkUserSrv) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    $scope.controllerTest = 'Controller Engaged!!!'\r\n\r\n    $scope.loggedIn = false;\r\n\r\n    $scope.login = () => {\r\n        $scope.loggedIn = true\r\n        // authService.logMeIn()\r\n    }\r\n    $scope.logout = () => {\r\n        $scope.loggedIn = false\r\n        authService.logout()\r\n    }\r\n    // .......................  checks to see if the user is logged in\r\n    // checkUserSrv.getUser().then((response) => $scope.loggedIn = true)\r\n\r\n    // .......................  modal controls\r\n    $scope.modalShown = false;\r\n    $scope.toggleModal = function () {\r\n        $scope.modalShown = !$scope.modalShown;\r\n    };\r\n\r\n    //vars\r\n    $scope.createUserModalContent = false\r\n    $scope.createLocModalContent = false\r\n    $scope.setModalContent = (contentId) => {\r\n        switch (contentId) {\r\n            case 0:\r\n                $scope.setAllModalFalse()\r\n                $scope.createUserModalContent = true\r\n                $scope.toggleModal()\r\n                break;\r\n            case 1:\r\n                $scope.setAllModalFalse()\r\n                $scope.createLocModalContent = true\r\n                $scope.toggleModal()\r\n                break;\r\n        }\r\n    }\r\n    $scope.setAllModalFalse = () => {\r\n        $scope.createUserModalContent = false\r\n        $scope.createLocModalContent = false\r\n        // console.log(\"create user =\", $scope.createUserModalContent)\r\n    }\r\n\r\n\r\n})","","","angular.module('app').controller('settings', function ($scope, uiGridConstants, locationsListSrv, settingsSrv) {\r\n    // »»»»»»»»»»»»»»»»»»»║  TESTS \r\n    $scope.settingsTest = 'settings controller is connected and operational'\r\n    $scope.locListServiceTest = locationsListSrv.locListServiceTest\r\n    // »»»»»»»»»»»»»»»»»»»║  VARIABLES \r\n    $scope.defaultLocation\r\n    $scope.loc\r\n    var sendArr = {}\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  DATABASE CALLS\r\n    // .................... get list of locations\r\n    $scope.getLocations = () => locationsListSrv.getLocationsList().then(response => $scope.locations = response.data)\r\n    $scope.getLocations()\r\n\r\n    // .................... get default location\r\n    $scope.getDefaultLoc = () => settingsSrv.getDefaultLocation().then(response => { \r\n        $scope.loc = response.data[0].description;\r\n        $scope.locid = response.data[0].id\r\n         $scope.defaultLocation = $scope.loc })\r\n    $scope.getDefaultLoc()\r\n\r\n    // .................... will convert to update default location\r\n    $scope.updateDefault = () => {\r\n        var dl = $scope.defaultLocation\r\n        if (typeof dl === 'string') {\r\n            // console.log(dl)\r\n            sendArr.d_location_id = $scope.locid\r\n        }\r\n        else {\r\n            // console.log(dl.description)\r\n            sendArr.d_location_id = dl.id\r\n        }        \r\n        console.log(sendArr) //this is what we will send to the db PUT\r\n        settingsSrv.updateDefaultLocation(sendArr)\r\n    }\r\n})","angular.module('app').controller('trackBy', function ($scope, uiGridConstants, trackByGetSrv, trackByPostSrv, trackByPutSrv, trackByDeleteSrv) {\r\n    // »»»»»»»»»»»»»»»»»»»║  TESTS \r\n    $scope.trackByTest = 'trackBy controller is connected and operational'\r\n    $scope.trackByGetSrvTest = trackByGetSrv.trackByGetSrvTest\r\n    $scope.trackByPostSrvTest = trackByPostSrv.trackByPostSrvTest\r\n    $scope.trackByPutSrvTest = trackByPutSrv.trackByPutSrvTest\r\n    $scope.trackByDeleteSrvTest = trackByDeleteSrv.trackByDeleteSrvTest\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ CLEAR FORM\r\n    $scope.clearForm = () => document.getElementById(\"trackbyCreateForm\").reset()\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ TRACKBY MANIPULATION\r\n    // .................... get list of trackby types and grid information\r\n    $scope.gettrackbys = () => trackByGetSrv.getTrackByList().then((response) => {\r\n        $scope.trackbys = response.data\r\n        $scope.gridOptions.data = response.data\r\n        // console.log(`gridOptions.data = ${JSON.stringify(response.data)}`)\r\n    })\r\n    $scope.gettrackbys()\r\n\r\n    // .................... create trackby types\r\n    $scope.trackByObj = {}\r\n    $scope.createTrackBy = () => {\r\n        $scope.gridOptions.data.push({\r\n            \"trackby_name\": $scope.trackByObj.trackby_name\r\n            , \"trackby_value\": $scope.trackByObj.trackby_value\r\n            , \"trackby_category\": $scope.trackByObj.trackby_category\r\n        });\r\n        trackByPostSrv.createTrackBy($scope.trackByObj)\r\n\r\n        $scope.clearForm()\r\n    }\r\n\r\n\r\n    // .................... update trackby types\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  COLUMNS AND DATA\r\n    $scope.gridOptions = {\r\n        enableRowSelection: true\r\n        , enableRowHeaderSelection: true\r\n        , multiSelect: false\r\n        , enableSelectAll: false\r\n        , enableFiltering: true\r\n        , columnDefs: [\r\n            { name: 'id', enableCellEdit: false}\r\n            , { name: 'trackby_name', displayName: 'Name' }\r\n            , { name: 'trackby_value', displayName: 'Value' }\r\n            , { name: 'trackby_category', displayName: 'Category' }\r\n        ]\r\n\r\n        , onRegisterApi: (gridApi) => {\r\n\r\n            gridApi.selection.on.rowSelectionChanged($scope, function (row) {\r\n                $scope.selected = row.isSelected\r\n                $scope.rowId = row.uid\r\n                $scope.rowObj = row.entity\r\n                $scope.enableDelete = false\r\n                $scope.selected === true ? $scope.enableDelete = false : $scope.enableDelete = true\r\n            })\r\n\r\n            // ...........   update the user on lost focus, tab, or enter\r\n            gridApi.edit.on.afterCellEdit($scope, function (rowEntity) {\r\n                $scope.updateCont = rowEntity\r\n                $scope.update($scope.updateCont)\r\n            })\r\n        }\r\n    }\r\n\r\n    // .................... update a trackby\r\n    $scope.update = (upObj) => {\r\n        let cId = upObj.id\r\n        trackByPutSrv.updateTrackBy(cId, upObj)\r\n    }\r\n\r\n    // .................... delete a trackby\r\n    $scope.delete = () => {\r\n        let gridData = $scope.gridOptions.data\r\n        let cId = $scope.rowObj.id\r\n        if ($scope.selected === true) {\r\n            for (let i = 0; i < gridData.length; i++) {\r\n                if (gridData[i].id === cId) {\r\n                    gridData.splice(i, 1)\r\n                }\r\n            }\r\n            trackByDeleteSrv.deleteTrackBy(cId)\r\n            $scope.enableDelete = true\r\n        }\r\n    }\r\n\r\n})","angular.module('app').controller('userCreate', function ($scope, stateListSrv, countryListSrv, updateUserSrv, postUserInfoSrv, userListSrv, deleteAllUsersSrv) {\r\n    // »»»»»»»»»»»»»»»»»»»║  TESTS \r\n    $scope.userCreateTest = 'userCreate controller is working correctly'\r\n    $scope.stateListSrvTest = stateListSrv.serviceTest\r\n    $scope.postUserInfoSrvTest = postUserInfoSrv.serviceTest\r\n    $scope.userServiceTest = userListSrv.userServiceTest\r\n    $scope.deleteAllUsersServiceTest = deleteAllUsersSrv.deleteAllUsersServiceTest\r\n    $scope.countryListServiceTest = countryListSrv.countryListServiceTest\r\n\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  VARIABLES\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  MODAL CONTROLS\r\n    $scope.modalShownUser = false\r\n    $scope.showUserModal = () => $scope.modalShownUser = true\r\n    $scope.hideUserModal = () => $scope.modalShownUser = false\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  GET STATES LIST\r\n    $scope.states = () => stateListSrv.getStatesList().then((response) => $scope.stateName = response.data)\r\n    $scope.states()\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  GET COUNTRY LIST\r\n    $scope.country = () => countryListSrv.getcountryList().then((response) => $scope.countryName = response.data)\r\n    $scope.country()\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ CLEAR FORM\r\n    $scope.clearForm = () => document.getElementById(\"userCreateForm\").reset()\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ SUBMIT USER FORM DATA\r\n    // .................... user object to submit   \r\n    $scope.userInfo = { \"country_id\": 1, \"inactive\": false }\r\n\r\n    // .................... sets rent rating\r\n    $scope.rating = 5;\r\n    $scope.rateFunction = (rating) => $scope.userInfo.renter_rating = rating\r\n\r\n    // .................... sets checkbox\r\n    $scope.deactivateUserChecked = () => $scope.userInfo.inactive = $scope.userStatus\r\n\r\n\r\n    $scope.submit = () => {\r\n        var sName = $scope.stateObj.name\r\n        var exists = 0\r\n\r\n        // .................... checks to verify that the user doesn't already exist in the database.\r\n        var getUsers = () => {\r\n            userListSrv.getUserList().then((response) => {\r\n                $scope.users = response.data\r\n                // console.log(JSON.stringify($scope.users))\r\n                for (let i = 0; i < $scope.users.length; i++) {\r\n                    // console.log(`db email ${$scope.users[i].email}`)\r\n                    if ($scope.users[i].email === $scope.userInfo.email && $scope.users[i].first_name === $scope.userInfo.firstName) {\r\n                        exists = 1\r\n                        break;\r\n                    }\r\n                }\r\n                // console.log(`exists inside after function ${exists}`)\r\n                for (let i = 0; i < $scope.stateName.length; i++) {\r\n                    if ($scope.stateName[i].name === sName) {\r\n                        $scope.userInfo.state_id = $scope.stateName[i].id\r\n                    }\r\n                }\r\n                if (exists === 0) {\r\n                    // console.log(`userInfo object that will be sent is ${JSON.stringify($scope.userInfo)}`)\r\n                    postUserInfoSrv.submitUserInfo($scope.userInfo)\r\n                    alert(`User has been created.`)\r\n                    $scope.clearForm()\r\n                }\r\n                else {\r\n                    alert(`User already exists!`)\r\n                }\r\n            })\r\n        }\r\n        getUsers()\r\n    }\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ DELETE ALL USERS\r\n    $scope.deleteUsers = () => { return deleteAllUsersSrv.deleteAllUsers() }\r\n\r\n\r\n\r\n    // no code below this line\r\n})","angular.module('app').controller('userManage', function ($scope, uiGridConstants, userListSrv, stateListSrv, countryListSrv, updateUserSrv, getUserColumnsSrv) {\r\n    // »»»»»»»»»»»»»»»»»»»║  TESTS\r\n    $scope.userManageControllerTest = 'userManage Controller is ready to role!'\r\n    $scope.getUserColumnsSrvServiceTest = getUserColumnsSrv.getUserColumnsSrvServiceTest\r\n    $scope.updateUserServiceTest = updateUserSrv.updateUserServiceTest\r\n    $scope.StateServiceTest = stateListSrv.serviceTest\r\n    $scope.countryListServiceTest = countryListSrv.countryListServiceTest\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  GET STATES LIST\r\n    $scope.states = () => stateListSrv.getStatesList().then((response) => $scope.stateName = response.data)\r\n    $scope.states()\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  GET COUNTRY LIST\r\n    $scope.country = () => countryListSrv.getcountryList().then((response) => $scope.countryName = response.data)\r\n    $scope.country()\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  COLUMNS AND DATA\r\n    $scope.gridOptions = {\r\n        enableRowSelection: false\r\n        , enableRowHeaderSelection: false\r\n        , enableFiltering: true\r\n        , columnDefs: [ //this shows which columns show in grid. the value needs to match the data key.\r\n            // { name: 'id' },\r\n            { name: 'first_name' }\r\n            , { name: 'last_name' }\r\n            , { name: 'phone' }\r\n            , { name: 'email' }\r\n            , { name: 'state', displayName: 'State'}\r\n        ]\r\n        , onRegisterApi: (gridApi) => {\r\n            $scope.grid1Api = gridApi\r\n\r\n            // ...........   update the user on lost focus, tab, or enter\r\n            gridApi.edit.on.afterCellEdit($scope, function (rowEntity) {\r\n                $scope.updatedUser = rowEntity\r\n                $scope.update($scope.updatedUser)\r\n            })\r\n        }\r\n    };\r\n\r\n    // ....................  get column data\r\n    $scope.getUsers = () => userListSrv.getCustomUserList().then((response) => $scope.gridOptions.data = response.data)\r\n    $scope.getUsers()\r\n\r\n\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ UPDATE USER\r\n    $scope.update = (updateObj) => {\r\n        var uId = updateObj.id\r\n        var expectedObj = {\r\n            \"firstName\": updateObj.first_name\r\n            , \"lastName\": updateObj.last_name\r\n            , \"phone\": updateObj.phone\r\n            , \"email\": updateObj.email\r\n            , \"address1\": updateObj.address1\r\n            , \"address2\": updateObj.address2\r\n            , \"city\": updateObj.city\r\n            , \"state_id\": updateObj.state\r\n            , \"country_id\": updateObj.country\r\n            , \"zip\": updateObj.zip\r\n            , \"renter_rating\": updateObj.renter_rating\r\n            , \"inactive\": updateObj.inactive\r\n            , \"auth_id\": updateObj.auth_id\r\n        }\r\n        let getId = () => {\r\n            // ..... convert state name\r\n            for (let i = 0; i < $scope.stateName.length; i++) {\r\n                if ($scope.stateName[i].name === expectedObj.state_id) {\r\n                    expectedObj.state_id = $scope.stateName[i].id\r\n                }\r\n            }\r\n            // ..... convert country name\r\n            for (let i = 0; i < $scope.countryName.length; i++) {\r\n                if ($scope.countryName[i].name === expectedObj.country_id) {\r\n                    expectedObj.country_id = $scope.countryName[i].id\r\n                }\r\n            }\r\n            // console.log(`this is what will be sent! ${uId}`)\r\n            // console.log(`this is what will be sent! ${JSON.stringify(expectedObj)}`)\r\n            updateUserSrv.updateUser(uId, expectedObj)\r\n        }\r\n        getId()\r\n    }\r\n})","angular.module('app').directive('bcScanner',\r\n    function () {\r\n        return {\r\n            restrict: 'E',\r\n            templateUrl: '../views/barcodeScanner.html',\r\n            scope: '@',\r\n            controller: ($scope, bcService) => {\r\n                // .................... variables\r\n                $scope.barcode\r\n                $scope.storeBarcode = () => bcService.storeBarcode($scope.barcode)\r\n\r\n                // .................... quagga barcode scanner\r\n                var Quagga = window.Quagga;\r\n                var resultsArr = []\r\n                var counter = resultsArr.length\r\n                var App = {\r\n                    _lastResult: null,\r\n                    init: function () {\r\n                        this.attachListeners();\r\n                    },\r\n                    activateScanner: function () {\r\n                        var scanner = this.configureScanner('.overlay__content'),\r\n                            onDetected = function (result) {\r\n                                resultsArr.push(result.codeResult.code)\r\n                                counter = resultsArr.length\r\n                                // console.log(\"On Detected :\", resultsArr)\r\n                                // console.log(\"counter = \", counter)\r\n                                if (counter === 10) {\r\n                                    var mc = mostCommon(resultsArr)\r\n                                    console.log(\"most common\", mc)\r\n                                    $scope.barcode = mc                                    \r\n                                    $scope.storeBarcode()\r\n                                    $scope.$apply()\r\n                                    $scope.stoppy()\r\n                                    $scope.showBarcodeWindow = false\r\n                                    $scope.$apply()\r\n                                    snd.play()\r\n                                }\r\n                            }.bind(this),\r\n                            stop = function () {\r\n                                scanner.stop();  // should also clear all event-listeners?\r\n                                scanner.removeEventListener('detected', onDetected);\r\n                                this.hideOverlay();\r\n                                this.attachListeners();\r\n                            }.bind(this);\r\n\r\n                        this.showOverlay(stop);\r\n                        console.log(\"activateScanner\");\r\n                        scanner.addEventListener('detected', onDetected).start();\r\n                    },\r\n                    showOverlay: function (cancelCb) {\r\n                        $scope.showBarcodeWindow = true\r\n                        $scope.$apply()\r\n                        document.querySelector('.container ')\r\n                            .classList.add('hide');\r\n                        document.querySelector('.overlay--inline')\r\n                            .classList.add('show');\r\n                        $scope.stoppy = () => {\r\n                            cancelCb();\r\n                        };\r\n                    },\r\n                    attachListeners: function () {\r\n                        var button = document.querySelector('button.scan'),\r\n                            self = this;\r\n\r\n                        button.addEventListener(\"click\", function clickListener(e) {\r\n                            e.preventDefault();\r\n                            button.removeEventListener(\"click\", clickListener);\r\n                            self.activateScanner();\r\n                        });\r\n                    },\r\n                    hideOverlay: function () {\r\n                        document.querySelector('.container ')\r\n                            .classList.remove('hide');\r\n                        document.querySelector('.overlay--inline')\r\n                            .classList.remove('show');\r\n                    },\r\n                    configureScanner: function (selector) {\r\n                        var scanner = Quagga\r\n                            .decoder({ readers: ['ean_reader'] })\r\n                            .locator({ patchSize: 'medium' })\r\n                            .fromSource({\r\n                                target: selector,\r\n                                constraints: {\r\n                                    width: 600,\r\n                                    height: 600,\r\n                                    facingMode: \"environment\"\r\n                                }\r\n                            });\r\n                        return scanner;\r\n                    }\r\n                };\r\n                App.init();\r\n\r\n                // .................... take results array and get the average\r\n                const mostCommon = (arr) => {\r\n                    return arr.sort((a, b) =>\r\n                        arr.filter(v => v === a).length\r\n                        - arr.filter(v => v === b).length\r\n                    ).pop()\r\n                }\r\n                // .................... play a sound\r\n                var snd = new Audio(\"../audio/cameraOne.wav\")\r\n\r\n                // .................... hide / show playback window\r\n                $scope.showBarcodeWindow = false\r\n            }\r\n\r\n        };\r\n    }\r\n);","angular.module('app').directive('modalLocationCreateDir', function(){\r\n    return {\r\n        templateUrl: '../views/location_create.html'\r\n        , scope: '='\r\n        , controller: 'locCreate'\r\n    }\r\n})","angular.module('app').directive('modalUserCreateDir', function(){\r\n    return {\r\n        templateUrl: '../views/user_create.html'\r\n        , scope: '='\r\n        , controller: 'userCreate'\r\n    }\r\n})","angular.module('app').directive('starRating', \r\n    function () {\r\n        return {\r\n            restrict: 'A',\r\n            template: '<ul class=\"rating\">'\r\n            + '\t<li ng-repeat=\"star in stars\" ng-class=\"star\" ng-click=\"toggle($index)\">'\r\n            + '\\u2605'\r\n            + '</li>'\r\n            + '</ul>',\r\n            scope: {\r\n                ratingValue: '=',\r\n                max: '=',\r\n                onRatingSelected: '&'\r\n            },\r\n            link: function (scope, elem, attrs) {\r\n                var updateStars = function () {\r\n                    scope.stars = [];\r\n                    for (var i = 0; i < scope.max; i++) {\r\n                        scope.stars.push({\r\n                            filled: i < scope.ratingValue\r\n                        });\r\n                    }\r\n                };\r\n\r\n                scope.toggle = function (index) {\r\n                    scope.ratingValue = index + 1;\r\n                    scope.onRatingSelected({\r\n                        rating: index + 1\r\n                    });\r\n                };\r\n\r\n                scope.$watch('ratingValue',\r\n                    function (oldVal, newVal) {\r\n                        if (newVal) {\r\n                            updateStars();\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        };\r\n    }\r\n);","angular.module('app').directive('trackByDir', function (trackByGetSrv) {\r\n  return {\r\n    restrict: 'E'\r\n    , link: (scope, elem, attr) => {\r\n      // // .................... get list of trackby types and grid information\r\n      // $scope.gettrackbys = () => trackByGetSrv.getTrackByList().then((response) => {\r\n      //   $scope.trackbys = response.data\r\n      // })\r\n      // $scope.gettrackbys()\r\n      // < div ng-repeat=\"trackby in trackbys\" >\r\n      //     <input type=\"text\" placeholder=\"trackby.[name]\" ng-model=\"trackby.value\">\r\n      // </div>\r\n    }\r\n  };\r\n});","angular.module('app').service('authService', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.authServiceTest = 'the authService is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    this.logMeIn = () => $http.get('/auth', 'Access-Control-Allow-Origin').then(response => res.send('ok'))\r\n    this.logout = () => $http.get('/auth/logout').then(response => window.location = response.data)\r\n})","angular.module('app').service('bcService', function($http){\r\n    // VARIABLES\r\n    this.upc\r\n\r\n    //FUNCTIONS\r\n    this.storeBarcode = (bc) => {\r\n        console.log(\"barcode was stored and is\", bc)\r\n        this.upc = bc}\r\n    \r\n})","angular.module('app').service('checkUserSrv', function($http){\r\n\r\nthis.getUser = () => $http.get('http://localhost:3000/auth/me')\r\n\r\n})","angular.module('app').service('containerSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.containerServiceTest = 'the containerSrv is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    this.name \r\n    // ...................  get containers\r\n    this.getContainerList = () => ($http.get('http://localhost:3000/api/containers'))\r\n    // ...................  create containers\r\n    this.createContainer = (data) => {\r\n        $http({\r\n            url: 'http://localhost:3000/api/containers',\r\n            method: 'POST',\r\n            data: data\r\n        })\r\n    }\r\n    // ...................  update containers\r\n    this.updateContainer = (id, data) => {\r\n        $http({\r\n            url: 'http://localhost:3000/api/containers/' + id,\r\n            method: 'PUT',\r\n            data: data\r\n        })\r\n    }\r\n    // ...................  delete containers\r\n    this.deleteContainer = (id) => {\r\n        $http({\r\n            url: 'http://localhost:3000/api/containers/' + id,\r\n            method: 'DELETE'\r\n        })\r\n    }\r\n})","angular.module('app').service('countryListSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.countryListServiceTest = 'the countryListSrv is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    this.getcountryList = () => ($http.get('http://localhost:3000/api/country'))\r\n})","angular.module('app').service('deleteAllUsersSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.deleteAllUsersServiceTest = 'the deleteAllUsersSrv is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    this.deleteAllUsers = function () {\r\n        $http({\r\n            url: 'http://localhost:3000/api/user',\r\n            method: 'DELETE'\r\n        }).then((httpResponse) => console.log('response:', JSON.stringify(httpResponse)))\r\n    }\r\n\r\n})","angular.module('app').service('getUserColumnsSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.getUserColumnsSrvServiceTest = 'the getUserColumnsSrv is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    this.getColumnList = () => ($http.get('http://localhost:3000/api/user/columns'))\r\n})\r\n","angular.module('app').service('itemDeleteSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.itemDeleteSrvTest = 'the itemDeleteSrv is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    // ...................  delete items\r\n    this.deleteItem = (id) => {\r\n        $http({\r\n            url: '/api/trackbys/' + id,\r\n            method: 'DELETE'\r\n        })\r\n    }\r\n})","angular.module('app').service('itemGetSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.itemGetSrvTest = 'the itemGetSrv is connected'\r\n\r\n    // // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    // ...................  get items\r\n    this.getItemList = () => $http.get('/api/items')\r\n    this.getItemCustomList = () => $http.get('/api/items/custom')\r\n})","angular.module('app').service('itemMainSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.itemMainSrvTest = 'the itemMainSrv is connected'\r\n\r\n    // // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    // ...................  get logged in user\r\n    this.getCurrentUser = () => $http.get('/auth/me/')\r\n})","angular.module('app').service('itemPostSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.itemPostSrvTest = 'the itemPostSrv is connected'\r\n\r\n    // // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    // ...................  create item\r\n    this.createItem = (data) => {\r\n        // console.log('the data in itemPostSrv is: ', data)\r\n        $http({\r\n            url: '/api/items',\r\n            method: 'POST',\r\n            data: data\r\n        })\r\n    }\r\n})","angular.module('app').service('itemPutSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.itemPutSrvTest = 'the itemPutSrv is connected'\r\n\r\n    // // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    // ...................  update items\r\n    this.updateItem = (id, data) => {\r\n        // console.log(\"the id in the srv is :\", data)\r\n        $http({\r\n            url: '/api/items/' + id,\r\n            method: 'PUT',\r\n            data: data\r\n        })\r\n    }\r\n})","angular.module('app').service('locationDeleteSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.locationDeleteServiceTest = 'the locationDeleteSrv is connected'\r\n\r\n    // // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    // ...................  delete loc_classes\r\n    this.deleteLocation = (id) => {\r\n        $http({\r\n            url: 'http://localhost:3000/api/locations/' + id,\r\n            method: 'DELETE'\r\n        })\r\n    }\r\n})","angular.module('app').service('locationsListSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.locListServiceTest = 'the locationsListSrv is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    this.getLocationsList = () => ($http.get('http://localhost:3000/api/locations')) \r\n    this.getLocationsCustomList = () => ($http.get('http://localhost:3000/api/locations/custom')) \r\n})","angular.module('app').service('locationUpdateSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.locationUpdateServiceTest = 'the locationUpdateSrv is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    this.submitLocationInfo = (data) => {\r\n        // console.log(`data to be sent ${JSON.stringify(data)}`)\r\n        $http({\r\n            url: 'http://localhost:3000/api/locations/' + data.id,\r\n            method: 'PUT',\r\n            data: data\r\n        })\r\n    }\r\n})","angular.module('app').service('locClassSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.locClassServiceTest = 'the locClassSrv is connected'\r\n\r\n    // // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    // ...................  get loc_classes\r\n    this.getLocClassesList = () => ($http.get('http://localhost:3000/api/loc_classes'))\r\n    // ...................  create loc_classes\r\n    this.createLocClassObj = (data) => {\r\n        $http({\r\n            url: 'http://localhost:3000/api/loc_classes',\r\n            method: 'POST',\r\n            data: data\r\n        })\r\n    }\r\n    // ...................  update loc_classes\r\n    this.updateLocClass = (id, data) => {\r\n        $http({\r\n            url: 'http://localhost:3000/api/loc_classes/' + id,\r\n            method: 'PUT',\r\n            data: data\r\n        })\r\n    }\r\n    // ...................  delete loc_classes\r\n    this.deleteLocClass = (id) => {\r\n        $http({\r\n            url: 'http://localhost:3000/api/loc_classes/' + id,\r\n            method: 'DELETE'\r\n        })\r\n    }\r\n})","angular.module('app').service('locCreateSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.locCreateServiceTest = 'the locCreateSrv is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    this.submitLocationInfo = (data) => {\r\n        $http({\r\n            url: 'http://localhost:3000/api/locations',\r\n            method: 'POST',\r\n            data: data\r\n        })\r\n    }\r\n})","angular.module('app').service('postUserInfoSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.serviceTest = 'the postUserInfoSrv is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    this.submitUserInfo = (data) => {\r\n        // console.log(`clicked submit and got ${JSON.stringify(data)}`)\r\n        $http({\r\n            url: 'http://localhost:3000/api/users',\r\n            method: 'POST',\r\n            data: data\r\n        })\r\n    }\r\n})","angular.module('app').service('settingsSrv', function ($http) {\r\n    // ...................  get default location\r\n    this.getDefaultLocation = () => $http.get('http://localhost:3000/api/settings/default_location')\r\n\r\n    // ...................  update default location\r\n    this.updateDefaultLocation = (data) => {\r\n        console.log('sending data')\r\n        console.log(data)\r\n        $http({\r\n            url: '/api/settings/default_location',\r\n            method: 'PUT',\r\n            data: data\r\n        })\r\n    }\r\n\r\n})","angular.module('app').service('stateListSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.serviceTest = 'the stateListSrv is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    this.getStatesList = () => ($http.get('http://localhost:3000/api/states'))\r\n})","angular.module('app').service('trackByDeleteSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.trackByDeleteSrvTest = 'the trackByDeleteSrv is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    // ...................  delete trackbys\r\n    this.deleteTrackBy = (id) => {\r\n        $http({\r\n            url: 'http://localhost:3000/api/trackbys/' + id,\r\n            method: 'DELETE'\r\n        })\r\n    }\r\n})","angular.module('app').service('trackByGetSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.trackByGetSrvTest = 'the trackByGetSrv is connected'\r\n\r\n    // // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    // ...................  get trackbys\r\n    this.getTrackByList = () => ($http.get('http://localhost:3000/api/trackbys/'))\r\n})","angular.module('app').service('trackByPostSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.trackByPostSrvTest = 'the trackByPostSrv is connected'\r\n\r\n    // // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    // ...................  create trackbys\r\n    this.createTrackBy = (data) => {\r\n        $http({\r\n            url: 'http://localhost:3000/api/trackbys/',\r\n            method: 'POST',\r\n            data: data\r\n        })\r\n    }\r\n})","angular.module('app').service('trackByPutSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.trackByPutSrvTest = 'the trackByPutSrv is connected'\r\n\r\n    // // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    // ...................  update trackbys\r\n    this.updateTrackBy = (id, data) => {\r\n        $http({\r\n            url: 'http://localhost:3000/api/trackbys/' + id,\r\n            method: 'PUT',\r\n            data: data\r\n        })\r\n    }\r\n})","angular.module('app').service('updateUserSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.updateUserServiceTest = 'the updateUserSrv is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    this.updateUser = (id, data) => {\r\n        $http({\r\n            url: 'http://localhost:3000/api/users/' + id,\r\n            method: 'PUT',\r\n            data: data\r\n        })\r\n    }\r\n})\r\n\r\n","angular.module('app').service('userListSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.userServiceTest = 'the userListSrv is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    this.getUserList = () => ($http.get('http://localhost:3000/api/users'))\r\n    this.getCustomUserList = () => ($http.get('http://localhost:3000/api/users/custom'))\r\n})"]}