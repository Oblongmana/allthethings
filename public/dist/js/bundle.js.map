{"version":3,"sources":["app.js","controllers/itemCreate.js","controllers/itemManage.js","controllers/locClass.js","controllers/locContainer.js","controllers/locCreate.js","controllers/locManage.js","controllers/mainCtrl.js","controllers/notificationPrimary.js","controllers/notificationSecondary.js","controllers/settings.js","controllers/trackBy.js","controllers/userCreate.js","controllers/userManage.js","directives/bcScannerDir.js","directives/modalContainerDir.js","directives/modalItemsDir.js","directives/modalLocationCreateDir.js","directives/modalStorageDir.js","directives/modalTrackDir.js","directives/modalUserCreateDir.js","directives/starRatingDir.js","directives/trackByDir.js","services/authService.js","services/bcService.js","services/checkUserSrv.js","services/containerSrv.js","services/countryListSrv.js","services/deleteAllUsersSrv.js","services/getUserColumnsSrv.js","services/itemDeleteSrv.js","services/itemGetSrv.js","services/itemMainSrv.js","services/itemPostSrv.js","services/itemPutSrv.js","services/locationDeleteSrv.js","services/locationsListSrv.js","services/locationUpdateSrv.js","services/locClassSrv.js","services/locCreateSrv.js","services/postUserInfoSrv.js","services/settingsSrv.js","services/stateListSrv.js","services/trackByDeleteSrv.js","services/trackByGetSrv.js","services/trackByPostSrv.js","services/trackByPutSrv.js","services/updateUserSrv.js","services/userListSrv.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","otherwise","state","templateUrl","url","controller","$scope","$interval","bcService","itemMainSrv","itemGetSrv","itemPostSrv","itemPutSrv","itemDeleteSrv","locationsListSrv","trackByGetSrv","userListSrv","settingsSrv","itemCreateTest","itemGetSrvTest","itemPostSrvTest","itemPutSrvTest","itemDeleteSrvTest","itemMainSrvTest","modalShownItems","showItemsModal","fireRefreshEventOnWindow","evt","document","createEvent","initEvent","window","dispatchEvent","hideItemsModal","clearForm","getElementById","reset","getBC","barcode","upc","console","log","itemCreateObj","has_package","has_multiPiece","is_consumable","repOther","replink","af_period","trackbyValues","itemsObj","repItem","userId","commonLocObj","loc_id","currentUser","getCurrentUser","then","thisUser","response","data","first_name","owner_id","id","originalPackaging","packageStatus","multiplePieces","multiPiece","isConsumable","consumable","rating","rateFunction","sentimental_rating","today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","setAttribute","getLocations","getLocationsList","locations","getLocationsCustomList","locGrid","gridOptions","getDefaultLoc","getDefaultLocation","loc","description","locid","location_id","defaultLocation","gettrackbys","getTrackByList","trackbys","getUsers","getCustomUserList","users","enableRowSelection","enableRowHeaderSelection","multiSelect","enableSelectAll","enableFiltering","columnDefs","name","displayName","onRegisterApi","gridApi","selection","on","rowSelectionChanged","row","selected","isSelected","rowId","uid","rowObj","entity","push","splice","indexOf","common","locationId","locationOption","swapper","linked","createItem","loggedInUser","itemManageTest","ddList","ddLocList","rtnUsers","rtnLocs","nuid","nlid","useFrequency","value","betterBool","getGridData","getItemCustomList","getUserList","droplist","tempArr","rIndex","map","getLocaitonList","minW","maxW","wid","enableGridMenu","infiniteScrollRowsFromEnd","infiniteScrollUp","infiniteScrollDown","enableCellEdit","minWidth","width","maxWidth","pinnedLeft","editableCellTemplate","editDropdownValueLabel","editDropdownOptionsArray","type","cellFilter","cellTemplate","core","addToGridMenu","grid","columnVisibilityChanged","changedColumn","columnChanged","colDef","visible","enableDelete","edit","afterCellEdit","rowEntity","updateCont","rei","reo","Owner","rel","locationDescription","newUsersId","filter","el","ind","arr","newLocationsId","newQuantity","qty","nqty","nIQty","nFQty","frequency_qty","nWQty","warrenty_period_in_days","nSRQty","gridObj","date_added","frequency_period","img","is_part","last_accessed","locationID","original_package","other_common_loc_json","parent_item_id","purchase_date","purchase_price","purchase_reason","purchase_retailer","replace_radio_default","replacement_comment","replacement_link","resale_value","short_name","trackby_json","userID","update","updateObj","updateItem","locClassSrv","uiGridConstants","locClassTest","locClassServiceTest","modalShownStorage","showStorageModal","hideStorageModal","locClassObj","getLocClasses","getLocClassesList","locClasses","createLocClassObj","upObj","cId","updateLocClass","delete","gridData","i","length","deleteLocClass","containerSrv","locContainerTest","containerServiceTest","modalShownContainer","showContainerModal","hideContainerModal","container","getContainers","getContainerList","containers","createContainer","updateContainer","deleteContainer","locCreateSrv","locCtrlTest","locCreateServiceTest","locListServiceTest","modalShownLocation","showLocationModal","hideLocationModal","containerObj","locationParentObj","locObj","setDefaults","cl","c","p","loc_class_id","undefined","container_id","parent_location_id","createLocation","exists","alert","submitLocationInfo","locationUpdateSrv","locationDeleteSrv","locManageTest","loc_desc","x_coordinate","y_coordinate","z_coordinate","deleteLocation","authService","checkUserSrv","controllerTest","loggedIn","login","logout","modalShown","toggleModal","pageTitle","watchLocation","area","location","hash","settingsTest","sendArr","updateDefault","dl","d_location_id","updateDefaultLocation","trackByPostSrv","trackByPutSrv","trackByDeleteSrv","trackByTest","trackByGetSrvTest","trackByPostSrvTest","trackByPutSrvTest","trackByDeleteSrvTest","modalShownTrackby","showTrackbyModal","hideTrackbyModal","trackByObj","trackby_name","trackby_value","trackby_category","createTrackBy","updateTrackBy","deleteTrackBy","stateListSrv","countryListSrv","updateUserSrv","postUserInfoSrv","deleteAllUsersSrv","userCreateTest","stateListSrvTest","serviceTest","postUserInfoSrvTest","userServiceTest","deleteAllUsersServiceTest","countryListServiceTest","modalShownUser","showUserModal","hideUserModal","states","getStatesList","stateName","country","getcountryList","countryName","userInfo","renter_rating","deactivateUserChecked","inactive","userStatus","submit","sName","stateObj","email","firstName","state_id","submitUserInfo","deleteUsers","deleteAllUsers","getUserColumnsSrv","userManageControllerTest","getUserColumnsSrvServiceTest","updateUserServiceTest","StateServiceTest","grid1Api","updatedUser","uId","expectedObj","last_name","phone","address1","address2","city","zip","auth_id","getId","country_id","updateUser","directive","restrict","scope","storeBarcode","Quagga","resultsArr","counter","App","_lastResult","init","attachListeners","activateScanner","scanner","configureScanner","onDetected","result","codeResult","code","mc","mostCommon","$apply","stoppy","showBarcodeWindow","snd","play","bind","stop","removeEventListener","hideOverlay","showOverlay","addEventListener","start","cancelCb","querySelector","classList","add","button","self","clickListener","e","preventDefault","remove","selector","decoder","readers","locator","patchSize","fromSource","target","constraints","height","facingMode","sort","a","b","v","pop","Audio","template","ratingValue","max","onRatingSelected","link","elem","attrs","updateStars","stars","filled","toggle","index","$watch","oldVal","newVal","attr","service","$http","authServiceTest","logMeIn","get","res","send","bc","getUser","method","httpResponse","JSON","stringify","getColumnList","deleteItem","getItemList","locationDeleteServiceTest","locationUpdateServiceTest"],"mappings":"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","file":"bundle.js","sourcesContent":["angular.module('app', ['ui.router', 'ui.grid', 'ui.grid.selection', 'ui.grid.edit', 'ui.grid.resizeColumns', 'ui.grid.moveColumns', 'ui.grid.pinning', 'ui.grid.infiniteScroll'])\r\n    .config(function ($stateProvider, $urlRouterProvider) {\r\n        $urlRouterProvider.otherwise('/', \"\")\r\n        // .......................  authorization\r\n        // var authentication = {\r\n        //     authenticate: ($state, checkUserSrv) => {\r\n        //         checkUserSrv.getUser().then((response) => {\r\n        //             if (!response.data.isFirstTime) {\r\n        //                 event.preventDefault()\r\n        //                 $state.go('dashboard')\r\n        //             }\r\n        //         }).catch(error => {\r\n        //             event.preventDefault()\r\n        //             $state.go('home')\r\n        //         })\r\n        //     }\r\n        // }\r\n        $stateProvider\r\n            .state('home', {\r\n                templateUrl: '../views/home.html',\r\n                url: '/'\r\n            })\r\n            .state('dashboard', {\r\n                templateUrl: '../views/dashboard.html',\r\n                url: '/dashboard',\r\n                // resolve: authentication\r\n            })\r\n            .state('user_create_new', {\r\n                templateUrl: '../views/user_create.html',\r\n                url: '/user_create_new',\r\n                controller: 'userCreate',\r\n                // resolve: authentication\r\n            })\r\n            .state('user_create', {\r\n                templateUrl: '../views/user_create.html',\r\n                url: '/user_create',\r\n                controller: 'userCreate',\r\n                // resolve: authentication\r\n            })\r\n            .state('user_manage', {\r\n                templateUrl: '../views/user_manage.html',\r\n                url: '/user_manage',\r\n                controller: 'userManage',\r\n                // resolve: authentication\r\n            })\r\n            .state('location_create', {\r\n                templateUrl: '../views/location_create.html',\r\n                url: '/location_create',\r\n                controller: 'locCreate',\r\n                // resolve: authentication\r\n            })\r\n            .state('loc_container', { // MOVE INTO MODAL\r\n                templateUrl: '../views/loc_container.html',\r\n                url: '/loc_container',\r\n                controller: 'locContainer',\r\n                // resolve: authentication\r\n            })\r\n            .state('loc_class', { // MOVE INTO MODAL\r\n                templateUrl: '../views/loc_class.html',\r\n                url: '/loc_class',\r\n                controller: 'locClass',\r\n                // resolve: authentication\r\n            })\r\n            .state('location_manage', {\r\n                templateUrl: '../views/location_manage.html',\r\n                url: '/location_manage',\r\n                controller: 'locManage',\r\n                // resolve: authentication\r\n            })\r\n            .state('trackbys', { // MOVE INTO MODAL\r\n                templateUrl: '../views/trackbys.html',\r\n                url: '/trackbys',\r\n                controller: 'trackBy',\r\n                // resolve: authentication\r\n            })\r\n            .state('settings', { // MOVE INTO MODAL\r\n                templateUrl: '../views/settings.html',\r\n                url: '/settings',\r\n                controller: 'settings',\r\n                // resolve: authentication\r\n            })\r\n            // .state('item_create', { // MOVE INTO MODAL\r\n            //     templateUrl: '../views/item_create.html',\r\n            //     url: '/item_create',\r\n            //     controller: 'itemCreate',\r\n            //     // resolve: authentication\r\n            // })\r\n            .state('item_manage', { // MOVE INTO MODAL\r\n                templateUrl: '../views/item_manage.html',\r\n                url: '/item_manage',\r\n                controller: 'itemManage',\r\n                // resolve: authentication\r\n            })\r\n    })","angular.module('app').controller('itemCreate', function ($scope, $interval, bcService, itemMainSrv, itemGetSrv, itemPostSrv, itemPutSrv, itemDeleteSrv, locationsListSrv, trackByGetSrv, userListSrv, settingsSrv) {\r\n    // // »»»»»»»»»»»»»»»»»»»║  TESTS \r\n    $scope.itemCreateTest = 'itemCreate controller is connected and operational'\r\n    $scope.itemGetSrvTest = itemGetSrv.itemGetSrvTest\r\n    $scope.itemPostSrvTest = itemPostSrv.itemPostSrvTest\r\n    $scope.itemPutSrvTest = itemPutSrv.itemPutSrvTest\r\n    $scope.itemDeleteSrvTest = itemDeleteSrv.itemDeleteSrvTest\r\n    $scope.itemMainSrvTest = itemMainSrv.itemMainSrvTest\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  MODAL CONTROLS\r\n    $scope.modalShownItems = false\r\n    $scope.showItemsModal = () => {\r\n        $interval(function () {\r\n            var fireRefreshEventOnWindow = function () {\r\n                var evt = document.createEvent(\"HTMLEvents\");\r\n                evt.initEvent('resize', true, false);\r\n                window.dispatchEvent(evt);\r\n            };\r\n            fireRefreshEventOnWindow();\r\n        }, 200, 1);\r\n        $scope.modalShownItems = true\r\n    }\r\n    $scope.hideItemsModal = () => {\r\n        $scope.clearForm()\r\n        $scope.modalShownItems = false\r\n    }\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ CLEAR FORM\r\n    $scope.clearForm = () => document.getElementById(\"itemCreateForm\").reset()\r\n\r\n    // test barcode from service\r\n    $scope.getBC = () => {\r\n        $scope.barcode = bcService.upc\r\n        console.log($scope.barcode)\r\n    }\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  VARIABLES\r\n    $scope.itemCreateObj = {\r\n        has_package: false\r\n        , has_multiPiece: false\r\n        , is_consumable: false\r\n        , repOther: null\r\n        , replink: null\r\n        , af_period: \"Day\"\r\n    }\r\n\r\n\r\n    $scope.trackbyValues = {}\r\n    const itemsObj = $scope.itemCreateObj\r\n    $scope.replink = 'replink'\r\n    $scope.repItem = $scope.replink\r\n    $scope.userId = {}\r\n    const commonLocObj = { loc_id: [] }\r\n\r\n    // .................... get current user\r\n    $scope.currentUser = () => itemMainSrv.getCurrentUser().then(response => {\r\n        // console.log(response.data)\r\n        $scope.thisUser = response.data.first_name\r\n        $scope.itemCreateObj.owner_id = response.data.id\r\n        $scope.userId.id = response.data.id\r\n    })\r\n    $scope.currentUser()\r\n    // .................... original package checkbox\r\n    $scope.originalPackaging = () => $scope.itemCreateObj.has_package = $scope.packageStatus\r\n\r\n    // .................... multiple piece checkbox\r\n    $scope.multiplePieces = () => $scope.itemCreateObj.has_multiPiece = $scope.multiPiece\r\n\r\n    // .................... consumable checkbox\r\n    $scope.isConsumable = () => $scope.itemCreateObj.is_consumable = $scope.consumable\r\n\r\n    // .................... sets sentimental value\r\n    $scope.rating = 1;\r\n    $scope.rateFunction = (rating) => $scope.itemCreateObj.sentimental_rating = rating\r\n\r\n    // .................... sets max date allowed\r\n    // <input id=\"datefield\" type='date' max='2000-13-13'></input>\r\n    var today = new Date();\r\n    var dd = today.getDate();\r\n    var mm = today.getMonth() + 1; //January is 0!\r\n    var yyyy = today.getFullYear();\r\n    if (dd < 10) {\r\n        dd = '0' + dd\r\n    }\r\n    if (mm < 10) {\r\n        mm = '0' + mm\r\n    }\r\n    today = yyyy + '-' + mm + '-' + dd;\r\n    document.getElementById(\"datefield\").setAttribute(\"max\", today);\r\n\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  GET LOCATION LIST\r\n    $scope.getLocations = () => locationsListSrv.getLocationsList().then(response => $scope.locations = response.data)\r\n    $scope.getLocations()\r\n\r\n    // .................... get custom list of locations \r\n    $scope.getLocations = () => locationsListSrv.getLocationsCustomList().then(response => {\r\n        var locGrid = response.data\r\n        $scope.gridOptions.data = locGrid\r\n    })\r\n    $scope.getLocations()\r\n\r\n    // .................... get default location\r\n    $scope.getDefaultLoc = () => settingsSrv.getDefaultLocation().then(response => {\r\n        $scope.loc = response.data[0].description;\r\n        $scope.locid = response.data[0].location_id;\r\n        $scope.defaultLocation = $scope.loc\r\n        $scope.itemCreateObj.location_id = $scope.locid\r\n    })\r\n    $scope.getDefaultLoc()\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ GET A LIST OF ALL TRACKBYS\r\n    $scope.gettrackbys = () => trackByGetSrv.getTrackByList().then(response => {\r\n        // console.log(response.data)\r\n        $scope.trackbys = response.data\r\n    })\r\n    $scope.gettrackbys()\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ GET USERS LIST\r\n    $scope.getUsers = () => userListSrv.getCustomUserList().then(response => $scope.users = response.data)\r\n    $scope.getUsers()\r\n\r\n    // .................... columns and data\r\n    $scope.gridOptions = {\r\n        enableRowSelection: true\r\n        , enableRowHeaderSelection: true\r\n        , multiSelect: true\r\n        , enableSelectAll: false\r\n        , enableFiltering: true\r\n        , columnDefs: [\r\n            // { name: 'id', enableCellEdit: false, width: 50 }, \r\n            { name: 'loc_desc', displayName: 'Description' }, { name: 'loc_class_name', displayName: 'Storage Type' }, { name: 'loc_container', displayName: 'Container' }\r\n        ]\r\n        , onRegisterApi: (gridApi) => {\r\n            gridApi.selection.on.rowSelectionChanged($scope, function (row) {\r\n                $scope.selected = row.isSelected\r\n                $scope.rowId = row.uid\r\n                $scope.rowObj = row.entity\r\n                $scope.selected === true ? commonLocObj.loc_id.push($scope.rowObj.id) : commonLocObj.loc_id.splice(commonLocObj.loc_id.indexOf($scope.rowObj.id), 1)\r\n                $scope.itemCreateObj.common = commonLocObj\r\n            })\r\n        }\r\n    }\r\n\r\n    $scope.locationId = () => $scope.itemCreateObj.location_id = $scope.locationOption.id\r\n\r\n    // .................... radio control\r\n    $scope.swapper = () => $scope.linked = !$scope.linked\r\n\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  CREATE ITEMS\r\n    $scope.createItem = () => {\r\n\r\n        $scope.itemCreateObj.repItem = $scope.repItem\r\n        let loggedInUser = $scope.itemCreateObj.owner_id\r\n        if (loggedInUser !== $scope.userId.id) { $scope.itemCreateObj.owner_id = $scope.userId.id }\r\n        $scope.itemCreateObj.trackbys = $scope.trackbyValues\r\n        $scope.itemCreateObj.upc = $scope.barcode\r\n        $scope.clearForm()\r\n        // console.log(itemsObj)//this is the object that will be sent to the server\r\n        itemPostSrv.createItem(itemsObj)\r\n    }\r\n})","angular.module('app').controller('itemManage', function ($scope, $interval, itemGetSrv, itemPostSrv, itemPutSrv, itemDeleteSrv, userListSrv, locationsListSrv) {\r\n    // »»»»»»»»»»»»»»»»»»»║  TESTS \r\n    $scope.itemManageTest = 'itemManage controller is connected and operational'\r\n    $scope.itemGetSrvTest = itemGetSrv.itemGetSrvTest\r\n    $scope.itemPostSrvTest = itemPostSrv.itemPostSrvTest\r\n    $scope.itemPutSrvTest = itemPutSrv.itemPutSrvTest\r\n    $scope.itemDeleteSrvTest = itemDeleteSrv.itemDeleteSrvTest\r\n    // VARIABLES\r\n    var ddList = []\r\n    var ddLocList = []\r\n    var rtnUsers = []\r\n    var rtnLocs = []\r\n    var nuid = 0\r\n    var nlid = 0\r\n    var useFrequency = [{ id: 'Day', value: 'Day' }, { id: 'Week', value: 'Week' }, { id: 'Month', value: 'Month' }, { id: 'Year', value: 'Year' }]\r\n    var betterBool = [{ id: true, value: true }, { id: false, value: false }]\r\n\r\n    // .................... get item grid list\r\n    $scope.getGridData = () => itemGetSrv.getItemCustomList().then((response) => $scope.gridOptions.data = response.data)\r\n    $scope.getGridData()\r\n\r\n    // .................... get list of users\r\n\r\n    $scope.getUserList = () => userListSrv.getUserList().then((response) => {\r\n        rtnUsers = response.data\r\n        let droplist = rIndex => {\r\n            let tempArr = {}\r\n            tempArr.id = rIndex.first_name\r\n            tempArr.value = rIndex.first_name\r\n            ddList.push(tempArr)\r\n        }\r\n        rtnUsers.map(droplist)\r\n    })\r\n    $scope.getUserList()\r\n\r\n    // .................... get list of Locaitons\r\n\r\n    $scope.getLocaitonList = () => locationsListSrv.getLocationsList().then((response) => {\r\n        rtnLocs = response.data\r\n        let droplist = rIndex => {\r\n            let tempArr = {}\r\n            tempArr.id = rIndex.description\r\n            tempArr.value = rIndex.description\r\n            ddLocList.push(tempArr)\r\n        }\r\n        rtnLocs.map(droplist)\r\n    })\r\n    $scope.getLocaitonList()\r\n\r\n\r\n    // .................... columns and data\r\n    const minW = 75\r\n    const maxW = 500\r\n    const wid = 150\r\n\r\n    $scope.gridOptions = {\r\n        enableRowSelection: true\r\n        , enableRowHeaderSelection: false\r\n        , multiSelect: false\r\n        , enableSelectAll: false\r\n        , enableGridMenu: true\r\n        , enableFiltering: true\r\n        ,infiniteScrollRowsFromEnd: 25\r\n        ,infiniteScrollUp: true\r\n        ,infiniteScrollDown: true\r\n        , columnDefs: [\r\n            { name: 'id', displayName: 'Id', enableCellEdit: false, minWidth: minW, width: 75, maxWidth: maxW, pinnedLeft: true }\r\n            , { name: 'Owner', displayName: 'Owner', editableCellTemplate: 'ui-grid/dropdownEditor', minWidth: minW, width: 75, maxWidth: maxW, editDropdownValueLabel: 'value', editDropdownOptionsArray: ddList, pinnedLeft: true }\r\n            , { name: 'short_name', minWidth: minW, width: 200, maxWidth: maxW, pinnedLeft: true }\r\n            , { name: 'qty', type: 'number', minWidth: minW, width: 75, maxWidth: maxW, pinnedLeft: true }\r\n            , { name: 'description', minWidth: minW, width: wid, maxWidth: maxW }\r\n            , { name: 'date_added', type: 'date', cellFilter: 'date', minWidth: minW, width: 250, maxWidth: maxW }\r\n            , { name: 'upc', minWidth: minW, width: wid, maxWidth: maxW }\r\n            , { name: 'frequency_period', displayName: 'Frequency of Use Period', editableCellTemplate: 'ui-grid/dropdownEditor', minWidth: minW, width: wid, maxWidth: maxW, editDropdownOptionsArray: useFrequency }\r\n            , { name: 'frequency_qty', type: 'number', displayName: 'Times Per Period', minWidth: minW, width: wid, maxWidth: maxW }\r\n            , { name: 'img', displayName: 'Image', enableCellEdit: false, minWidth: minW, width: wid, maxWidth: maxW }\r\n            , { name: 'is_consumable', displayName: 'Consumable', editableCellTemplate: 'ui-grid/dropdownEditor', minWidth: minW, width: wid, maxWidth: maxW, editDropdownOptionsArray: betterBool }\r\n            , { name: 'is_part', displayName: 'Part', editableCellTemplate: 'ui-grid/dropdownEditor', minWidth: minW, width: wid, maxWidth: maxW, editDropdownOptionsArray: betterBool }\r\n            , { name: 'last_accessed', type: 'date', cellFilter: 'date', minWidth: minW, width: wid, maxWidth: maxW }\r\n            , { name: 'locationDescription', editableCellTemplate: 'ui-grid/dropdownEditor', minWidth: minW, width: 250, maxWidth: maxW, editDropdownValueLabel: 'value', editDropdownOptionsArray: ddLocList }\r\n            // , { name: 'locationID', minWidth: minW, width: wid, maxWidth: maxW }\r\n            , { name: 'original_package', displayName: 'Have Package', editableCellTemplate: 'ui-grid/dropdownEditor', minWidth: minW, width: wid, maxWidth: maxW, editDropdownOptionsArray: betterBool }\r\n            , { name: 'other_common_loc_json', minWidth: minW, width: '100%', maxWidth: maxW }\r\n            // , { name: 'parent_item_id', minWidth: minW, width: wid, maxWidth: maxW }\r\n            , { name: 'purchase_date', type: 'date', cellFilter: 'date', minWidth: minW, width: wid, maxWidth: maxW }\r\n            , { name: 'purchase_price', minWidth: minW, width: wid, maxWidth: maxW }\r\n            , { name: 'purchase_reason', minWidth: minW, width: wid, maxWidth: maxW }\r\n            , { name: 'purchase_retailer', minWidth: minW, width: wid, maxWidth: maxW }\r\n            // , { name: 'replace_radio_default', minWidth: minW, width: wid, maxWidth: maxW }\r\n            , { name: 'replacement_comment', minWidth: minW, width: 250, maxWidth: maxW }\r\n            , { name: 'replacement_link', cellTemplate: '<div class=\"ui-grid-cell-contents\"><a href=\"{{ COL_FIELD }}\" target=\"_blank\">View Item</a></div>', minWidth: minW, width: 250, maxWidth: maxW }\r\n            , { name: 'resale_value', minWidth: minW, width: wid, maxWidth: maxW }\r\n            , { name: 'sentimental_rating', type: 'number', minWidth: minW, width: 200, maxWidth: maxW }\r\n            , { name: 'trackby_json', displayName: 'Track-By', minWidth: minW, width: '100%', maxWidth: maxW }\r\n            // , { name: 'userID', minWidth: minW, width: wid, maxWidth: maxW }\r\n            , { name: 'warrenty_period_in_days', displayName: 'Warrenty (days)', type: 'number', minWidth: minW, width: wid, maxWidth: maxW }\r\n        ]\r\n\r\n        , onRegisterApi: (gridApi) => {\r\n            $scope.gridApi = gridApi;\r\n\r\n            // interval of zero just to allow the directive to have initialized\r\n            $interval(function () {\r\n                gridApi.core.addToGridMenu(gridApi.grid, []);\r\n            }, 0, 1);\r\n\r\n            gridApi.core.on.columnVisibilityChanged($scope, function (changedColumn) {\r\n                $scope.columnChanged = { name: changedColumn.colDef.name, visible: changedColumn.colDef.visible };\r\n            });\r\n\r\n            gridApi.selection.on.rowSelectionChanged($scope, function (row) {\r\n                $scope.selected = row.isSelected\r\n                $scope.rowId = row.uid\r\n                $scope.rowObj = row.entity\r\n                $scope.enableDelete = false\r\n                $scope.selected === true ? $scope.enableDelete = false : $scope.enableDelete = true\r\n            })\r\n\r\n            // ...........   update the location on lost focus, tab, or enter\r\n            gridApi.edit.on.afterCellEdit($scope, function (rowEntity) {\r\n                $scope.updateCont = rowEntity\r\n                let rei = rowEntity.id\r\n                // ............. validation for owner, location, qty\r\n                let reo = rowEntity.Owner\r\n                let rel = rowEntity.locationDescription\r\n                let newUsersId = rtnUsers.filter((el, ind, arr) => { if (el.first_name === reo) { nuid = el.id } })\r\n                let newLocationsId = rtnLocs.filter((el, ind, arr) => { if (el.description === rel) { nlid = el.id } })\r\n                let newQuantity = (qty) => {\r\n                    let nqty = 0\r\n                    qty < 0 ? nqty = qty / 0 : nqty = qty\r\n                    return nqty;\r\n                }\r\n                var nIQty = newQuantity(rowEntity.qty)\r\n                var nFQty = newQuantity(rowEntity.frequency_qty)\r\n                var nWQty = newQuantity(rowEntity.warrenty_period_in_days)\r\n                var nSRQty = newQuantity(rowEntity.sentimental_rating)\r\n                var gridObj = { Owner: rowEntity.Owner, date_added: rowEntity.date_added, description: rowEntity.description, frequency_period: rowEntity.frequency_period, frequency_qty: nFQty, id: rowEntity.id, img: rowEntity.img, is_consumable: rowEntity.is_consumable, is_part: rowEntity.is_part, last_accessed: rowEntity.last_accessed, locationDescription: rowEntity.locationDescription, locationID: nlid, original_package: rowEntity.original_package, other_common_loc_json: rowEntity.other_common_loc_json, parent_item_id: rowEntity.parent_item_id, purchase_date: rowEntity.purchase_date, purchase_price: rowEntity.purchase_price, purchase_reason: rowEntity.purchase_reason, purchase_retailer: rowEntity.purchase_retailer, qty: nIQty, replace_radio_default: rowEntity.replace_radio_default, replacement_comment: rowEntity.replacement_comment, replacement_link: rowEntity.replacement_link, resale_value: rowEntity.resale_value, sentimental_rating: nSRQty, short_name: rowEntity.short_name, trackby_json: rowEntity.trackby_json, upc: rowEntity.upc, userID: nuid, warrenty_period_in_days: nWQty }\r\n                // ............. call update\r\n                $scope.update(rei, gridObj)\r\n            })\r\n        }\r\n    }\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  UPDATE ITEMS\r\n    $scope.update = (id, updateObj) => itemPutSrv.updateItem(id, updateObj)\r\n})\r\n\r\n","angular.module('app').controller('locClass', function ($scope, $interval, locClassSrv, uiGridConstants, ) {\r\n    // »»»»»»»»»»»»»»»»»»»║  TESTS \r\n    $scope.locClassTest = 'locClass controller is connected and operational'\r\n    $scope.locClassServiceTest = locClassSrv.locClassServiceTest\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  MODAL CONTROLS\r\n    $scope.modalShownStorage = false\r\n    $scope.showStorageModal = () => {\r\n        $interval(function () {\r\n            var fireRefreshEventOnWindow = function () {\r\n                var evt = document.createEvent(\"HTMLEvents\");\r\n                evt.initEvent('resize', true, false);\r\n                window.dispatchEvent(evt);\r\n            };\r\n            fireRefreshEventOnWindow();\r\n        }, 100, 1);\r\n        $scope.modalShownStorage = true\r\n    }\r\n    $scope.hideStorageModal = () => {\r\n        $scope.clearForm()\r\n        $scope.locClassObj.name = \"\"\r\n        $scope.locClassObj.description = \"\"\r\n        $scope.modalShownStorage = false\r\n    }\r\n\r\n    // // »»»»»»»»»»»»»»»»»»»║ CLEAR FORM\r\n    $scope.clearForm = () => document.getElementById(\"classCreateForm\").reset()\r\n\r\n    // // »»»»»»»»»»»»»»»»»»»║ LOCATION CLASSIFICATION MANIPULATION\r\n    // .................... get list of location classes and grid information\r\n    $scope.getLocClasses = () => locClassSrv.getLocClassesList().then((response) => {\r\n        $scope.locClasses = response.data\r\n        $scope.gridOptions.data = response.data\r\n    })\r\n    $scope.getLocClasses()\r\n\r\n    // // .................... location classes types\r\n    $scope.locClassObj = {}\r\n    $scope.createLocClassObj = () => {\r\n        $scope.gridOptions.data.push({\r\n            \"name\": $scope.locClassObj.name\r\n            , \"description\": $scope.locClassObj.description\r\n        });\r\n        // console.log(`this will be created ... ${JSON.stringify($scope.locClassObj)}`)\r\n        locClassSrv.createLocClassObj($scope.locClassObj)\r\n        $scope.clearForm()\r\n    }\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  COLUMNS AND DATA\r\n    $scope.gridOptions = {\r\n        enableRowSelection: true\r\n        , enableRowHeaderSelection: true\r\n        , multiSelect: false\r\n        , enableSelectAll: false\r\n        , enableFiltering: true\r\n        , columnDefs: [\r\n            { name: 'name', displayName: 'Name' }\r\n            , { name: 'description', displayName: 'Description' }\r\n        ]\r\n        , onRegisterApi: (gridApi) => {\r\n\r\n            gridApi.selection.on.rowSelectionChanged($scope, function (row) {\r\n                $scope.selected = row.isSelected\r\n                $scope.rowId = row.uid\r\n                $scope.rowObj = row.entity\r\n                $scope.enableDelete = false\r\n                $scope.selected === true ? $scope.enableDelete = false : $scope.enableDelete = true\r\n            })\r\n\r\n            // ...........   update the loc class on lost focus, tab, or enter\r\n            gridApi.edit.on.afterCellEdit($scope, function (rowEntity) {\r\n                $scope.updateCont = rowEntity\r\n                $scope.update($scope.updateCont)\r\n            })\r\n        }\r\n    }\r\n\r\n    // .................... update a location class\r\n    $scope.update = (upObj) => {\r\n        let cId = upObj.id\r\n        locClassSrv.updateLocClass(cId, upObj)\r\n    }\r\n\r\n    // .................... delete a container\r\n    $scope.delete = () => {\r\n        let gridData = $scope.gridOptions.data\r\n        let cId = $scope.rowObj.id\r\n        if ($scope.selected === true) {\r\n            for (let i = 0; i < gridData.length; i++) {\r\n                if (gridData[i].id === cId) {\r\n                    gridData.splice(i, 1)\r\n                }\r\n            }\r\n            locClassSrv.deleteLocClass(cId)\r\n            $scope.enableDelete = true\r\n        }\r\n    }\r\n\r\n})","angular.module('app').controller('locContainer', function ($scope, $interval, containerSrv, uiGridConstants, ) {\r\n    // »»»»»»»»»»»»»»»»»»»║  TESTS \r\n    $scope.locContainerTest = 'locContainerTest controller is connected and operational'\r\n    $scope.containerServiceTest = containerSrv.containerServiceTest\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  MODAL CONTROLS\r\n    $scope.modalShownContainer = false\r\n    $scope.showContainerModal = () => {\r\n        $interval(function () {\r\n            var fireRefreshEventOnWindow = function () {\r\n                var evt = document.createEvent(\"HTMLEvents\");\r\n                evt.initEvent('resize', true, false);\r\n                window.dispatchEvent(evt);\r\n            };\r\n            fireRefreshEventOnWindow();\r\n        }, 100, 1);\r\n        $scope.modalShownContainer = true\r\n    }\r\n    $scope.hideContainerModal = () => {\r\n        $scope.modalShownContainer = false\r\n        $scope.clearForm()\r\n        $scope.container.name = \"\"\r\n    }\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ CLEAR FORM\r\n    $scope.clearForm = () => document.getElementById(\"containerCreateForm\").reset()\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ CONTAINER MANIPULATION\r\n    // .................... get list of container types and grid information\r\n    $scope.getContainers = () => containerSrv.getContainerList().then((response) => {\r\n        $scope.containers = response.data\r\n        $scope.gridOptions.data = response.data\r\n    })\r\n    $scope.getContainers()\r\n\r\n    // .................... create container types\r\n    $scope.container = {}\r\n    $scope.createContainer = () => {\r\n        $scope.gridOptions.data.push({\r\n            \"name\": $scope.container.name\r\n        });\r\n        // console.log(`this will be created ... ${JSON.stringify($scope.container)}`)\r\n        containerSrv.createContainer($scope.container)\r\n        $scope.clearForm()\r\n    }\r\n\r\n\r\n    // .................... update container types\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  COLUMNS AND DATA\r\n    $scope.gridOptions = {\r\n        enableRowSelection: true\r\n        , enableRowHeaderSelection: true\r\n        , multiSelect: false\r\n        , enableSelectAll: false\r\n        , enableFiltering: true\r\n        , columnDefs: [\r\n            { name: 'name', displayName: 'Description', width: 464 }\r\n        ]\r\n        , onRegisterApi: (gridApi) => {\r\n\r\n            gridApi.selection.on.rowSelectionChanged($scope, function (row) {\r\n                $scope.selected = row.isSelected\r\n                $scope.rowId = row.uid\r\n                $scope.rowObj = row.entity\r\n                $scope.enableDelete = false\r\n                $scope.selected === true ? $scope.enableDelete = false : $scope.enableDelete = true\r\n            })\r\n\r\n            // ...........   update the user on lost focus, tab, or enter\r\n            gridApi.edit.on.afterCellEdit($scope, function (rowEntity) {\r\n                $scope.updateCont = rowEntity\r\n                $scope.update($scope.updateCont)\r\n            })\r\n        }\r\n    }\r\n\r\n    // .................... update a container\r\n    $scope.update = (upObj) => {\r\n        let cId = upObj.id\r\n        containerSrv.updateContainer(cId, upObj)\r\n    }\r\n\r\n    // .................... delete a container\r\n    $scope.delete = () => {\r\n        let gridData = $scope.gridOptions.data\r\n        let cId = $scope.rowObj.id\r\n        if ($scope.selected === true) {\r\n            for (let i = 0; i < gridData.length; i++) {\r\n                if (gridData[i].id === cId) {\r\n                    gridData.splice(i, 1)\r\n                }\r\n            }\r\n            containerSrv.deleteContainer(cId)\r\n            $scope.enableDelete = true\r\n        }\r\n    }\r\n\r\n})","angular.module('app').controller('locCreate', function ($scope, locCreateSrv, containerSrv, locClassSrv, locationsListSrv) {\r\n    // »»»»»»»»»»»»»»»»»»»║  TESTS \r\n    $scope.locCtrlTest = 'locCreate controller is connected and operational'\r\n    $scope.locCreateServiceTest = locCreateSrv.locCreateServiceTest\r\n    $scope.containerServiceTest = containerSrv.containerServiceTest\r\n    $scope.locClassServiceTest = locClassSrv.locClassServiceTest\r\n    $scope.locListServiceTest = locationsListSrv.locListServiceTest\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  MODAL CONTROLS\r\n    $scope.modalShownLocation = false\r\n    $scope.showLocationModal = () => $scope.modalShownLocation = true\r\n    $scope.hideLocationModal = () => $scope.modalShownLocation = false\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ CLEAR FORM\r\n    $scope.clearForm = () => document.getElementById(\"createLocationForm\").reset()\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  GET CONTAINER LIST \r\n    $scope.getContainers = () => containerSrv.getContainerList().then((response) => $scope.containers = response.data)\r\n    $scope.getContainers()\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  GET LOCATION CLASSIFICATION LIST\r\n    $scope.getLocClasses = () => locClassSrv.getLocClassesList().then((response) => $scope.locClasses = response.data)\r\n    $scope.getLocClasses()\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  GET LOCATION LIST\r\n    $scope.getLocations = () => locationsListSrv.getLocationsList().then((response) => $scope.locations = response.data)\r\n    $scope.getLocations()\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  CREATE A NEW LOCATION\r\n    //  .................... objects used to post\r\n    $scope.locClassObj = []\r\n    $scope.containerObj = []\r\n    $scope.locationParentObj = []\r\n    $scope.locObj = {}\r\n    //  .................... function to cover defaults are sent if not user didn't make selection\r\n    $scope.setDefaults = () => {\r\n        let cl = $scope.locClassObj.length\r\n        let c = $scope.containerObj.length\r\n        let p = $scope.locationParentObj.length\r\n        cl === 0 ? $scope.locObj.loc_class_id = 1 : undefined\r\n        c === 0 ? $scope.locObj.container_id = 1 : undefined\r\n        p === 0 ? $scope.locObj.parent_location_id = 1 : undefined\r\n    }\r\n    // ....................  create location\r\n    $scope.createLocation = () => {\r\n        $scope.getLocations()\r\n        $scope.locObj.loc_class_id = $scope.locClassObj.id\r\n        $scope.locObj.container_id = $scope.containerObj.id\r\n        $scope.locObj.parent_location_id = $scope.locationParentObj.id\r\n        $scope.setDefaults()\r\n        var exists = 0\r\n        for (let i = 0; i < $scope.locations.length; i++) {\r\n            if ($scope.locations[i].description === $scope.locObj.description && $scope.locations[i].parent_location_id === $scope.locObj.parent_location_id) {\r\n                exists = 1\r\n                break;\r\n            }\r\n            else {\r\n                exists = 0\r\n            }\r\n        }\r\n        if(exists === 1) {\r\n            alert(`this is a duplicate`)\r\n        }\r\n        else {\r\n            locCreateSrv.submitLocationInfo($scope.locObj)\r\n            $scope.getLocations() \r\n            $scope.clearForm()\r\n        }\r\n    }\r\n\r\n})","angular.module('app').controller('locManage', function ($scope, locationsListSrv, locationUpdateSrv, locationDeleteSrv) {\r\n    // »»»»»»»»»»»»»»»»»»»║  TESTS \r\n    $scope.locManageTest = 'locManage controller is connected and operational'\r\n    $scope.locListServiceTest = locationsListSrv.locListServiceTest\r\n\r\n    // // »»»»»»»»»»»»»»»»»»»║ LOCATION CLASSIFICATION MANIPULATION\r\n    // .................... get list of location classes and grid information\r\n    $scope.getLocations = () => locationsListSrv.getLocationsCustomList().then((response) => {\r\n        $scope.gridOptions.data = response.data\r\n    })\r\n    $scope.getLocations()\r\n\r\n    // .................... columns and data\r\n    $scope.gridOptions = {\r\n        enableRowSelection: true\r\n        , enableRowHeaderSelection: true\r\n        , multiSelect: false\r\n        , enableSelectAll: false\r\n        , enableFiltering: true\r\n        , columnDefs: [\r\n            { name: 'id', enableCellEdit: false, width: 75 }\r\n            , { name: 'loc_desc', displayName: 'Description' }\r\n            , { name: 'loc_class_name', displayName: 'Classification', enableCellEdit: false }\r\n            , { name: 'loc_class_desc', displayName: 'Class Desc.', enableCellEdit: false }\r\n            , { name: 'loc_container', displayName: 'Container', enableCellEdit: false }\r\n            , { name: 'x_coordinate', displayName: 'X', width: 75 }\r\n            , { name: 'y_coordinate', displayName: 'Y', width: 75 }\r\n            , { name: 'z_coordinate', displayName: 'Z', width: 75 }\r\n            , { name: 'parent_location_id', displayName: 'Parent', width: 110 }\r\n        ]\r\n        , onRegisterApi: (gridApi) => {\r\n\r\n            gridApi.selection.on.rowSelectionChanged($scope, function (row) {\r\n                $scope.selected = row.isSelected\r\n                $scope.rowId = row.uid\r\n                $scope.rowObj = row.entity\r\n                $scope.enableDelete = false\r\n                $scope.selected === true ? $scope.enableDelete = false : $scope.enableDelete = true\r\n            })\r\n\r\n            // ...........   update the location on lost focus, tab, or enter\r\n            gridApi.edit.on.afterCellEdit($scope, function (rowEntity) {\r\n                $scope.updateCont = rowEntity\r\n                // ............. drop containers and classes text from entity obj\r\n                var gridObj = {container_id: rowEntity.container_id, id: rowEntity.id, loc_class_id: rowEntity.loc_class_id, loc_desc: rowEntity.loc_desc, parent_location_id: rowEntity.parent_location_id, x_coordinate: rowEntity.x_coordinate, y_coordinate: rowEntity.y_coordinate, z_coordinate: rowEntity.z_coordinate}\r\n                // ............. call update\r\n                $scope.update(gridObj)\r\n            })\r\n        }\r\n    }\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  UPDATE LOCATIONS\r\n    $scope.update = (updateObj) => locationUpdateSrv.submitLocationInfo(updateObj)\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  DELETE LOCATIONS\r\n    $scope.delete = () => {\r\n        let gridData = $scope.gridOptions.data\r\n        let cId = $scope.rowObj.id\r\n        if ($scope.selected === true) {\r\n            for (let i = 0; i < gridData.length; i++) {\r\n                if (gridData[i].id === cId) {\r\n                    gridData.splice(i, 1)\r\n                }\r\n            }\r\n            locationDeleteSrv.deleteLocation(cId)\r\n            $scope.enableDelete = true\r\n        }\r\n    }\r\n\r\n})","angular.module('app').controller('mainCtrl', function ($scope, authService, checkUserSrv) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    $scope.controllerTest = 'Controller Engaged!!!'\r\n\r\n    $scope.loggedIn = false;\r\n\r\n    $scope.login = () => {\r\n        $scope.loggedIn = true\r\n        // authService.logMeIn()\r\n    }\r\n    $scope.logout = () => {\r\n        $scope.loggedIn = false\r\n        authService.logout()\r\n    }\r\n    // .......................  checks to see if the user is logged in\r\n    // checkUserSrv.getUser().then((response) => $scope.loggedIn = true)\r\n\r\n    // .......................  modal controls\r\n    $scope.modalShown = false;\r\n    $scope.toggleModal = function () {\r\n        $scope.modalShown = !$scope.modalShown;\r\n    };\r\n\r\n    //vars\r\n    // $scope.createUserModalContent = false\r\n    // $scope.createLocModalContent = false\r\n    // $scope.setModalContent = (contentId) => {\r\n    //     switch (contentId) {\r\n    //         case 0:\r\n    //             $scope.setAllModalFalse()\r\n    //             $scope.createUserModalContent = true\r\n    //             $scope.toggleModal()\r\n    //             break;\r\n    //         case 1:\r\n    //             $scope.setAllModalFalse()\r\n    //             $scope.createLocModalContent = true\r\n    //             $scope.toggleModal()\r\n    //             break;\r\n    //     }\r\n    // }\r\n    // $scope.setAllModalFalse = () => {\r\n    //     $scope.createUserModalContent = false\r\n    //     $scope.createLocModalContent = false\r\n    //     // console.log(\"create user =\", $scope.createUserModalContent)\r\n    // }\r\n\r\n    $scope.pageTitle = \"Dashboard\"\r\n    $scope.watchLocation = (area) => {\r\n        var url = area\r\n        // var url = window.location.hash\r\n        // console.log(url)\r\n        switch (url) {\r\n            case '#!/user_manage':\r\n            $scope.pageTitle = 'Users'\r\n            break;\r\n            case '#!/location_manage':\r\n            $scope.pageTitle = 'Locations'\r\n            break;\r\n            case '#!/item_manage':\r\n            $scope.pageTitle = 'Items'\r\n            break;\r\n            case '#!/dashboard':\r\n            $scope.pageTitle = 'Dashboard'\r\n            break;\r\n        }\r\n    }\r\n    $scope.watchLocation(window.location.hash)\r\n})","","","angular.module('app').controller('settings', function ($scope, uiGridConstants, locationsListSrv, settingsSrv) {\r\n    // »»»»»»»»»»»»»»»»»»»║  TESTS \r\n    $scope.settingsTest = 'settings controller is connected and operational'\r\n    $scope.locListServiceTest = locationsListSrv.locListServiceTest\r\n    // »»»»»»»»»»»»»»»»»»»║  VARIABLES \r\n    $scope.defaultLocation\r\n    $scope.loc\r\n    var sendArr = {}\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  DATABASE CALLS\r\n    // .................... get list of locations\r\n    $scope.getLocations = () => locationsListSrv.getLocationsList().then(response => $scope.locations = response.data)\r\n    $scope.getLocations()\r\n\r\n    // .................... get default location\r\n    $scope.getDefaultLoc = () => settingsSrv.getDefaultLocation().then(response => { \r\n        $scope.loc = response.data[0].description;\r\n        $scope.locid = response.data[0].id\r\n         $scope.defaultLocation = $scope.loc })\r\n    $scope.getDefaultLoc()\r\n\r\n    // .................... will convert to update default location\r\n    $scope.updateDefault = () => {\r\n        var dl = $scope.defaultLocation\r\n        if (typeof dl === 'string') {\r\n            // console.log(dl)\r\n            sendArr.d_location_id = $scope.locid\r\n        }\r\n        else {\r\n            // console.log(dl.description)\r\n            sendArr.d_location_id = dl.id\r\n        }        \r\n        console.log(sendArr) //this is what we will send to the db PUT\r\n        settingsSrv.updateDefaultLocation(sendArr)\r\n    }\r\n})","angular.module('app').controller('trackBy', function ($scope, $interval, uiGridConstants, trackByGetSrv, trackByPostSrv, trackByPutSrv, trackByDeleteSrv) {\r\n    // »»»»»»»»»»»»»»»»»»»║  TESTS \r\n    $scope.trackByTest = 'trackBy controller is connected and operational'\r\n    $scope.trackByGetSrvTest = trackByGetSrv.trackByGetSrvTest\r\n    $scope.trackByPostSrvTest = trackByPostSrv.trackByPostSrvTest\r\n    $scope.trackByPutSrvTest = trackByPutSrv.trackByPutSrvTest\r\n    $scope.trackByDeleteSrvTest = trackByDeleteSrv.trackByDeleteSrvTest\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  MODAL CONTROLS\r\n    $scope.modalShownTrackby = false\r\n    $scope.showTrackbyModal = () => {\r\n        $interval(function () {\r\n            var fireRefreshEventOnWindow = function () {\r\n                var evt = document.createEvent(\"HTMLEvents\");\r\n                evt.initEvent('resize', true, false);\r\n                window.dispatchEvent(evt);\r\n            };\r\n            fireRefreshEventOnWindow();\r\n        }, 100, 1);\r\n        $scope.modalShownTrackby = true\r\n    }\r\n    $scope.hideTrackbyModal = () => {\r\n        $scope.clearForm()\r\n        $scope.trackByObj.trackby_name = \"\"\r\n        $scope.trackByObj.trackby_value = \"\"\r\n        $scope.trackByObj.trackby_category = \"\"\r\n        $scope.modalShownTrackby = false\r\n    }\r\n\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ CLEAR FORM\r\n    $scope.clearForm = () => document.getElementById(\"trackbyForm\").reset()\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ TRACKBY MANIPULATION\r\n    // .................... get list of trackby types and grid information\r\n    $scope.gettrackbys = () => trackByGetSrv.getTrackByList().then((response) => {\r\n        $scope.trackbys = response.data\r\n        $scope.gridOptions.data = response.data\r\n        // console.log(`gridOptions.data = ${JSON.stringify(response.data)}`)\r\n    })\r\n    $scope.gettrackbys()\r\n\r\n    // .................... create trackby types\r\n    $scope.trackByObj = {}\r\n    $scope.createTrackBy = () => {\r\n        $scope.gridOptions.data.push({\r\n            \"trackby_name\": $scope.trackByObj.trackby_name\r\n            , \"trackby_value\": $scope.trackByObj.trackby_value\r\n            , \"trackby_category\": $scope.trackByObj.trackby_category\r\n        });\r\n        trackByPostSrv.createTrackBy($scope.trackByObj)\r\n\r\n        $scope.clearForm()\r\n    }\r\n\r\n\r\n    // .................... update trackby types\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  COLUMNS AND DATA\r\n    $scope.gridOptions = {\r\n        enableRowSelection: true\r\n        , enableRowHeaderSelection: true\r\n        , multiSelect: false\r\n        , enableSelectAll: false\r\n        , enableFiltering: true\r\n        , columnDefs: [\r\n            { name: 'id', enableCellEdit: false }\r\n            , { name: 'trackby_name', displayName: 'Name' }\r\n            , { name: 'trackby_value', displayName: 'Value' }\r\n            , { name: 'trackby_category', displayName: 'Category' }\r\n        ]\r\n\r\n        , onRegisterApi: (gridApi) => {\r\n\r\n            gridApi.selection.on.rowSelectionChanged($scope, function (row) {\r\n                $scope.selected = row.isSelected\r\n                $scope.rowId = row.uid\r\n                $scope.rowObj = row.entity\r\n                $scope.enableDelete = false\r\n                $scope.selected === true ? $scope.enableDelete = false : $scope.enableDelete = true\r\n            })\r\n\r\n            // ...........   update the user on lost focus, tab, or enter\r\n            gridApi.edit.on.afterCellEdit($scope, function (rowEntity) {\r\n                $scope.updateCont = rowEntity\r\n                $scope.update($scope.updateCont)\r\n            })\r\n        }\r\n    }\r\n\r\n    // .................... update a trackby\r\n    $scope.update = (upObj) => {\r\n        let cId = upObj.id\r\n        trackByPutSrv.updateTrackBy(cId, upObj)\r\n    }\r\n\r\n    // .................... delete a trackby\r\n    $scope.delete = () => {\r\n        let gridData = $scope.gridOptions.data\r\n        let cId = $scope.rowObj.id\r\n        if ($scope.selected === true) {\r\n            for (let i = 0; i < gridData.length; i++) {\r\n                if (gridData[i].id === cId) {\r\n                    gridData.splice(i, 1)\r\n                }\r\n            }\r\n            trackByDeleteSrv.deleteTrackBy(cId)\r\n            $scope.enableDelete = true\r\n        }\r\n    }\r\n\r\n})","angular.module('app').controller('userCreate', function ($scope, stateListSrv, countryListSrv, updateUserSrv, postUserInfoSrv, userListSrv, deleteAllUsersSrv) {\r\n    // »»»»»»»»»»»»»»»»»»»║  TESTS \r\n    $scope.userCreateTest = 'userCreate controller is working correctly'\r\n    $scope.stateListSrvTest = stateListSrv.serviceTest\r\n    $scope.postUserInfoSrvTest = postUserInfoSrv.serviceTest\r\n    $scope.userServiceTest = userListSrv.userServiceTest\r\n    $scope.deleteAllUsersServiceTest = deleteAllUsersSrv.deleteAllUsersServiceTest\r\n    $scope.countryListServiceTest = countryListSrv.countryListServiceTest\r\n\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  VARIABLES\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  MODAL CONTROLS\r\n    $scope.modalShownUser = false\r\n    $scope.showUserModal = () => $scope.modalShownUser = true\r\n    $scope.hideUserModal = () => $scope.modalShownUser = false\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  GET STATES LIST\r\n    $scope.states = () => stateListSrv.getStatesList().then((response) => $scope.stateName = response.data)\r\n    $scope.states()\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  GET COUNTRY LIST\r\n    $scope.country = () => countryListSrv.getcountryList().then((response) => $scope.countryName = response.data)\r\n    $scope.country()\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ CLEAR FORM\r\n    $scope.clearForm = () => document.getElementById(\"userCreateForm\").reset()\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ SUBMIT USER FORM DATA\r\n    // .................... user object to submit   \r\n    $scope.userInfo = { \"country_id\": 1, \"inactive\": false }\r\n\r\n    // .................... sets rent rating\r\n    $scope.rating = 5;\r\n    $scope.rateFunction = (rating) => $scope.userInfo.renter_rating = rating\r\n\r\n    // .................... sets checkbox\r\n    $scope.deactivateUserChecked = () => $scope.userInfo.inactive = $scope.userStatus\r\n\r\n\r\n    $scope.submit = () => {\r\n        var sName = $scope.stateObj.name\r\n        var exists = 0\r\n\r\n        // .................... checks to verify that the user doesn't already exist in the database.\r\n        var getUsers = () => {\r\n            userListSrv.getUserList().then((response) => {\r\n                $scope.users = response.data\r\n                // console.log(JSON.stringify($scope.users))\r\n                for (let i = 0; i < $scope.users.length; i++) {\r\n                    // console.log(`db email ${$scope.users[i].email}`)\r\n                    if ($scope.users[i].email === $scope.userInfo.email && $scope.users[i].first_name === $scope.userInfo.firstName) {\r\n                        exists = 1\r\n                        break;\r\n                    }\r\n                }\r\n                // console.log(`exists inside after function ${exists}`)\r\n                for (let i = 0; i < $scope.stateName.length; i++) {\r\n                    if ($scope.stateName[i].name === sName) {\r\n                        $scope.userInfo.state_id = $scope.stateName[i].id\r\n                    }\r\n                }\r\n                if (exists === 0) {\r\n                    // console.log(`userInfo object that will be sent is ${JSON.stringify($scope.userInfo)}`)\r\n                    postUserInfoSrv.submitUserInfo($scope.userInfo)\r\n                    alert(`User has been created.`)\r\n                    $scope.clearForm()\r\n                }\r\n                else {\r\n                    alert(`User already exists!`)\r\n                }\r\n            })\r\n        }\r\n        getUsers()\r\n    }\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ DELETE ALL USERS\r\n    $scope.deleteUsers = () => { return deleteAllUsersSrv.deleteAllUsers() }\r\n\r\n\r\n\r\n    // no code below this line\r\n})","angular.module('app').controller('userManage', function ($scope, uiGridConstants, userListSrv, stateListSrv, countryListSrv, updateUserSrv, getUserColumnsSrv) {\r\n    // »»»»»»»»»»»»»»»»»»»║  TESTS\r\n    $scope.userManageControllerTest = 'userManage Controller is ready to role!'\r\n    $scope.getUserColumnsSrvServiceTest = getUserColumnsSrv.getUserColumnsSrvServiceTest\r\n    $scope.updateUserServiceTest = updateUserSrv.updateUserServiceTest\r\n    $scope.StateServiceTest = stateListSrv.serviceTest\r\n    $scope.countryListServiceTest = countryListSrv.countryListServiceTest\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  GET STATES LIST\r\n    $scope.states = () => stateListSrv.getStatesList().then((response) => $scope.stateName = response.data)\r\n    $scope.states()\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  GET COUNTRY LIST\r\n    $scope.country = () => countryListSrv.getcountryList().then((response) => $scope.countryName = response.data)\r\n    $scope.country()\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  COLUMNS AND DATA\r\n    const minW = 75\r\n    const maxW = 500\r\n    const wid = 150\r\n\r\n    $scope.gridOptions = {\r\n       enableRowSelection: true\r\n        , enableRowHeaderSelection: false\r\n        , multiSelect: false\r\n        , enableSelectAll: false\r\n        , enableGridMenu: true\r\n        , enableFiltering: true\r\n        , columnDefs: [ //this shows which columns show in grid. the value needs to match the data key.\r\n            // { name: 'id' },\r\n            { name: 'first_name', minWidth: minW, width: 75, maxWidth: maxW, pinnedLeft: true }\r\n            , { name: 'last_name' }\r\n            , { name: 'phone' }\r\n            , { name: 'email' }\r\n            , { name: 'address1', displayName: 'Address' }\r\n            , { name: 'address2', displayName: 'Bldg/Apt #' }\r\n            , { name: 'city' }\r\n            , { name: 'state', displayName: 'State'}\r\n            , { name: 'zip', displayName: 'Zip Code'}\r\n            , { name: 'renter_rating'}\r\n            , { name: 'inactive', displayName: 'Status'}\r\n        ]\r\n        , onRegisterApi: (gridApi) => {\r\n            $scope.grid1Api = gridApi\r\n\r\n            // ...........   update the user on lost focus, tab, or enter\r\n            gridApi.edit.on.afterCellEdit($scope, function (rowEntity) {\r\n                $scope.updatedUser = rowEntity\r\n                $scope.update($scope.updatedUser)\r\n            })\r\n        }\r\n    };\r\n\r\n    // ....................  get column data\r\n    $scope.getUsers = () => userListSrv.getCustomUserList().then((response) => $scope.gridOptions.data = response.data)\r\n    $scope.getUsers()\r\n\r\n\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ UPDATE USER\r\n    $scope.update = (updateObj) => {\r\n        var uId = updateObj.id\r\n        var expectedObj = {\r\n            \"firstName\": updateObj.first_name\r\n            , \"lastName\": updateObj.last_name\r\n            , \"phone\": updateObj.phone\r\n            , \"email\": updateObj.email\r\n            , \"address1\": updateObj.address1\r\n            , \"address2\": updateObj.address2\r\n            , \"city\": updateObj.city\r\n            , \"state_id\": updateObj.state\r\n            , \"country_id\": updateObj.country\r\n            , \"zip\": updateObj.zip\r\n            , \"renter_rating\": updateObj.renter_rating\r\n            , \"inactive\": updateObj.inactive\r\n            , \"auth_id\": updateObj.auth_id\r\n        }\r\n        let getId = () => {\r\n            // ..... convert state name\r\n            for (let i = 0; i < $scope.stateName.length; i++) {\r\n                if ($scope.stateName[i].name === expectedObj.state_id) {\r\n                    expectedObj.state_id = $scope.stateName[i].id\r\n                }\r\n            }\r\n            // ..... convert country name\r\n            for (let i = 0; i < $scope.countryName.length; i++) {\r\n                if ($scope.countryName[i].name === expectedObj.country_id) {\r\n                    expectedObj.country_id = $scope.countryName[i].id\r\n                }\r\n            }\r\n            // console.log(`this is what will be sent! ${uId}`)\r\n            // console.log(`this is what will be sent! ${JSON.stringify(expectedObj)}`)\r\n            updateUserSrv.updateUser(uId, expectedObj)\r\n        }\r\n        getId()\r\n    }\r\n})","angular.module('app').directive('bcScanner',\r\n    function () {\r\n        return {\r\n            restrict: 'E',\r\n            templateUrl: '../views/barcodeScanner.html',\r\n            scope: '@',\r\n            controller: ($scope, bcService) => {\r\n                // .................... variables\r\n                $scope.barcode\r\n                $scope.storeBarcode = () => bcService.storeBarcode($scope.barcode)\r\n\r\n                // .................... quagga barcode scanner\r\n                var Quagga = window.Quagga;\r\n                var resultsArr = []\r\n                var counter = resultsArr.length\r\n                var App = {\r\n                    _lastResult: null,\r\n                    init: function () {\r\n                        this.attachListeners();\r\n                    },\r\n                    activateScanner: function () {\r\n                        var scanner = this.configureScanner('.overlay__content'),\r\n                            onDetected = function (result) {\r\n                                resultsArr.push(result.codeResult.code)\r\n                                counter = resultsArr.length\r\n                                // console.log(\"On Detected :\", resultsArr)\r\n                                // console.log(\"counter = \", counter)\r\n                                if (counter === 10) {\r\n                                    var mc = mostCommon(resultsArr)\r\n                                    console.log(\"most common\", mc)\r\n                                    $scope.barcode = mc\r\n                                    $scope.storeBarcode()\r\n                                    $scope.$apply()\r\n                                    $scope.stoppy()\r\n                                    $scope.showBarcodeWindow = false\r\n                                    $scope.$apply()\r\n                                    snd.play()\r\n                                }\r\n                            }.bind(this),\r\n                            stop = function () {\r\n                                scanner.stop();  // should also clear all event-listeners?\r\n                                scanner.removeEventListener('detected', onDetected);\r\n                                this.hideOverlay();\r\n                                this.attachListeners();\r\n                            }.bind(this);\r\n\r\n                        this.showOverlay(stop);\r\n                        console.log(\"activateScanner\");\r\n                        scanner.addEventListener('detected', onDetected).start();\r\n                    },\r\n                    showOverlay: function (cancelCb) {\r\n                        $scope.showBarcodeWindow = true\r\n                        $scope.$apply()\r\n                        document.querySelector('.container ')\r\n                            .classList.add('hide');\r\n                        document.querySelector('.overlay--inline')\r\n                            .classList.add('show');\r\n                        $scope.stoppy = () => {\r\n                            cancelCb();\r\n                        };\r\n                    },\r\n                    attachListeners: function () {\r\n                        var button = document.querySelector('button.scan'),\r\n                            self = this;\r\n\r\n                        button.addEventListener(\"click\", function clickListener(e) {\r\n                            e.preventDefault();\r\n                            button.removeEventListener(\"click\", clickListener);\r\n                            self.activateScanner();\r\n                        });\r\n                    },\r\n                    hideOverlay: function () {\r\n                        document.querySelector('.container ')\r\n                            .classList.remove('hide');\r\n                        document.querySelector('.overlay--inline')\r\n                            .classList.remove('show');\r\n                        $scope.showBarcodeWindow = false\r\n                    },\r\n                    configureScanner: function (selector) {\r\n                        var scanner = Quagga\r\n                            .decoder({ readers: ['ean_reader'] })\r\n                            .locator({ patchSize: 'medium' })\r\n                            .fromSource({\r\n                                target: selector,\r\n                                constraints: {\r\n                                    width: 600,\r\n                                    height: 600,\r\n                                    facingMode: \"environment\"\r\n                                }\r\n                            });\r\n                        return scanner;\r\n                    }\r\n                };\r\n                App.init();\r\n\r\n                // .................... take results array and get the average\r\n                const mostCommon = (arr) => {\r\n                    return arr.sort((a, b) =>\r\n                        arr.filter(v => v === a).length\r\n                        - arr.filter(v => v === b).length\r\n                    ).pop()\r\n                }\r\n                // .................... play a sound\r\n                var snd = new Audio(\"../audio/cameraOne.wav\")\r\n\r\n                // .................... hide / show playback window\r\n                $scope.showBarcodeWindow = false\r\n            }\r\n\r\n        };\r\n    }\r\n);","angular.module('app').directive('modalContainerDir', function(){\r\n    return {\r\n        templateUrl: '../views/loc_container.html'\r\n        , scope: '='\r\n        , controller: 'locContainer'\r\n    }\r\n})","angular.module('app').directive('modalItemsDir', function(){\r\n    return {\r\n        templateUrl: '../views/item_create.html'\r\n        , scope: '='\r\n        , controller: 'itemCreate'\r\n    }\r\n})\r\n\r\n","angular.module('app').directive('modalLocationCreateDir', function(){\r\n    return {\r\n        templateUrl: '../views/location_create.html'\r\n        , scope: '='\r\n        , controller: 'locCreate'\r\n    }\r\n})","angular.module('app').directive('modalStorageDir', function(){\r\n    return {\r\n        templateUrl: '../views/loc_class.html'\r\n        , scope: '='\r\n        , controller: 'locClass'\r\n    }\r\n})","angular.module('app').directive('modalTrackDir', function(){\r\n    return {\r\n        templateUrl: '../views/trackbys.html'\r\n        , scope: '='\r\n        , controller: 'trackBy'\r\n    }\r\n})\r\n\r\n","angular.module('app').directive('modalUserCreateDir', function(){\r\n    return {\r\n        templateUrl: '../views/user_create.html'\r\n        , scope: '='\r\n        , controller: 'userCreate'\r\n    }\r\n})","angular.module('app').directive('starRating', \r\n    function () {\r\n        return {\r\n            restrict: 'A',\r\n            template: '<ul class=\"rating\">'\r\n            + '\t<li ng-repeat=\"star in stars\" ng-class=\"star\" ng-click=\"toggle($index)\">'\r\n            + '\\u2605'\r\n            + '</li>'\r\n            + '</ul>',\r\n            scope: {\r\n                ratingValue: '=',\r\n                max: '=',\r\n                onRatingSelected: '&'\r\n            },\r\n            link: function (scope, elem, attrs) {\r\n                var updateStars = function () {\r\n                    scope.stars = [];\r\n                    for (var i = 0; i < scope.max; i++) {\r\n                        scope.stars.push({\r\n                            filled: i < scope.ratingValue\r\n                        });\r\n                    }\r\n                };\r\n\r\n                scope.toggle = function (index) {\r\n                    scope.ratingValue = index + 1;\r\n                    scope.onRatingSelected({\r\n                        rating: index + 1\r\n                    });\r\n                };\r\n\r\n                scope.$watch('ratingValue',\r\n                    function (oldVal, newVal) {\r\n                        if (newVal) {\r\n                            updateStars();\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        };\r\n    }\r\n);","angular.module('app').directive('trackByDir', function (trackByGetSrv) {\r\n  return {\r\n    restrict: 'E'\r\n    , link: (scope, elem, attr) => {\r\n      // // .................... get list of trackby types and grid information\r\n      // $scope.gettrackbys = () => trackByGetSrv.getTrackByList().then((response) => {\r\n      //   $scope.trackbys = response.data\r\n      // })\r\n      // $scope.gettrackbys()\r\n      // < div ng-repeat=\"trackby in trackbys\" >\r\n      //     <input type=\"text\" placeholder=\"trackby.[name]\" ng-model=\"trackby.value\">\r\n      // </div>\r\n    }\r\n  };\r\n});","angular.module('app').service('authService', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.authServiceTest = 'the authService is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    this.logMeIn = () => $http.get('/auth', 'Access-Control-Allow-Origin').then(response => res.send('ok'))\r\n    this.logout = () => $http.get('/auth/logout').then(response => window.location = response.data)\r\n})","angular.module('app').service('bcService', function($http){\r\n    // VARIABLES\r\n    this.upc\r\n\r\n    //FUNCTIONS\r\n    this.storeBarcode = (bc) => {\r\n        console.log(\"barcode was stored and is\", bc)\r\n        this.upc = bc}\r\n    \r\n})","angular.module('app').service('checkUserSrv', function($http){\r\n\r\nthis.getUser = () => $http.get('http://localhost:3000/auth/me')\r\n\r\n})","angular.module('app').service('containerSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.containerServiceTest = 'the containerSrv is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    this.name \r\n    // ...................  get containers\r\n    this.getContainerList = () => ($http.get('http://localhost:3000/api/containers'))\r\n    // ...................  create containers\r\n    this.createContainer = (data) => {\r\n        $http({\r\n            url: 'http://localhost:3000/api/containers',\r\n            method: 'POST',\r\n            data: data\r\n        })\r\n    }\r\n    // ...................  update containers\r\n    this.updateContainer = (id, data) => {\r\n        $http({\r\n            url: 'http://localhost:3000/api/containers/' + id,\r\n            method: 'PUT',\r\n            data: data\r\n        })\r\n    }\r\n    // ...................  delete containers\r\n    this.deleteContainer = (id) => {\r\n        $http({\r\n            url: 'http://localhost:3000/api/containers/' + id,\r\n            method: 'DELETE'\r\n        })\r\n    }\r\n})","angular.module('app').service('countryListSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.countryListServiceTest = 'the countryListSrv is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    this.getcountryList = () => ($http.get('http://localhost:3000/api/country'))\r\n})","angular.module('app').service('deleteAllUsersSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.deleteAllUsersServiceTest = 'the deleteAllUsersSrv is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    this.deleteAllUsers = function () {\r\n        $http({\r\n            url: 'http://localhost:3000/api/user',\r\n            method: 'DELETE'\r\n        }).then((httpResponse) => console.log('response:', JSON.stringify(httpResponse)))\r\n    }\r\n\r\n})","angular.module('app').service('getUserColumnsSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.getUserColumnsSrvServiceTest = 'the getUserColumnsSrv is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    this.getColumnList = () => ($http.get('http://localhost:3000/api/user/columns'))\r\n})\r\n","angular.module('app').service('itemDeleteSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.itemDeleteSrvTest = 'the itemDeleteSrv is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    // ...................  delete items\r\n    this.deleteItem = (id) => {\r\n        $http({\r\n            url: '/api/trackbys/' + id,\r\n            method: 'DELETE'\r\n        })\r\n    }\r\n})","angular.module('app').service('itemGetSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.itemGetSrvTest = 'the itemGetSrv is connected'\r\n\r\n    // // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    // ...................  get items\r\n    this.getItemList = () => $http.get('/api/items')\r\n    this.getItemCustomList = () => $http.get('/api/items/custom')\r\n})","angular.module('app').service('itemMainSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.itemMainSrvTest = 'the itemMainSrv is connected'\r\n\r\n    // // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    // ...................  get logged in user\r\n    this.getCurrentUser = () => $http.get('/auth/me/')\r\n})","angular.module('app').service('itemPostSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.itemPostSrvTest = 'the itemPostSrv is connected'\r\n\r\n    // // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    // ...................  create item\r\n    this.createItem = (data) => {\r\n        // console.log('the data in itemPostSrv is: ', data)\r\n        $http({\r\n            url: '/api/items',\r\n            method: 'POST',\r\n            data: data\r\n        })\r\n    }\r\n})","angular.module('app').service('itemPutSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.itemPutSrvTest = 'the itemPutSrv is connected'\r\n\r\n    // // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    // ...................  update items\r\n    this.updateItem = (id, data) => {\r\n        // console.log(\"the id in the srv is :\", data)\r\n        $http({\r\n            url: '/api/items/' + id,\r\n            method: 'PUT',\r\n            data: data\r\n        })\r\n    }\r\n})","angular.module('app').service('locationDeleteSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.locationDeleteServiceTest = 'the locationDeleteSrv is connected'\r\n\r\n    // // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    // ...................  delete loc_classes\r\n    this.deleteLocation = (id) => {\r\n        $http({\r\n            url: 'http://localhost:3000/api/locations/' + id,\r\n            method: 'DELETE'\r\n        })\r\n    }\r\n})","angular.module('app').service('locationsListSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.locListServiceTest = 'the locationsListSrv is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    this.getLocationsList = () => ($http.get('http://localhost:3000/api/locations')) \r\n    this.getLocationsCustomList = () => ($http.get('http://localhost:3000/api/locations/custom')) \r\n})","angular.module('app').service('locationUpdateSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.locationUpdateServiceTest = 'the locationUpdateSrv is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    this.submitLocationInfo = (data) => {\r\n        // console.log(`data to be sent ${JSON.stringify(data)}`)\r\n        $http({\r\n            url: 'http://localhost:3000/api/locations/' + data.id,\r\n            method: 'PUT',\r\n            data: data\r\n        })\r\n    }\r\n})","angular.module('app').service('locClassSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.locClassServiceTest = 'the locClassSrv is connected'\r\n\r\n    // // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    // ...................  get loc_classes\r\n    this.getLocClassesList = () => ($http.get('http://localhost:3000/api/loc_classes'))\r\n    // ...................  create loc_classes\r\n    this.createLocClassObj = (data) => {\r\n        $http({\r\n            url: 'http://localhost:3000/api/loc_classes',\r\n            method: 'POST',\r\n            data: data\r\n        })\r\n    }\r\n    // ...................  update loc_classes\r\n    this.updateLocClass = (id, data) => {\r\n        $http({\r\n            url: 'http://localhost:3000/api/loc_classes/' + id,\r\n            method: 'PUT',\r\n            data: data\r\n        })\r\n    }\r\n    // ...................  delete loc_classes\r\n    this.deleteLocClass = (id) => {\r\n        $http({\r\n            url: 'http://localhost:3000/api/loc_classes/' + id,\r\n            method: 'DELETE'\r\n        })\r\n    }\r\n})","angular.module('app').service('locCreateSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.locCreateServiceTest = 'the locCreateSrv is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    this.submitLocationInfo = (data) => {\r\n        $http({\r\n            url: 'http://localhost:3000/api/locations',\r\n            method: 'POST',\r\n            data: data\r\n        })\r\n    }\r\n})","angular.module('app').service('postUserInfoSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.serviceTest = 'the postUserInfoSrv is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    this.submitUserInfo = (data) => {\r\n        // console.log(`clicked submit and got ${JSON.stringify(data)}`)\r\n        $http({\r\n            url: 'http://localhost:3000/api/users',\r\n            method: 'POST',\r\n            data: data\r\n        })\r\n    }\r\n})","angular.module('app').service('settingsSrv', function ($http) {\r\n    // ...................  get default location\r\n    this.getDefaultLocation = () => $http.get('http://localhost:3000/api/settings/default_location')\r\n\r\n    // ...................  update default location\r\n    this.updateDefaultLocation = (data) => {\r\n        console.log('sending data')\r\n        console.log(data)\r\n        $http({\r\n            url: '/api/settings/default_location',\r\n            method: 'PUT',\r\n            data: data\r\n        })\r\n    }\r\n\r\n})","angular.module('app').service('stateListSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.serviceTest = 'the stateListSrv is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    this.getStatesList = () => ($http.get('http://localhost:3000/api/states'))\r\n})","angular.module('app').service('trackByDeleteSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.trackByDeleteSrvTest = 'the trackByDeleteSrv is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    // ...................  delete trackbys\r\n    this.deleteTrackBy = (id) => {\r\n        $http({\r\n            url: 'http://localhost:3000/api/trackbys/' + id,\r\n            method: 'DELETE'\r\n        })\r\n    }\r\n})","angular.module('app').service('trackByGetSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.trackByGetSrvTest = 'the trackByGetSrv is connected'\r\n\r\n    // // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    // ...................  get trackbys\r\n    this.getTrackByList = () => ($http.get('http://localhost:3000/api/trackbys/'))\r\n})","angular.module('app').service('trackByPostSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.trackByPostSrvTest = 'the trackByPostSrv is connected'\r\n\r\n    // // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    // ...................  create trackbys\r\n    this.createTrackBy = (data) => {\r\n        $http({\r\n            url: 'http://localhost:3000/api/trackbys/',\r\n            method: 'POST',\r\n            data: data\r\n        })\r\n    }\r\n})","angular.module('app').service('trackByPutSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.trackByPutSrvTest = 'the trackByPutSrv is connected'\r\n\r\n    // // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    // ...................  update trackbys\r\n    this.updateTrackBy = (id, data) => {\r\n        $http({\r\n            url: 'http://localhost:3000/api/trackbys/' + id,\r\n            method: 'PUT',\r\n            data: data\r\n        })\r\n    }\r\n})","angular.module('app').service('updateUserSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.updateUserServiceTest = 'the updateUserSrv is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    this.updateUser = (id, data) => {\r\n        $http({\r\n            url: 'http://localhost:3000/api/users/' + id,\r\n            method: 'PUT',\r\n            data: data\r\n        })\r\n    }\r\n})\r\n\r\n","angular.module('app').service('userListSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.userServiceTest = 'the userListSrv is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    this.getUserList = () => ($http.get('http://localhost:3000/api/users'))\r\n    this.getCustomUserList = () => ($http.get('http://localhost:3000/api/users/custom'))\r\n})"]}