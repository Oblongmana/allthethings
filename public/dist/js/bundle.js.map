{"version":3,"sources":["app.js","controllers/mainCtrl.js","controllers/notificationPrimary.js","controllers/notificationSecondary.js","controllers/settings.js","controllers/userCreate.js","controllers/userManage.js","services/countryListSrv.js","services/deleteAllUsersSrv.js","services/getUserColumnsSrv.js","services/postUserInfoSrv.js","services/stateListSrv.js","services/userListSrv.js","directives/starRatingDir.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","otherwise","state","templateUrl","url","controller","$scope","controllerTest","stateListSrv","countryListSrv","postUserInfoSrv","userListSrv","deleteAllUsersSrv","userCreateTest","stateListSrvTest","serviceTest","postUserInfoSrvTest","userServiceTest","deleteAllUsersServiceTest","countryListServiceTest","states","getStatesList","then","response","stateName","data","country","getcountryList","countryName","clearForm","document","getElementById","reset","userInfo","rating","rateFunction","renter_rating","deactivateUserChecked","inactive","userStatus","submit","sName","stateObj","name","exists","getUsers","getUserList","users","i","length","email","first_name","firstName","state_id","id","submitUserInfo","alert","deleteUsers","deleteAllUsers","uiGridConstants","getUserColumnsSrv","userManageControllerTest","getUserColumnsSrvServiceTest","gridOptions","enableFiltering","columnDefs","onRegisterApi","gridApi","grid1Api","getCustomUserList","service","$http","get","method","httpResponse","console","log","JSON","stringify","getColumnList","directive","restrict","template","scope","ratingValue","max","onRatingSelected","link","elem","attrs","updateStars","stars","push","filled","toggle","index","$watch","oldVal","newVal"],"mappings":"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","file":"bundle.js","sourcesContent":["angular.module('app', ['ui.router', 'ui.grid'])\r\n    .config(function ($stateProvider, $urlRouterProvider) {\r\n        $urlRouterProvider.otherwise('/', \"\")\r\n        $stateProvider\r\n            .state('home', {\r\n                templateUrl: '../views/home.html',\r\n                url: '/'\r\n            })\r\n            .state('dashboard', {\r\n                templateUrl: '../views/dashboard.html',\r\n                url: '/dashboard',\r\n            })\r\n            .state('user_create', {\r\n                templateUrl: '../views/user_create.html',\r\n                url: '/user_create',\r\n                controller: 'userCreate'\r\n            })\r\n            .state('user_manage', {\r\n                templateUrl: '../views/user_manage.html',\r\n                url: '/user_manage',\r\n                controller: 'userManage'\r\n            })\r\n    })","angular.module('app').controller('mainCtrl', function ($scope) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    $scope.controllerTest = 'Controller Engaged!!!'\r\n\r\n})","","","","angular.module('app').controller('userCreate', function ($scope, stateListSrv, countryListSrv, postUserInfoSrv, userListSrv, deleteAllUsersSrv) {\r\n    // »»»»»»»»»»»»»»»»»»»║  TESTS \r\n    $scope.userCreateTest = 'userCreate controller is working correctly'\r\n    $scope.stateListSrvTest = stateListSrv.serviceTest\r\n    $scope.postUserInfoSrvTest = postUserInfoSrv.serviceTest\r\n    $scope.userServiceTest = userListSrv.userServiceTest\r\n    $scope.deleteAllUsersServiceTest = deleteAllUsersSrv.deleteAllUsersServiceTest\r\n    $scope.countryListServiceTest = countryListSrv.countryListServiceTest\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  VARIABLES\r\n\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  GET STATES LIST\r\n    $scope.states = () => stateListSrv.getStatesList().then((response) => $scope.stateName = response.data)\r\n    $scope.states()\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  GET COUNTRY LIST\r\n    $scope.country = () => countryListSrv.getcountryList().then((response) => $scope.countryName = response.data)\r\n    $scope.country()\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ CLEAR FORM\r\n    $scope.clearForm = () => document.getElementById(\"userCreateForm\").reset()\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ SUBMIT USER FORM DATA\r\n    // .................... user object to submit   \r\n    $scope.userInfo = {\"country_id\": 1, \"inactive\": false}\r\n\r\n    // .................... sets rent rating\r\n    $scope.rating = 5;\r\n    $scope.rateFunction = (rating) => $scope.userInfo.renter_rating = rating\r\n\r\n    // .................... sets checkbox\r\n    $scope.deactivateUserChecked = () => $scope.userInfo.inactive = $scope.userStatus\r\n\r\n\r\n    $scope.submit = () => {\r\n        var sName = $scope.stateObj.name\r\n        var exists = 0\r\n\r\n        // .................... checks to verify that the user doesn't already exist in the database.\r\n        var getUsers = () => {\r\n            userListSrv.getUserList().then((response) => {\r\n                $scope.users = response.data\r\n                // console.log(JSON.stringify($scope.users))\r\n                for (let i = 0; i < $scope.users.length; i++) {\r\n                    // console.log(\"what the fuck!\")\r\n                    // console.log(`db email ${$scope.users[i].email}`)\r\n                    if ($scope.users[i].email === $scope.userInfo.email && $scope.users[i].first_name === $scope.userInfo.firstName) {\r\n                        exists = 1\r\n                        break;\r\n                    }\r\n                }\r\n                // console.log(`exists inside after function ${exists}`)\r\n                for (let i = 0; i < $scope.stateName.length; i++) {\r\n                    if ($scope.stateName[i].name === sName) {\r\n                        $scope.userInfo.state_id = $scope.stateName[i].id\r\n                    }\r\n                }\r\n                if (exists === 0) {\r\n                    // console.log(`userInfo object that will be sent is ${JSON.stringify($scope.userInfo)}`)\r\n                    postUserInfoSrv.submitUserInfo($scope.userInfo)\r\n                    alert(`User has been created.`)\r\n                    $scope.clearForm()\r\n                }\r\n                else {\r\n                    alert(`User already exists!`)\r\n                }\r\n            })\r\n        }\r\n        getUsers()\r\n    }\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ DELETE ALL USERS\r\n    $scope.deleteUsers = () => { return deleteAllUsersSrv.deleteAllUsers() }\r\n\r\n\r\n\r\n    // no code below this line\r\n})","angular.module('app').controller('userManage', function ($scope, uiGridConstants, userListSrv, getUserColumnsSrv) {\r\n    // »»»»»»»»»»»»»»»»»»»║  TESTS\r\n    $scope.userManageControllerTest = 'userManage Controller is ready to role!'\r\n    $scope.getUserColumnsSrvServiceTest = getUserColumnsSrv.getUserColumnsSrvServiceTest\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  COLUMNS AND DATA\r\n    $scope.gridOptions = {\r\n        enableFiltering: true,\r\n        columnDefs: [],\r\n        onRegisterApi: function (gridApi) {\r\n            $scope.grid1Api = gridApi;\r\n        }\r\n    };\r\n    // ....................  get column data\r\n    $scope.getUsers = () => userListSrv.getCustomUserList().then((response) => $scope.gridOptions.data = response.data)\r\n    $scope.getUsers()\r\n\r\n})","angular.module('app').service('countryListSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.countryListServiceTest = 'the countryListSrv is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    this.getcountryList = () => ($http.get('http://localhost:3000/api/country'))\r\n})","angular.module('app').service('deleteAllUsersSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.deleteAllUsersServiceTest = 'the deleteAllUsersSrv is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    this.deleteAllUsers = function () {\r\n        $http({\r\n            url: 'http://localhost:3000/api/user',\r\n            method: 'DELETE'\r\n        }).then((httpResponse) => console.log('response:', JSON.stringify(httpResponse)))\r\n    }\r\n\r\n})","angular.module('app').service('getUserColumnsSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.getUserColumnsSrvServiceTest = 'the getUserColumnsSrv is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    this.getColumnList = () => ($http.get('http://localhost:3000/api/user/columns'))\r\n})\r\n","angular.module('app').service('postUserInfoSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.serviceTest = 'the postUserInfoSrv is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    this.submitUserInfo = (data) => {\r\n        // console.log(`clicked submit and got ${JSON.stringify(data)}`)\r\n        $http({\r\n            url: 'http://localhost:3000/api/users',\r\n            method: 'POST',\r\n            data: data\r\n        }).then((httpResponse) => console.log('response:', JSON.stringify(httpResponse)))\r\n    }\r\n})","angular.module('app').service('stateListSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.serviceTest = 'the stateListSrv is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    this.getStatesList = () => ($http.get('http://localhost:3000/api/states'))\r\n})","angular.module('app').service('userListSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.userServiceTest = 'the userListSrv is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    this.getUserList = () => ($http.get('http://localhost:3000/api/users'))\r\n    this.getCustomUserList = () => ($http.get('http://localhost:3000/api/users/custom'))\r\n})","angular.module('app').directive('starRating', \r\n    function () {\r\n        return {\r\n            restrict: 'A',\r\n            template: '<ul class=\"rating\">'\r\n            + '\t<li ng-repeat=\"star in stars\" ng-class=\"star\" ng-click=\"toggle($index)\">'\r\n            + '\\u2605'\r\n            + '</li>'\r\n            + '</ul>',\r\n            scope: {\r\n                ratingValue: '=',\r\n                max: '=',\r\n                onRatingSelected: '&'\r\n            },\r\n            link: function (scope, elem, attrs) {\r\n                var updateStars = function () {\r\n                    scope.stars = [];\r\n                    for (var i = 0; i < scope.max; i++) {\r\n                        scope.stars.push({\r\n                            filled: i < scope.ratingValue\r\n                        });\r\n                    }\r\n                };\r\n\r\n                scope.toggle = function (index) {\r\n                    scope.ratingValue = index + 1;\r\n                    scope.onRatingSelected({\r\n                        rating: index + 1\r\n                    });\r\n                };\r\n\r\n                scope.$watch('ratingValue',\r\n                    function (oldVal, newVal) {\r\n                        if (newVal) {\r\n                            updateStars();\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        };\r\n    }\r\n);"]}