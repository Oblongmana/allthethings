{"version":3,"sources":["app.js","controllers/itemCreate.js","controllers/itemManage.js","controllers/locClass.js","controllers/locContainer.js","controllers/locCreate.js","controllers/locManage.js","controllers/mainCtrl.js","controllers/notificationPrimary.js","controllers/notificationSecondary.js","controllers/settings.js","controllers/trackBy.js","controllers/userCreate.js","controllers/userManage.js","directives/bcScannerDir.js","directives/starRatingDir.js","directives/trackByDir.js","services/authService.js","services/bcService.js","services/checkUserSrv.js","services/containerSrv.js","services/countryListSrv.js","services/deleteAllUsersSrv.js","services/getUserColumnsSrv.js","services/itemDeleteSrv.js","services/itemGetSrv.js","services/itemMainSrv.js","services/itemPostSrv.js","services/itemPutSrv.js","services/locationDeleteSrv.js","services/locationsListSrv.js","services/locationUpdateSrv.js","services/locClassSrv.js","services/locCreateSrv.js","services/postUserInfoSrv.js","services/settingsSrv.js","services/stateListSrv.js","services/trackByDeleteSrv.js","services/trackByGetSrv.js","services/trackByPostSrv.js","services/trackByPutSrv.js","services/updateUserSrv.js","services/userListSrv.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","otherwise","state","templateUrl","url","controller","$scope","bcService","itemMainSrv","itemGetSrv","itemPostSrv","itemPutSrv","itemDeleteSrv","locationsListSrv","trackByGetSrv","userListSrv","settingsSrv","itemCreateTest","itemGetSrvTest","itemPostSrvTest","itemPutSrvTest","itemDeleteSrvTest","itemMainSrvTest","getBC","barcode","upc","console","log","itemCreateObj","has_package","has_multiPiece","is_consumable","repOther","replink","testObj","af_period","af_time","common","Object","description","location_id","owner_id","price","purchase_date","quantity","reason","repItem","retailer","sentimental_rating","short_name","warrenty","trackbyValues","itemsObj","userId","commonLocObj","loc_id","currentUser","getCurrentUser","then","thisUser","response","data","first_name","id","originalPackaging","packageStatus","multiplePieces","multiPiece","isConsumable","consumable","rating","rateFunction","today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","document","getElementById","setAttribute","getLocations","getLocationsList","locations","getLocationsCustomList","locGrid","gridOptions","getDefaultLoc","getDefaultLocation","loc","locid","defaultLocation","gettrackbys","getTrackByList","trackbys","getUsers","getCustomUserList","users","enableRowSelection","enableRowHeaderSelection","multiSelect","enableSelectAll","enableFiltering","columnDefs","name","enableCellEdit","width","displayName","onRegisterApi","gridApi","selection","on","rowSelectionChanged","row","selected","isSelected","rowId","uid","rowObj","entity","push","splice","indexOf","locationId","locationOption","swapper","linked","createItem","loggedInUser","itemManageTest","locClassSrv","uiGridConstants","locClassTest","locClassServiceTest","clearForm","reset","getLocClasses","getLocClassesList","locClasses","locClassObj","createLocClassObj","enableDelete","edit","afterCellEdit","rowEntity","updateCont","update","upObj","cId","updateLocClass","delete","gridData","i","length","deleteLocClass","containerSrv","locContainerTest","containerServiceTest","getContainers","getContainerList","containers","container","createContainer","updateContainer","deleteContainer","locCreateSrv","locCtrlTest","locCreateServiceTest","locListServiceTest","containerObj","locationParentObj","locObj","setDefaults","cl","c","p","loc_class_id","undefined","container_id","parent_location_id","createLocation","exists","alert","submitLocationInfo","locationUpdateSrv","locationDeleteSrv","locManageTest","gridObj","loc_desc","x_coordinate","y_coordinate","z_coordinate","updateObj","deleteLocation","authService","checkUserSrv","controllerTest","loggedIn","login","logout","settingsTest","sendArr","updateDefault","dl","d_location_id","updateDefaultLocation","trackByPostSrv","trackByPutSrv","trackByDeleteSrv","trackByTest","trackByGetSrvTest","trackByPostSrvTest","trackByPutSrvTest","trackByDeleteSrvTest","trackByObj","createTrackBy","trackby_name","trackby_value","trackby_category","updateTrackBy","deleteTrackBy","stateListSrv","countryListSrv","updateUserSrv","postUserInfoSrv","deleteAllUsersSrv","userCreateTest","stateListSrvTest","serviceTest","postUserInfoSrvTest","userServiceTest","deleteAllUsersServiceTest","countryListServiceTest","states","getStatesList","stateName","country","getcountryList","countryName","userInfo","renter_rating","deactivateUserChecked","inactive","userStatus","submit","sName","stateObj","getUserList","email","firstName","state_id","submitUserInfo","deleteUsers","deleteAllUsers","getUserColumnsSrv","userManageControllerTest","getUserColumnsSrvServiceTest","updateUserServiceTest","StateServiceTest","grid1Api","updatedUser","uId","expectedObj","last_name","phone","address1","address2","city","zip","auth_id","getId","country_id","updateUser","directive","restrict","scope","storeBarcode","Quagga","window","resultsArr","counter","App","_lastResult","init","attachListeners","activateScanner","scanner","configureScanner","onDetected","result","codeResult","code","mc","mostCommon","$apply","stoppy","showBarcodeWindow","snd","play","bind","stop","removeEventListener","hideOverlay","showOverlay","addEventListener","start","cancelCb","querySelector","classList","add","button","self","clickListener","e","preventDefault","remove","selector","decoder","readers","locator","patchSize","fromSource","target","constraints","height","facingMode","arr","sort","a","b","filter","v","pop","Audio","template","ratingValue","max","onRatingSelected","link","elem","attrs","updateStars","stars","filled","toggle","index","$watch","oldVal","newVal","attr","service","$http","authServiceTest","get","location","bc","getUser","method","httpResponse","JSON","stringify","getColumnList","deleteItem","getItemList","updateItem","locationDeleteServiceTest","locationUpdateServiceTest"],"mappings":"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","file":"bundle.js","sourcesContent":["angular.module('app', ['ui.router', 'ui.grid', 'ui.grid.selection', 'ui.grid.edit'])\r\n    .config(function ($stateProvider, $urlRouterProvider) {\r\n        $urlRouterProvider.otherwise('/', \"\")\r\n        // .......................  authorization\r\n        // var authentication = {\r\n        //     authenticate: ($state, checkUserSrv) => {\r\n        //         checkUserSrv.getUser().then((response) => {\r\n        //             if (!response.data.isFirstTime) {\r\n        //                 event.preventDefault()\r\n        //                 $state.go('dashboard')\r\n        //             }\r\n        //         }).catch(error => {\r\n        //             event.preventDefault()\r\n        //             $state.go('home')\r\n        //         })\r\n        //     }\r\n        // }\r\n        $stateProvider\r\n            .state('home', {\r\n                templateUrl: '../views/home.html',\r\n                url: '/'\r\n            })\r\n            .state('dashboard', {\r\n                templateUrl: '../views/dashboard.html',\r\n                url: '/dashboard',\r\n                // resolve: authentication\r\n            })\r\n            .state('user_create_new', {\r\n                templateUrl: '../views/user_create.html',\r\n                url: '/user_create_new',\r\n                controller: 'userCreate',\r\n                // resolve: authentication\r\n            })\r\n            .state('user_create', {\r\n                templateUrl: '../views/user_create.html',\r\n                url: '/user_create',\r\n                controller: 'userCreate',\r\n                // resolve: authentication\r\n            })\r\n            .state('user_manage', {\r\n                templateUrl: '../views/user_manage.html',\r\n                url: '/user_manage',\r\n                controller: 'userManage',\r\n                // resolve: authentication\r\n            })\r\n            .state('location_create', {\r\n                templateUrl: '../views/location_create.html',\r\n                url: '/location_create',\r\n                controller: 'locCreate',\r\n                // resolve: authentication\r\n            })\r\n            .state('loc_container', { // MOVE INTO MODAL\r\n                templateUrl: '../views/loc_container.html',\r\n                url: '/loc_container',\r\n                controller: 'locContainer',\r\n                // resolve: authentication\r\n            })\r\n            .state('loc_class', { // MOVE INTO MODAL\r\n                templateUrl: '../views/loc_class.html',\r\n                url: '/loc_class',\r\n                controller: 'locClass',\r\n                // resolve: authentication\r\n            })\r\n            .state('location_manage', {\r\n                templateUrl: '../views/location_manage.html',\r\n                url: '/location_manage',\r\n                controller: 'locManage',\r\n                // resolve: authentication\r\n            })\r\n            .state('trackbys', { // MOVE INTO MODAL\r\n                templateUrl: '../views/trackbys.html',\r\n                url: '/trackbys',\r\n                controller: 'trackBy',\r\n                // resolve: authentication\r\n            })\r\n            .state('settings', { // MOVE INTO MODAL\r\n                templateUrl: '../views/settings.html',\r\n                url: '/settings',\r\n                controller: 'settings',\r\n                // resolve: authentication\r\n            })\r\n            .state('item_create', { // MOVE INTO MODAL\r\n                templateUrl: '../views/item_create.html',\r\n                url: '/item_create',\r\n                controller: 'itemCreate',\r\n                // resolve: authentication\r\n            })\r\n            .state('item_manage', { // MOVE INTO MODAL\r\n                templateUrl: '../views/item_manage.html',\r\n                url: '/item_manage',\r\n                controller: 'itemManage',\r\n                // resolve: authentication\r\n            })\r\n    })","angular.module('app').controller('itemCreate', function ($scope, bcService, itemMainSrv, itemGetSrv, itemPostSrv, itemPutSrv, itemDeleteSrv, locationsListSrv, trackByGetSrv, userListSrv, settingsSrv) {\r\n    // // »»»»»»»»»»»»»»»»»»»║  TESTS \r\n    $scope.itemCreateTest = 'itemCreate controller is connected and operational'\r\n    $scope.itemGetSrvTest = itemGetSrv.itemGetSrvTest\r\n    $scope.itemPostSrvTest = itemPostSrv.itemPostSrvTest\r\n    $scope.itemPutSrvTest = itemPutSrv.itemPutSrvTest\r\n    $scope.itemDeleteSrvTest = itemDeleteSrv.itemDeleteSrvTest\r\n    $scope.itemMainSrvTest = itemMainSrv.itemMainSrvTest\r\n    // test barcode from service\r\n    $scope.getBC = () => {\r\n        $scope.barcode = bcService.upc\r\n        console.log($scope.barcode)\r\n    }\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  VARIABLES\r\n    $scope.itemCreateObj = {\r\n        has_package: false\r\n        , has_multiPiece: false\r\n        , is_consumable: false\r\n        , repOther: null\r\n        , replink: null\r\n    }\r\n    const testObj = {\r\n        af_period: \"Week\"\r\n        , af_time: 3\r\n        , common: Object\r\n        , description: \"desc\"\r\n        , has_multiPiece: true\r\n        , has_package: true\r\n        , is_consumable: true\r\n        , location_id: 1\r\n        , owner_id: 1\r\n        , price: 3.99\r\n        , purchase_date: \"2017-06-22\"\r\n        , quantity: 3\r\n        , reason: \"reason\"\r\n        , repItem: \"replink\"\r\n        , repOther: \"otherbox\"\r\n        , replink: \"linky\"\r\n        , retailer: \"retailer\"\r\n        , sentimental_rating: 3\r\n        , short_name: \"short\"\r\n        , warrenty: 4\r\n    }\r\n\r\n    $scope.trackbyValues = {}\r\n    const itemsObj = $scope.itemCreateObj\r\n    $scope.replink = 'replink'\r\n    $scope.repItem = $scope.replink\r\n    $scope.userId = {}\r\n    const commonLocObj = { loc_id: [] }\r\n\r\n    // .................... get current user\r\n    $scope.currentUser = () => itemMainSrv.getCurrentUser().then(response => {\r\n        $scope.thisUser = response.data.first_name\r\n        $scope.itemCreateObj.owner_id = response.data.id\r\n        $scope.userId.id = response.data.id\r\n    })\r\n    $scope.currentUser()\r\n    // .................... original package checkbox\r\n    $scope.originalPackaging = () => $scope.itemCreateObj.has_package = $scope.packageStatus\r\n\r\n    // .................... multiple piece checkbox\r\n    $scope.multiplePieces = () => $scope.itemCreateObj.has_multiPiece = $scope.multiPiece\r\n\r\n    // .................... consumable checkbox\r\n    $scope.isConsumable = () => $scope.itemCreateObj.is_consumable = $scope.consumable\r\n\r\n    // .................... sets sentimental value\r\n    $scope.rating = 1;\r\n    $scope.rateFunction = (rating) => $scope.itemCreateObj.sentimental_rating = rating\r\n\r\n    // .................... sets max date allowed\r\n    // <input id=\"datefield\" type='date' max='2000-13-13'></input>\r\n    var today = new Date();\r\n    var dd = today.getDate();\r\n    var mm = today.getMonth() + 1; //January is 0!\r\n    var yyyy = today.getFullYear();\r\n    if (dd < 10) {\r\n        dd = '0' + dd\r\n    }\r\n    if (mm < 10) {\r\n        mm = '0' + mm\r\n    }\r\n    today = yyyy + '-' + mm + '-' + dd;\r\n    document.getElementById(\"datefield\").setAttribute(\"max\", today);\r\n\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  GET LOCATION LIST\r\n    $scope.getLocations = () => locationsListSrv.getLocationsList().then(response => $scope.locations = response.data)\r\n    $scope.getLocations()\r\n\r\n    // .................... get custom list of locations \r\n    $scope.getLocations = () => locationsListSrv.getLocationsCustomList().then(response => {\r\n        var locGrid = response.data\r\n        $scope.gridOptions.data = locGrid\r\n    })\r\n    $scope.getLocations()\r\n\r\n    // .................... get default location\r\n    $scope.getDefaultLoc = () => settingsSrv.getDefaultLocation().then(response => {\r\n        $scope.loc = response.data[0].description;\r\n        $scope.locid = response.data[0].location_id;\r\n        $scope.defaultLocation = $scope.loc\r\n        $scope.itemCreateObj.location_id = $scope.locid\r\n    })\r\n    $scope.getDefaultLoc()\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ GET A LIST OF ALL TRACKBYS\r\n    $scope.gettrackbys = () => trackByGetSrv.getTrackByList().then(response => {\r\n        // console.log(response.data)\r\n        $scope.trackbys = response.data\r\n    })\r\n    $scope.gettrackbys()\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ GET USERS LIST\r\n    $scope.getUsers = () => userListSrv.getCustomUserList().then(response => $scope.users = response.data)\r\n    $scope.getUsers()\r\n\r\n    // .................... columns and data\r\n    $scope.gridOptions = {\r\n        enableRowSelection: true\r\n        , enableRowHeaderSelection: true\r\n        , multiSelect: true\r\n        , enableSelectAll: false\r\n        , enableFiltering: true\r\n        , columnDefs: [\r\n            { name: 'id', enableCellEdit: false, width: 75 }, { name: 'loc_desc', displayName: 'Description' }, { name: 'loc_class_name', displayName: 'Classification' }, { name: 'loc_class_desc', displayName: 'Class Desc.' }, { name: 'loc_container', displayName: 'Container' }\r\n        ]\r\n        , onRegisterApi: (gridApi) => {\r\n            gridApi.selection.on.rowSelectionChanged($scope, function (row) {\r\n                $scope.selected = row.isSelected\r\n                $scope.rowId = row.uid\r\n                $scope.rowObj = row.entity\r\n                $scope.selected === true ? commonLocObj.loc_id.push($scope.rowObj.id) : commonLocObj.loc_id.splice(commonLocObj.loc_id.indexOf($scope.rowObj.id), 1)\r\n                $scope.itemCreateObj.common = commonLocObj\r\n            })\r\n        }\r\n    }\r\n\r\n    $scope.locationId = () => $scope.itemCreateObj.location_id = $scope.locationOption.id\r\n\r\n    $scope.swapper = () => {\r\n        // console.log(\"swapped\")\r\n        $scope.linked = !$scope.linked\r\n    }\r\n\r\n\r\n\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  CREATE ITEMS\r\n    $scope.createItem = () => {\r\n\r\n        $scope.itemCreateObj.repItem = $scope.repItem\r\n        let loggedInUser = $scope.itemCreateObj.owner_id\r\n        if (loggedInUser !== $scope.userId.id) { $scope.itemCreateObj.owner_id = $scope.userId.id }\r\n        $scope.itemCreateObj.trackbys = $scope.trackbyValues\r\n        $scope.itemCreateObj.upc = $scope.barcode\r\n\r\n        console.log(itemsObj)//this is the object that will be sent to the server\r\n\r\n    }\r\n})","angular.module('app').controller('itemManage', function($scope, itemGetSrv, itemPostSrv, itemPutSrv, itemDeleteSrv){\r\n    // »»»»»»»»»»»»»»»»»»»║  TESTS \r\n    $scope.itemManageTest = 'itemManage controller is connected and operational'\r\n    $scope.itemGetSrvTest = itemGetSrv.itemGetSrvTest\r\n    $scope.itemPostSrvTest = itemPostSrv.itemPostSrvTest\r\n    $scope.itemPutSrvTest = itemPutSrv.itemPutSrvTest\r\n    $scope.itemDeleteSrvTest = itemDeleteSrv.itemDeleteSrvTest\r\n})","angular.module('app').controller('locClass', function ($scope, locClassSrv, uiGridConstants, ) {\r\n    // »»»»»»»»»»»»»»»»»»»║  TESTS \r\n    $scope.locClassTest = 'locClass controller is connected and operational'\r\n    $scope.locClassServiceTest = locClassSrv.locClassServiceTest\r\n\r\n    // // »»»»»»»»»»»»»»»»»»»║ CLEAR FORM\r\n    $scope.clearForm = () => document.getElementById(\"classCreateForm\").reset()\r\n\r\n    // // »»»»»»»»»»»»»»»»»»»║ LOCATION CLASSIFICATION MANIPULATION\r\n    // .................... get list of location classes and grid information\r\n    $scope.getLocClasses = () => locClassSrv.getLocClassesList().then((response) => {\r\n        $scope.locClasses = response.data\r\n        $scope.gridOptions.data = response.data\r\n    })\r\n    $scope.getLocClasses()\r\n\r\n    // // .................... location classes types\r\n    $scope.locClassObj = {}\r\n    $scope.createLocClassObj = () => {\r\n        $scope.gridOptions.data.push({\r\n            \"name\": $scope.locClassObj.name\r\n            , \"description\": $scope.locClassObj.description\r\n        });\r\n        // console.log(`this will be created ... ${JSON.stringify($scope.locClassObj)}`)\r\n        locClassSrv.createLocClassObj($scope.locClassObj)\r\n        $scope.clearForm()\r\n    }\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  COLUMNS AND DATA\r\n    $scope.gridOptions = {\r\n        enableRowSelection: true\r\n        , enableRowHeaderSelection: true\r\n        , multiSelect: false\r\n        , enableSelectAll: false\r\n        , enableFiltering: true\r\n        , columnDefs: [\r\n            { name: 'name', displayName: 'Name' }\r\n            , { name: 'description', displayName: 'Description' }\r\n        ]\r\n        , onRegisterApi: (gridApi) => {\r\n\r\n            gridApi.selection.on.rowSelectionChanged($scope, function (row) {\r\n                $scope.selected = row.isSelected\r\n                $scope.rowId = row.uid\r\n                $scope.rowObj = row.entity\r\n                $scope.enableDelete = false\r\n                $scope.selected === true ? $scope.enableDelete = false : $scope.enableDelete = true\r\n            })\r\n\r\n            // ...........   update the loc class on lost focus, tab, or enter\r\n            gridApi.edit.on.afterCellEdit($scope, function (rowEntity) {\r\n                $scope.updateCont = rowEntity\r\n                $scope.update($scope.updateCont)\r\n            })\r\n        }\r\n    }\r\n\r\n    // .................... update a location class\r\n    $scope.update = (upObj) => {\r\n        let cId = upObj.id\r\n        locClassSrv.updateLocClass(cId, upObj)\r\n    }\r\n\r\n    // .................... delete a container\r\n    $scope.delete = () => {\r\n        let gridData = $scope.gridOptions.data\r\n        let cId = $scope.rowObj.id\r\n        if ($scope.selected === true) {\r\n            for (let i = 0; i < gridData.length; i++) {\r\n                if (gridData[i].id === cId) {\r\n                    gridData.splice(i, 1)\r\n                }\r\n            }\r\n            locClassSrv.deleteLocClass(cId)\r\n            $scope.enableDelete = true\r\n        }\r\n    }\r\n\r\n})","angular.module('app').controller('locContainer', function ($scope, containerSrv, uiGridConstants, ) {\r\n    // »»»»»»»»»»»»»»»»»»»║  TESTS \r\n    $scope.locContainerTest = 'locContainerTest controller is connected and operational'\r\n    $scope.containerServiceTest = containerSrv.containerServiceTest\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ CLEAR FORM\r\n    $scope.clearForm = () => document.getElementById(\"containerCreateForm\").reset()\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ CONTAINER MANIPULATION\r\n    // .................... get list of container types and grid information\r\n    $scope.getContainers = () => containerSrv.getContainerList().then((response) => {\r\n        $scope.containers = response.data\r\n        $scope.gridOptions.data = response.data\r\n    })\r\n    $scope.getContainers()\r\n\r\n    // .................... create container types\r\n    $scope.container = {}\r\n    $scope.createContainer = () => {\r\n        $scope.gridOptions.data.push({\r\n            \"name\": $scope.container.name\r\n        });\r\n        // console.log(`this will be created ... ${JSON.stringify($scope.container)}`)\r\n        containerSrv.createContainer($scope.container)\r\n        $scope.clearForm()\r\n    }\r\n\r\n\r\n    // .................... update container types\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  COLUMNS AND DATA\r\n    $scope.gridOptions = {\r\n        enableRowSelection: true\r\n        , enableRowHeaderSelection: true\r\n        , multiSelect: false\r\n        , enableSelectAll: false\r\n        , enableFiltering: true\r\n        , columnDefs: [\r\n            { name: 'name', displayName: 'Description' }\r\n        ]\r\n        , onRegisterApi: (gridApi) => {\r\n\r\n            gridApi.selection.on.rowSelectionChanged($scope, function (row) {\r\n                $scope.selected = row.isSelected\r\n                $scope.rowId = row.uid\r\n                $scope.rowObj = row.entity\r\n                $scope.enableDelete = false\r\n                $scope.selected === true ? $scope.enableDelete = false : $scope.enableDelete = true\r\n            })\r\n\r\n            // ...........   update the user on lost focus, tab, or enter\r\n            gridApi.edit.on.afterCellEdit($scope, function (rowEntity) {\r\n                $scope.updateCont = rowEntity\r\n                $scope.update($scope.updateCont)\r\n            })\r\n        }\r\n    }\r\n\r\n    // .................... update a container\r\n    $scope.update = (upObj) => {\r\n        let cId = upObj.id\r\n        containerSrv.updateContainer(cId, upObj)\r\n    }\r\n\r\n    // .................... delete a container\r\n    $scope.delete = () => {\r\n        let gridData = $scope.gridOptions.data\r\n        let cId = $scope.rowObj.id\r\n        if ($scope.selected === true) {\r\n            for (let i = 0; i < gridData.length; i++) {\r\n                if (gridData[i].id === cId) {\r\n                    gridData.splice(i, 1)\r\n                }\r\n            }\r\n            containerSrv.deleteContainer(cId)\r\n            $scope.enableDelete = true\r\n        }\r\n    }\r\n\r\n})","angular.module('app').controller('locCreate', function ($scope, locCreateSrv, containerSrv, locClassSrv, locationsListSrv) {\r\n    // »»»»»»»»»»»»»»»»»»»║  TESTS \r\n    $scope.locCtrlTest = 'locCreate controller is connected and operational'\r\n    $scope.locCreateServiceTest = locCreateSrv.locCreateServiceTest\r\n    $scope.containerServiceTest = containerSrv.containerServiceTest\r\n    $scope.locClassServiceTest = locClassSrv.locClassServiceTest\r\n    $scope.locListServiceTest = locationsListSrv.locListServiceTest\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ CLEAR FORM\r\n    $scope.clearForm = () => document.getElementById(\"createLocationForm\").reset()\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  GET CONTAINER LIST \r\n    $scope.getContainers = () => containerSrv.getContainerList().then((response) => $scope.containers = response.data)\r\n    $scope.getContainers()\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  GET LOCATION CLASSIFICATION LIST\r\n    $scope.getLocClasses = () => locClassSrv.getLocClassesList().then((response) => $scope.locClasses = response.data)\r\n    $scope.getLocClasses()\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  GET LOCATION LIST\r\n    $scope.getLocations = () => locationsListSrv.getLocationsList().then((response) => $scope.locations = response.data)\r\n    $scope.getLocations()\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  CREATE A NEW LOCATION\r\n    //  .................... objects used to post\r\n    $scope.locClassObj = []\r\n    $scope.containerObj = []\r\n    $scope.locationParentObj = []\r\n    $scope.locObj = {}\r\n    //  .................... function to cover defaults are sent if not user didn't make selection\r\n    $scope.setDefaults = () => {\r\n        let cl = $scope.locClassObj.length\r\n        let c = $scope.containerObj.length\r\n        let p = $scope.locationParentObj.length\r\n        cl === 0 ? $scope.locObj.loc_class_id = 1 : undefined\r\n        c === 0 ? $scope.locObj.container_id = 1 : undefined\r\n        p === 0 ? $scope.locObj.parent_location_id = 1 : undefined\r\n    }\r\n    // ....................  create location\r\n    $scope.createLocation = () => {\r\n        $scope.getLocations()\r\n        $scope.locObj.loc_class_id = $scope.locClassObj.id\r\n        $scope.locObj.container_id = $scope.containerObj.id\r\n        $scope.locObj.parent_location_id = $scope.locationParentObj.id\r\n        $scope.setDefaults()\r\n        var exists = 0\r\n        for (let i = 0; i < $scope.locations.length; i++) {\r\n            if ($scope.locations[i].description === $scope.locObj.description && $scope.locations[i].parent_location_id === $scope.locObj.parent_location_id) {\r\n                exists = 1\r\n                break;\r\n            }\r\n            else {\r\n                exists = 0\r\n            }\r\n        }\r\n        if(exists === 1) {\r\n            alert(`this is a duplicate`)\r\n        }\r\n        else {\r\n            locCreateSrv.submitLocationInfo($scope.locObj)\r\n            $scope.getLocations() \r\n            $scope.clearForm()\r\n        }\r\n    }\r\n\r\n})","angular.module('app').controller('locManage', function ($scope, locationsListSrv, locationUpdateSrv, locationDeleteSrv) {\r\n    // »»»»»»»»»»»»»»»»»»»║  TESTS \r\n    $scope.locManageTest = 'locManage controller is connected and operational'\r\n    $scope.locListServiceTest = locationsListSrv.locListServiceTest\r\n\r\n    // // »»»»»»»»»»»»»»»»»»»║ LOCATION CLASSIFICATION MANIPULATION\r\n    // .................... get list of location classes and grid information\r\n    $scope.getLocations = () => locationsListSrv.getLocationsCustomList().then((response) => {\r\n        $scope.gridOptions.data = response.data\r\n    })\r\n    $scope.getLocations()\r\n\r\n    // .................... columns and data\r\n    $scope.gridOptions = {\r\n        enableRowSelection: true\r\n        , enableRowHeaderSelection: true\r\n        , multiSelect: false\r\n        , enableSelectAll: false\r\n        , enableFiltering: true\r\n        , columnDefs: [\r\n            { name: 'id', enableCellEdit: false, width: 75 }\r\n            , { name: 'loc_desc', displayName: 'Description' }\r\n            , { name: 'loc_class_name', displayName: 'Classification', enableCellEdit: false }\r\n            , { name: 'loc_class_desc', displayName: 'Class Desc.', enableCellEdit: false }\r\n            , { name: 'loc_container', displayName: 'Container', enableCellEdit: false }\r\n            , { name: 'x_coordinate', displayName: 'X', width: 75 }\r\n            , { name: 'y_coordinate', displayName: 'Y', width: 75 }\r\n            , { name: 'z_coordinate', displayName: 'Z', width: 75 }\r\n            , { name: 'parent_location_id', displayName: 'Parent', width: 110 }\r\n        ]\r\n        , onRegisterApi: (gridApi) => {\r\n\r\n            gridApi.selection.on.rowSelectionChanged($scope, function (row) {\r\n                $scope.selected = row.isSelected\r\n                $scope.rowId = row.uid\r\n                $scope.rowObj = row.entity\r\n                $scope.enableDelete = false\r\n                $scope.selected === true ? $scope.enableDelete = false : $scope.enableDelete = true\r\n            })\r\n\r\n            // ...........   update the location on lost focus, tab, or enter\r\n            gridApi.edit.on.afterCellEdit($scope, function (rowEntity) {\r\n                $scope.updateCont = rowEntity\r\n                // ............. drop containers and classes text from entity obj\r\n                var gridObj = {container_id: rowEntity.container_id, id: rowEntity.id, loc_class_id: rowEntity.loc_class_id, loc_desc: rowEntity.loc_desc, parent_location_id: rowEntity.parent_location_id, x_coordinate: rowEntity.x_coordinate, y_coordinate: rowEntity.y_coordinate, z_coordinate: rowEntity.z_coordinate}\r\n                // ............. call update\r\n                $scope.update(gridObj)\r\n            })\r\n        }\r\n    }\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  UPDATE LOCATIONS\r\n    $scope.update = (updateObj) => locationUpdateSrv.submitLocationInfo(updateObj)\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  DELETE LOCATIONS\r\n    $scope.delete = () => {\r\n        let gridData = $scope.gridOptions.data\r\n        let cId = $scope.rowObj.id\r\n        if ($scope.selected === true) {\r\n            for (let i = 0; i < gridData.length; i++) {\r\n                if (gridData[i].id === cId) {\r\n                    gridData.splice(i, 1)\r\n                }\r\n            }\r\n            locationDeleteSrv.deleteLocation(cId)\r\n            $scope.enableDelete = true\r\n        }\r\n    }\r\n\r\n})","angular.module('app').controller('mainCtrl', function ($scope, authService, checkUserSrv) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    $scope.controllerTest = 'Controller Engaged!!!'\r\n\r\n    $scope.loggedIn = false;\r\n\r\n    $scope.login = () => $scope.loggedIn = true\r\n    $scope.logout = () => {\r\n        $scope.loggedIn = false\r\n        authService.logout()\r\n    }\r\n    // .......................  checks to see if the user is logged in\r\n    // checkUserSrv.getUser().then((response) => $scope.loggedIn = true)\r\n\r\n})","","","angular.module('app').controller('settings', function ($scope, uiGridConstants, locationsListSrv, settingsSrv) {\r\n    // »»»»»»»»»»»»»»»»»»»║  TESTS \r\n    $scope.settingsTest = 'settings controller is connected and operational'\r\n    $scope.locListServiceTest = locationsListSrv.locListServiceTest\r\n    // »»»»»»»»»»»»»»»»»»»║  VARIABLES \r\n    $scope.defaultLocation\r\n    $scope.loc\r\n    var sendArr = {}\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  DATABASE CALLS\r\n    // .................... get list of locations\r\n    $scope.getLocations = () => locationsListSrv.getLocationsList().then(response => $scope.locations = response.data)\r\n    $scope.getLocations()\r\n\r\n    // .................... get default location\r\n    $scope.getDefaultLoc = () => settingsSrv.getDefaultLocation().then(response => { \r\n        $scope.loc = response.data[0].description;\r\n        $scope.locid = response.data[0].id\r\n         $scope.defaultLocation = $scope.loc })\r\n    $scope.getDefaultLoc()\r\n\r\n    // .................... will convert to update default location\r\n    $scope.updateDefault = () => {\r\n        var dl = $scope.defaultLocation\r\n        if (typeof dl === 'string') {\r\n            // console.log(dl)\r\n            sendArr.d_location_id = $scope.locid\r\n        }\r\n        else {\r\n            // console.log(dl.description)\r\n            sendArr.d_location_id = dl.id\r\n        }        \r\n        console.log(sendArr) //this is what we will send to the db PUT\r\n        settingsSrv.updateDefaultLocation(sendArr)\r\n    }\r\n})","angular.module('app').controller('trackBy', function ($scope, uiGridConstants, trackByGetSrv, trackByPostSrv, trackByPutSrv, trackByDeleteSrv) {\r\n    // »»»»»»»»»»»»»»»»»»»║  TESTS \r\n    $scope.trackByTest = 'trackBy controller is connected and operational'\r\n    $scope.trackByGetSrvTest = trackByGetSrv.trackByGetSrvTest\r\n    $scope.trackByPostSrvTest = trackByPostSrv.trackByPostSrvTest\r\n    $scope.trackByPutSrvTest = trackByPutSrv.trackByPutSrvTest\r\n    $scope.trackByDeleteSrvTest = trackByDeleteSrv.trackByDeleteSrvTest\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ CLEAR FORM\r\n    $scope.clearForm = () => document.getElementById(\"trackbyCreateForm\").reset()\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ TRACKBY MANIPULATION\r\n    // .................... get list of trackby types and grid information\r\n    $scope.gettrackbys = () => trackByGetSrv.getTrackByList().then((response) => {\r\n        $scope.trackbys = response.data\r\n        $scope.gridOptions.data = response.data\r\n        // console.log(`gridOptions.data = ${JSON.stringify(response.data)}`)\r\n    })\r\n    $scope.gettrackbys()\r\n\r\n    // .................... create trackby types\r\n    $scope.trackByObj = {}\r\n    $scope.createTrackBy = () => {\r\n        $scope.gridOptions.data.push({\r\n            \"trackby_name\": $scope.trackByObj.trackby_name\r\n            , \"trackby_value\": $scope.trackByObj.trackby_value\r\n            , \"trackby_category\": $scope.trackByObj.trackby_category\r\n        });\r\n        trackByPostSrv.createTrackBy($scope.trackByObj)\r\n\r\n        $scope.clearForm()\r\n    }\r\n\r\n\r\n    // .................... update trackby types\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  COLUMNS AND DATA\r\n    $scope.gridOptions = {\r\n        enableRowSelection: true\r\n        , enableRowHeaderSelection: true\r\n        , multiSelect: false\r\n        , enableSelectAll: false\r\n        , enableFiltering: true\r\n        , columnDefs: [\r\n            { name: 'id', enableCellEdit: false}\r\n            , { name: 'trackby_name', displayName: 'Name' }\r\n            , { name: 'trackby_value', displayName: 'Value' }\r\n            , { name: 'trackby_category', displayName: 'Category' }\r\n        ]\r\n\r\n        , onRegisterApi: (gridApi) => {\r\n\r\n            gridApi.selection.on.rowSelectionChanged($scope, function (row) {\r\n                $scope.selected = row.isSelected\r\n                $scope.rowId = row.uid\r\n                $scope.rowObj = row.entity\r\n                $scope.enableDelete = false\r\n                $scope.selected === true ? $scope.enableDelete = false : $scope.enableDelete = true\r\n            })\r\n\r\n            // ...........   update the user on lost focus, tab, or enter\r\n            gridApi.edit.on.afterCellEdit($scope, function (rowEntity) {\r\n                $scope.updateCont = rowEntity\r\n                $scope.update($scope.updateCont)\r\n            })\r\n        }\r\n    }\r\n\r\n    // .................... update a trackby\r\n    $scope.update = (upObj) => {\r\n        let cId = upObj.id\r\n        trackByPutSrv.updateTrackBy(cId, upObj)\r\n    }\r\n\r\n    // .................... delete a trackby\r\n    $scope.delete = () => {\r\n        let gridData = $scope.gridOptions.data\r\n        let cId = $scope.rowObj.id\r\n        if ($scope.selected === true) {\r\n            for (let i = 0; i < gridData.length; i++) {\r\n                if (gridData[i].id === cId) {\r\n                    gridData.splice(i, 1)\r\n                }\r\n            }\r\n            trackByDeleteSrv.deleteTrackBy(cId)\r\n            $scope.enableDelete = true\r\n        }\r\n    }\r\n\r\n})","angular.module('app').controller('userCreate', function ($scope, stateListSrv, countryListSrv, updateUserSrv, postUserInfoSrv, userListSrv, deleteAllUsersSrv) {\r\n    // »»»»»»»»»»»»»»»»»»»║  TESTS \r\n    $scope.userCreateTest = 'userCreate controller is working correctly'\r\n    $scope.stateListSrvTest = stateListSrv.serviceTest\r\n    $scope.postUserInfoSrvTest = postUserInfoSrv.serviceTest\r\n    $scope.userServiceTest = userListSrv.userServiceTest\r\n    $scope.deleteAllUsersServiceTest = deleteAllUsersSrv.deleteAllUsersServiceTest\r\n    $scope.countryListServiceTest = countryListSrv.countryListServiceTest\r\n    \r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  VARIABLES\r\n\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  GET STATES LIST\r\n    $scope.states = () => stateListSrv.getStatesList().then((response) => $scope.stateName = response.data)\r\n    $scope.states()\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  GET COUNTRY LIST\r\n    $scope.country = () => countryListSrv.getcountryList().then((response) => $scope.countryName = response.data)\r\n    $scope.country()\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ CLEAR FORM\r\n    $scope.clearForm = () => document.getElementById(\"userCreateForm\").reset()\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ SUBMIT USER FORM DATA\r\n    // .................... user object to submit   \r\n    $scope.userInfo = { \"country_id\": 1, \"inactive\": false }\r\n\r\n    // .................... sets rent rating\r\n    $scope.rating = 5;\r\n    $scope.rateFunction = (rating) => $scope.userInfo.renter_rating = rating\r\n\r\n    // .................... sets checkbox\r\n    $scope.deactivateUserChecked = () => $scope.userInfo.inactive = $scope.userStatus\r\n\r\n\r\n    $scope.submit = () => {\r\n        var sName = $scope.stateObj.name\r\n        var exists = 0\r\n\r\n        // .................... checks to verify that the user doesn't already exist in the database.\r\n        var getUsers = () => {\r\n            userListSrv.getUserList().then((response) => {\r\n                $scope.users = response.data\r\n                // console.log(JSON.stringify($scope.users))\r\n                for (let i = 0; i < $scope.users.length; i++) {\r\n                    // console.log(`db email ${$scope.users[i].email}`)\r\n                    if ($scope.users[i].email === $scope.userInfo.email && $scope.users[i].first_name === $scope.userInfo.firstName) {\r\n                        exists = 1\r\n                        break;\r\n                    }\r\n                }\r\n                // console.log(`exists inside after function ${exists}`)\r\n                for (let i = 0; i < $scope.stateName.length; i++) {\r\n                    if ($scope.stateName[i].name === sName) {\r\n                        $scope.userInfo.state_id = $scope.stateName[i].id\r\n                    }\r\n                }\r\n                if (exists === 0) {\r\n                    // console.log(`userInfo object that will be sent is ${JSON.stringify($scope.userInfo)}`)\r\n                    postUserInfoSrv.submitUserInfo($scope.userInfo)\r\n                    alert(`User has been created.`)\r\n                    $scope.clearForm()\r\n                }\r\n                else {\r\n                    alert(`User already exists!`)\r\n                }\r\n            })\r\n        }\r\n        getUsers()\r\n    }\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ DELETE ALL USERS\r\n    $scope.deleteUsers = () => { return deleteAllUsersSrv.deleteAllUsers() }\r\n\r\n\r\n\r\n    // no code below this line\r\n})","angular.module('app').controller('userManage', function ($scope, uiGridConstants, userListSrv, stateListSrv, countryListSrv, updateUserSrv, getUserColumnsSrv) {\r\n    // »»»»»»»»»»»»»»»»»»»║  TESTS\r\n    $scope.userManageControllerTest = 'userManage Controller is ready to role!'\r\n    $scope.getUserColumnsSrvServiceTest = getUserColumnsSrv.getUserColumnsSrvServiceTest\r\n    $scope.updateUserServiceTest = updateUserSrv.updateUserServiceTest\r\n    $scope.StateServiceTest = stateListSrv.serviceTest\r\n    $scope.countryListServiceTest = countryListSrv.countryListServiceTest\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  GET STATES LIST\r\n    $scope.states = () => stateListSrv.getStatesList().then((response) => $scope.stateName = response.data)\r\n    $scope.states()\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  GET COUNTRY LIST\r\n    $scope.country = () => countryListSrv.getcountryList().then((response) => $scope.countryName = response.data)\r\n    $scope.country()\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║  COLUMNS AND DATA\r\n    $scope.gridOptions = {\r\n        enableRowSelection: false\r\n        , enableRowHeaderSelection: false\r\n        , enableFiltering: true\r\n        , columnDefs: [ //this shows which columns show in grid. the value needs to match the data key.\r\n            // { name: 'id' },\r\n            { name: 'first_name' }\r\n            , { name: 'last_name' }\r\n            , { name: 'phone' }\r\n            , { name: 'email' }\r\n            , { name: 'state', displayName: 'State'}\r\n        ]\r\n        , onRegisterApi: (gridApi) => {\r\n            $scope.grid1Api = gridApi\r\n\r\n            // ...........   update the user on lost focus, tab, or enter\r\n            gridApi.edit.on.afterCellEdit($scope, function (rowEntity) {\r\n                $scope.updatedUser = rowEntity\r\n                $scope.update($scope.updatedUser)\r\n            })\r\n        }\r\n    };\r\n\r\n    // ....................  get column data\r\n    $scope.getUsers = () => userListSrv.getCustomUserList().then((response) => $scope.gridOptions.data = response.data)\r\n    $scope.getUsers()\r\n\r\n\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ UPDATE USER\r\n    $scope.update = (updateObj) => {\r\n        var uId = updateObj.id\r\n        var expectedObj = {\r\n            \"firstName\": updateObj.first_name\r\n            , \"lastName\": updateObj.last_name\r\n            , \"phone\": updateObj.phone\r\n            , \"email\": updateObj.email\r\n            , \"address1\": updateObj.address1\r\n            , \"address2\": updateObj.address2\r\n            , \"city\": updateObj.city\r\n            , \"state_id\": updateObj.state\r\n            , \"country_id\": updateObj.country\r\n            , \"zip\": updateObj.zip\r\n            , \"renter_rating\": updateObj.renter_rating\r\n            , \"inactive\": updateObj.inactive\r\n            , \"auth_id\": updateObj.auth_id\r\n        }\r\n        let getId = () => {\r\n            // ..... convert state name\r\n            for (let i = 0; i < $scope.stateName.length; i++) {\r\n                if ($scope.stateName[i].name === expectedObj.state_id) {\r\n                    expectedObj.state_id = $scope.stateName[i].id\r\n                }\r\n            }\r\n            // ..... convert country name\r\n            for (let i = 0; i < $scope.countryName.length; i++) {\r\n                if ($scope.countryName[i].name === expectedObj.country_id) {\r\n                    expectedObj.country_id = $scope.countryName[i].id\r\n                }\r\n            }\r\n            // console.log(`this is what will be sent! ${uId}`)\r\n            // console.log(`this is what will be sent! ${JSON.stringify(expectedObj)}`)\r\n            updateUserSrv.updateUser(uId, expectedObj)\r\n        }\r\n        getId()\r\n    }\r\n})","angular.module('app').directive('bcScanner',\r\n    function () {\r\n        return {\r\n            restrict: 'E',\r\n            templateUrl: '../views/barcodeScanner.html',\r\n            scope: '@',\r\n            controller: ($scope, bcService) => {\r\n                // .................... variables\r\n                $scope.barcode\r\n                $scope.storeBarcode = () => bcService.storeBarcode($scope.barcode)\r\n\r\n                // .................... quagga barcode scanner\r\n                var Quagga = window.Quagga;\r\n                var resultsArr = []\r\n                var counter = resultsArr.length\r\n                var App = {\r\n                    _lastResult: null,\r\n                    init: function () {\r\n                        this.attachListeners();\r\n                    },\r\n                    activateScanner: function () {\r\n                        var scanner = this.configureScanner('.overlay__content'),\r\n                            onDetected = function (result) {\r\n                                resultsArr.push(result.codeResult.code)\r\n                                counter = resultsArr.length\r\n                                // console.log(\"On Detected :\", resultsArr)\r\n                                // console.log(\"counter = \", counter)\r\n                                if (counter === 10) {\r\n                                    var mc = mostCommon(resultsArr)\r\n                                    console.log(\"most common\", mc)\r\n                                    $scope.barcode = mc                                    \r\n                                    $scope.storeBarcode()\r\n                                    $scope.$apply()\r\n                                    $scope.stoppy()\r\n                                    $scope.showBarcodeWindow = false\r\n                                    $scope.$apply()\r\n                                    snd.play()\r\n                                }\r\n                            }.bind(this),\r\n                            stop = function () {\r\n                                scanner.stop();  // should also clear all event-listeners?\r\n                                scanner.removeEventListener('detected', onDetected);\r\n                                this.hideOverlay();\r\n                                this.attachListeners();\r\n                            }.bind(this);\r\n\r\n                        this.showOverlay(stop);\r\n                        console.log(\"activateScanner\");\r\n                        scanner.addEventListener('detected', onDetected).start();\r\n                    },\r\n                    showOverlay: function (cancelCb) {\r\n                        $scope.showBarcodeWindow = true\r\n                        $scope.$apply()\r\n                        document.querySelector('.container ')\r\n                            .classList.add('hide');\r\n                        document.querySelector('.overlay--inline')\r\n                            .classList.add('show');\r\n                        $scope.stoppy = () => {\r\n                            cancelCb();\r\n                        };\r\n                    },\r\n                    attachListeners: function () {\r\n                        var button = document.querySelector('button.scan'),\r\n                            self = this;\r\n\r\n                        button.addEventListener(\"click\", function clickListener(e) {\r\n                            e.preventDefault();\r\n                            button.removeEventListener(\"click\", clickListener);\r\n                            self.activateScanner();\r\n                        });\r\n                    },\r\n                    hideOverlay: function () {\r\n                        document.querySelector('.container ')\r\n                            .classList.remove('hide');\r\n                        document.querySelector('.overlay--inline')\r\n                            .classList.remove('show');\r\n                    },\r\n                    configureScanner: function (selector) {\r\n                        var scanner = Quagga\r\n                            .decoder({ readers: ['ean_reader'] })\r\n                            .locator({ patchSize: 'medium' })\r\n                            .fromSource({\r\n                                target: selector,\r\n                                constraints: {\r\n                                    width: 600,\r\n                                    height: 600,\r\n                                    facingMode: \"environment\"\r\n                                }\r\n                            });\r\n                        return scanner;\r\n                    }\r\n                };\r\n                App.init();\r\n\r\n                // .................... take results array and get the average\r\n                const mostCommon = (arr) => {\r\n                    return arr.sort((a, b) =>\r\n                        arr.filter(v => v === a).length\r\n                        - arr.filter(v => v === b).length\r\n                    ).pop()\r\n                }\r\n                // .................... play a sound\r\n                var snd = new Audio(\"../audio/cameraOne.wav\")\r\n\r\n                // .................... hide / show playback window\r\n                $scope.showBarcodeWindow = false\r\n            }\r\n\r\n        };\r\n    }\r\n);","angular.module('app').directive('starRating', \r\n    function () {\r\n        return {\r\n            restrict: 'A',\r\n            template: '<ul class=\"rating\">'\r\n            + '\t<li ng-repeat=\"star in stars\" ng-class=\"star\" ng-click=\"toggle($index)\">'\r\n            + '\\u2605'\r\n            + '</li>'\r\n            + '</ul>',\r\n            scope: {\r\n                ratingValue: '=',\r\n                max: '=',\r\n                onRatingSelected: '&'\r\n            },\r\n            link: function (scope, elem, attrs) {\r\n                var updateStars = function () {\r\n                    scope.stars = [];\r\n                    for (var i = 0; i < scope.max; i++) {\r\n                        scope.stars.push({\r\n                            filled: i < scope.ratingValue\r\n                        });\r\n                    }\r\n                };\r\n\r\n                scope.toggle = function (index) {\r\n                    scope.ratingValue = index + 1;\r\n                    scope.onRatingSelected({\r\n                        rating: index + 1\r\n                    });\r\n                };\r\n\r\n                scope.$watch('ratingValue',\r\n                    function (oldVal, newVal) {\r\n                        if (newVal) {\r\n                            updateStars();\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        };\r\n    }\r\n);","angular.module('app').directive('trackByDir', function (trackByGetSrv) {\r\n  return {\r\n    restrict: 'E'\r\n    , link: (scope, elem, attr) => {\r\n      // // .................... get list of trackby types and grid information\r\n      // $scope.gettrackbys = () => trackByGetSrv.getTrackByList().then((response) => {\r\n      //   $scope.trackbys = response.data\r\n      // })\r\n      // $scope.gettrackbys()\r\n      // < div ng-repeat=\"trackby in trackbys\" >\r\n      //     <input type=\"text\" placeholder=\"trackby.[name]\" ng-model=\"trackby.value\">\r\n      // </div>\r\n    }\r\n  };\r\n});","angular.module('app').service('authService', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.authServiceTest = 'the authService is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    this.logout = () => $http.get('/auth/logout').then(response => window.location = response.data)\r\n})","angular.module('app').service('bcService', function($http){\r\n    // VARIABLES\r\n    this.upc\r\n\r\n    //FUNCTIONS\r\n    this.storeBarcode = (bc) => {\r\n        console.log(\"barcode was stored and is\", bc)\r\n        this.upc = bc}\r\n    \r\n})","angular.module('app').service('checkUserSrv', function($http){\r\n\r\nthis.getUser = () => $http.get('http://localhost:3000/auth/me')\r\n\r\n})","angular.module('app').service('containerSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.containerServiceTest = 'the containerSrv is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    this.name \r\n    // ...................  get containers\r\n    this.getContainerList = () => ($http.get('http://localhost:3000/api/containers'))\r\n    // ...................  create containers\r\n    this.createContainer = (data) => {\r\n        $http({\r\n            url: 'http://localhost:3000/api/containers',\r\n            method: 'POST',\r\n            data: data\r\n        })\r\n    }\r\n    // ...................  update containers\r\n    this.updateContainer = (id, data) => {\r\n        $http({\r\n            url: 'http://localhost:3000/api/containers/' + id,\r\n            method: 'PUT',\r\n            data: data\r\n        })\r\n    }\r\n    // ...................  delete containers\r\n    this.deleteContainer = (id) => {\r\n        $http({\r\n            url: 'http://localhost:3000/api/containers/' + id,\r\n            method: 'DELETE'\r\n        })\r\n    }\r\n})","angular.module('app').service('countryListSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.countryListServiceTest = 'the countryListSrv is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    this.getcountryList = () => ($http.get('http://localhost:3000/api/country'))\r\n})","angular.module('app').service('deleteAllUsersSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.deleteAllUsersServiceTest = 'the deleteAllUsersSrv is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    this.deleteAllUsers = function () {\r\n        $http({\r\n            url: 'http://localhost:3000/api/user',\r\n            method: 'DELETE'\r\n        }).then((httpResponse) => console.log('response:', JSON.stringify(httpResponse)))\r\n    }\r\n\r\n})","angular.module('app').service('getUserColumnsSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.getUserColumnsSrvServiceTest = 'the getUserColumnsSrv is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    this.getColumnList = () => ($http.get('http://localhost:3000/api/user/columns'))\r\n})\r\n","angular.module('app').service('itemDeleteSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.itemDeleteSrvTest = 'the itemDeleteSrv is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    // ...................  delete items\r\n    this.deleteItem = (id) => {\r\n        $http({\r\n            url: '/api/trackbys/' + id,\r\n            method: 'DELETE'\r\n        })\r\n    }\r\n})","angular.module('app').service('itemGetSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.itemGetSrvTest = 'the itemGetSrv is connected'\r\n\r\n    // // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    // ...................  get items\r\n    this.getItemList = () => $http.get('/api/trackbys/')\r\n})","angular.module('app').service('itemMainSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.itemMainSrvTest = 'the itemMainSrv is connected'\r\n\r\n    // // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    // ...................  get logged in user\r\n    this.getCurrentUser = () => $http.get('/auth/me/')\r\n})","angular.module('app').service('itemPostSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.itemPostSrvTest = 'the itemPostSrv is connected'\r\n\r\n    // // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    // ...................  create item\r\n    this.createItem = (data) => {\r\n        $http({\r\n            url: '/api/trackbys/',\r\n            method: 'POST',\r\n            data: data\r\n        })\r\n    }\r\n})","angular.module('app').service('itemPutSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.itemPutSrvTest = 'the itemPutSrv is connected'\r\n\r\n    // // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    // ...................  update items\r\n    this.updateItem = (id, data) => {\r\n        $http({\r\n            url: '/api/trackbys/' + id,\r\n            method: 'PUT',\r\n            data: data\r\n        })\r\n    }\r\n})","angular.module('app').service('locationDeleteSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.locationDeleteServiceTest = 'the locationDeleteSrv is connected'\r\n\r\n    // // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    // ...................  delete loc_classes\r\n    this.deleteLocation = (id) => {\r\n        $http({\r\n            url: 'http://localhost:3000/api/locations/' + id,\r\n            method: 'DELETE'\r\n        })\r\n    }\r\n})","angular.module('app').service('locationsListSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.locListServiceTest = 'the locationsListSrv is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    this.getLocationsList = () => ($http.get('http://localhost:3000/api/locations')) \r\n    this.getLocationsCustomList = () => ($http.get('http://localhost:3000/api/locations/custom')) \r\n})","angular.module('app').service('locationUpdateSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.locationUpdateServiceTest = 'the locationUpdateSrv is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    this.submitLocationInfo = (data) => {\r\n        // console.log(`data to be sent ${JSON.stringify(data)}`)\r\n        $http({\r\n            url: 'http://localhost:3000/api/locations/' + data.id,\r\n            method: 'PUT',\r\n            data: data\r\n        })\r\n    }\r\n})","angular.module('app').service('locClassSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.locClassServiceTest = 'the locClassSrv is connected'\r\n\r\n    // // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    // ...................  get loc_classes\r\n    this.getLocClassesList = () => ($http.get('http://localhost:3000/api/loc_classes'))\r\n    // ...................  create loc_classes\r\n    this.createLocClassObj = (data) => {\r\n        $http({\r\n            url: 'http://localhost:3000/api/loc_classes',\r\n            method: 'POST',\r\n            data: data\r\n        })\r\n    }\r\n    // ...................  update loc_classes\r\n    this.updateLocClass = (id, data) => {\r\n        $http({\r\n            url: 'http://localhost:3000/api/loc_classes/' + id,\r\n            method: 'PUT',\r\n            data: data\r\n        })\r\n    }\r\n    // ...................  delete loc_classes\r\n    this.deleteLocClass = (id) => {\r\n        $http({\r\n            url: 'http://localhost:3000/api/loc_classes/' + id,\r\n            method: 'DELETE'\r\n        })\r\n    }\r\n})","angular.module('app').service('locCreateSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.locCreateServiceTest = 'the locCreateSrv is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    this.submitLocationInfo = (data) => {\r\n        $http({\r\n            url: 'http://localhost:3000/api/locations',\r\n            method: 'POST',\r\n            data: data\r\n        })\r\n    }\r\n})","angular.module('app').service('postUserInfoSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.serviceTest = 'the postUserInfoSrv is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    this.submitUserInfo = (data) => {\r\n        // console.log(`clicked submit and got ${JSON.stringify(data)}`)\r\n        $http({\r\n            url: 'http://localhost:3000/api/users',\r\n            method: 'POST',\r\n            data: data\r\n        })\r\n    }\r\n})","angular.module('app').service('settingsSrv', function ($http) {\r\n    // ...................  get default location\r\n    this.getDefaultLocation = () => $http.get('http://localhost:3000/api/settings/default_location')\r\n\r\n    // ...................  update default location\r\n    this.updateDefaultLocation = (data) => {\r\n        console.log('sending data')\r\n        console.log(data)\r\n        $http({\r\n            url: '/api/settings/default_location',\r\n            method: 'PUT',\r\n            data: data\r\n        })\r\n    }\r\n\r\n})","angular.module('app').service('stateListSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.serviceTest = 'the stateListSrv is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    this.getStatesList = () => ($http.get('http://localhost:3000/api/states'))\r\n})","angular.module('app').service('trackByDeleteSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.trackByDeleteSrvTest = 'the trackByDeleteSrv is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    // ...................  delete trackbys\r\n    this.deleteTrackBy = (id) => {\r\n        $http({\r\n            url: 'http://localhost:3000/api/trackbys/' + id,\r\n            method: 'DELETE'\r\n        })\r\n    }\r\n})","angular.module('app').service('trackByGetSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.trackByGetSrvTest = 'the trackByGetSrv is connected'\r\n\r\n    // // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    // ...................  get trackbys\r\n    this.getTrackByList = () => ($http.get('http://localhost:3000/api/trackbys/'))\r\n})","angular.module('app').service('trackByPostSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.trackByPostSrvTest = 'the trackByPostSrv is connected'\r\n\r\n    // // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    // ...................  create trackbys\r\n    this.createTrackBy = (data) => {\r\n        $http({\r\n            url: 'http://localhost:3000/api/trackbys/',\r\n            method: 'POST',\r\n            data: data\r\n        })\r\n    }\r\n})","angular.module('app').service('trackByPutSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.trackByPutSrvTest = 'the trackByPutSrv is connected'\r\n\r\n    // // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    // ...................  update trackbys\r\n    this.updateTrackBy = (id, data) => {\r\n        $http({\r\n            url: 'http://localhost:3000/api/trackbys/' + id,\r\n            method: 'PUT',\r\n            data: data\r\n        })\r\n    }\r\n})","angular.module('app').service('updateUserSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.updateUserServiceTest = 'the updateUserSrv is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    this.updateUser = (id, data) => {\r\n        $http({\r\n            url: 'http://localhost:3000/api/users/' + id,\r\n            method: 'PUT',\r\n            data: data\r\n        })\r\n    }\r\n})\r\n\r\n","angular.module('app').service('userListSrv', function ($http) {\r\n    // »»»»»»»»»»»»»»»»»»»║ TESTS\r\n    this.userServiceTest = 'the userListSrv is connected'\r\n\r\n    // »»»»»»»»»»»»»»»»»»»║ ENDPOINTS\r\n    this.getUserList = () => ($http.get('http://localhost:3000/api/users'))\r\n    this.getCustomUserList = () => ($http.get('http://localhost:3000/api/users/custom'))\r\n})"]}